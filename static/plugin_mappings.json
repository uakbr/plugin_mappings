{
    "Access Analyzer Active Findings": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that IAM Access analyzer findings are reviewed and resolved by taking all necessary actions.",
        "PluginRecommendation": "[DEFAULT] Investigate into active findings in your account and do the needful until you have zero active findings.",
        "PluginRiskDescription": "IAM Access Analyzer helps you evaluate access permissions across your AWS cloud environment and gives insights into intended access to your resources. It can monitor the access policies associated with S3 buckets, KMS keys, SQS queues, IAM roles and Lambda functions for permissions changes."
    },
    "Access Analyzer Enabled": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that IAM Access analyzer is enabled for all regions.",
        "PluginRecommendation": "[DEFAULT] Enable Access Analyzer for all regions",
        "PluginRiskDescription": "Access Analyzer allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. It analyzes only policies that are applied to resources in the same AWS region."
    },
    "ACM Certificate Expiry": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Detect upcoming expiration of ACM certificates",
        "PluginRecommendation": "[DEFAULT] Ensure AWS is able to renew the certificate via email or DNS validation of the domain.",
        "PluginRiskDescription": "Certificates that have expired will trigger warnings in all major browsers. AWS will attempt to automatically renew the certificate but may be unable to do so if email or DNS validation cannot be confirmed."
    },
    "ACM Certificate Has Tags": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that ACM Certificates have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify ACM certificate and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "ACM Single Domain Name Certificates": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that ACM single domain name certificates are used instead of wildcard certificates within your AWS account.",
        "PluginRecommendation": "[DEFAULT] Configure ACM managed certificates to use single name domain instead of wildcards.",
        "PluginRiskDescription": "Using wildcard certificates can compromise the security of all sites i.e. domains and subdomains if the private key of a certificate is hacked. So it is recommended to use ACM single domain name certificates instead of wildcard certificates."
    },
    "ACM Certificate Validation": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] ACM certificates should be configured to use DNS validation.",
        "PluginRecommendation": "[DEFAULT] Configure ACM managed certificates to use DNS validation.",
        "PluginRiskDescription": "With DNS validation, ACM will automatically renew certificates before they expire, as long as the DNS CNAME record is in place."
    },
    "API Gateway Authorization": {
        "PluginDomain": "Availability",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon API Gateway APIs are using authorizer",
        "PluginRecommendation": "[DEFAULT] Modify API Gateway configuration and ensure that appropriate authorizers are set up for each API.",
        "PluginRiskDescription": "API Gateway API should be using authorizer to enforce security measures and control access to API resources."
    },
    "API Gateway Certificate Rotation": {
        "PluginDomain": "Availability",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon API Gateway APIs have certificates with expiration date more than the rotation limit.",
        "PluginRecommendation": "[DEFAULT] Rotate the certificate attached to API Gateway API",
        "PluginRiskDescription": "API Gateway APIs should have certificates with long term expiry date to avoid API insecurity after certificate expiration."
    },
    "API Gateway Client Certificate": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon API Gateway API stages use client certificates.",
        "PluginRecommendation": "[DEFAULT] Attach client certificate to API Gateway API stages",
        "PluginRiskDescription": "API Gateway API stages should use client certificates to ensure API security authorization."
    },
    "API Gateway CloudWatch Logs": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon API Gateway API stages have Amazon CloudWatch Logs enabled.",
        "PluginRecommendation": "[DEFAULT] Modify API Gateway API stages to enable CloudWatch Logs",
        "PluginRiskDescription": "API Gateway API stages should have Amazon CloudWatch Logs enabled to help debug issues related to request execution or client access to your API."
    },
    "API Gateway Content Encoding": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon API Gateway APIs have content encoding enabled.",
        "PluginRecommendation": "[DEFAULT] Enable content encoding and set minimum compression size of API Gateway API response",
        "PluginRiskDescription": "API Gateway API should have content encoding enabled to enable compression of response payload."
    },
    "API Gateway Default Endpoint Disabled": {
        "PluginDomain": "Availability",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure default execute-api endpoint is disabled for your API Gateway.",
        "PluginRecommendation": "[DEFAULT] Modify API Gateway to disable default execute-api endpoint.",
        "PluginRiskDescription": "By default, clients can invoke your API by using the execute-api endpoint that API Gateway generates for your API. To ensure that clients can access your API only by using a custom domain name, disable the default execute-api endpoint."
    },
    "API Gateway Private Endpoints": {
        "PluginDomain": "Availability",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon API Gateway APIs are only accessible through private endpoints.",
        "PluginRecommendation": "[DEFAULT] Set API Gateway API endpoint configuration to private",
        "PluginRiskDescription": "API Gateway APIs should be only accessible through private endpoints to ensure API security."
    },
    "API Gateway Request Validation": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon API Gateway method has request validation enabled.",
        "PluginRecommendation": "[DEFAULT] Modify API Gateway configuration and ensure that appropriate request validators are set for each API.",
        "PluginRiskDescription": "Enabling request validation for API Gateway allows to perform basic validation of an API request before proceeding with the integration request and publishes the validation results in CloudWatch Logs. When request validation fails, API Gateway immediately fails the request reducing unnecessary calls to the backend."
    },
    "API Gateway Response Caching": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that response caching is enabled for your Amazon API Gateway REST APIs.",
        "PluginRecommendation": "[DEFAULT] Modify API Gateway API stages to enable API cache",
        "PluginRiskDescription": "A REST API in API Gateway is a collection of resources and methods that are integrated with backend HTTP endpoints, Lambda functions, or other AWS services.You can enable API caching in Amazon API Gateway to cache your endpoint responses."
    },
    "API Gateway Tracing Enabled": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon API Gateway API stages have tracing enabled for AWS X-Ray.",
        "PluginRecommendation": "[DEFAULT] Enable tracing on API Gateway API stages",
        "PluginRiskDescription": "API Gateway API stages should have tracing enabled to send traces to AWS X-Ray for enhanced distributed tracing."
    },
    "API Gateway V2 Access Logging": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon API Gateway V2 API stages have access logging enabled.",
        "PluginRecommendation": "[DEFAULT] Modify API Gateway V2 configuration and ensure that access logging is configured for each stage.",
        "PluginRiskDescription": "API Gateway V2 access logs provide detailed information about APIs and how the caller accessed the API. These logs are useful for security and access audits which helps to analyze traffic patterns and troubleshoot issues."
    },
    "API Gateway V2 Authorization": {
        "PluginDomain": "Availability",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon API Gateway V2 APIs are using authorizer.",
        "PluginRecommendation": "[DEFAULT] Modify API Gateway V2 configuration and ensure that appropriate authorizers are set up for each API.",
        "PluginRiskDescription": "API Gateway V2 APIs should be configured to use authorizer to enforce security measures and restrict access to API to only authorized users or processes."
    },
    "API Gateway WAF Enabled": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that API Gateway APIs are associated with a Web Application Firewall.",
        "PluginRecommendation": "[DEFAULT] Associate API Gateway API with Web Application Firewall",
        "PluginRiskDescription": "API Gateway APIs should be associated with a Web Application Firewall to ensure API security."
    },
    "API Stage-Level Cache Encryption": {
        "PluginDomain": "Availability",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that your Amazon API Gateway REST APIs are configured to encrypt API cached responses.",
        "PluginRecommendation": "[DEFAULT] Modify API Gateway API stages to enable encryption on cache data",
        "PluginRiskDescription": "It is strongly recommended to enforce encryption for API cached responses in order to protect your data from unauthorized access."
    },
    "Custom Domain TLS Version": {
        "PluginDomain": "Availability",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure API Gateway custom domains are using current minimum TLS version.",
        "PluginRecommendation": "[DEFAULT] Modify API Gateway custom domain security policy and specify new TLS version.",
        "PluginRiskDescription": "A security policy is a predefined combination of minimum TLS version and cipher suite offered by Amazon API Gateway. Choose either a TLS version 1.2 or TLS version 1.0 security policy."
    },
    "API Gateway Detailed CloudWatch Metrics": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that API Gateway API stages have detailed CloudWatch metrics enabled.",
        "PluginRecommendation": "[DEFAULT] Add CloudWatch role ARN to API settings and enabled detailed metrics for each stage",
        "PluginRiskDescription": "API Gateway API stages should have detailed CloudWatch metrics enabled to monitor logs and events."
    },
    "AppFlow Flow Encrypted": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that your Amazon AppFlow flows are encrypted with desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Create AppFlow flows with customer-manager keys (CMKs).",
        "PluginRiskDescription": "Amazon AppFlow encrypts your access tokens, secret keys, and data in transit and data at rest with AWS-manager keys by default."
    },
    "App Mesh TLS Required": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS App Mesh virtual gateway listeners only accepts TLS enabled connections.",
        "PluginRecommendation": "[DEFAULT] Restrict AWS App Mesh virtual gateway listeners to accept only TLS enabled connections.",
        "PluginRiskDescription": "In App Mesh, Transport Layer Security (TLS) encrypts communication between the envoy proxies deployed on compute resources that are represented in App Mesh by mesh endpoints, such as Virtual nodes and Virtual gateways."
    },
    "App Mesh VG Access Logging": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that your Amazon App Mesh virtual gateways have access logging enabled.",
        "PluginRecommendation": "[DEFAULT] To enable access logging, modify virtual gateway configuration settings and configure the file path to write access logs to.",
        "PluginRiskDescription": "Enabling access logging feature for App Mesh virtual gateways lets you track application mesh user access, helps you meet compliance regulations, and gives insight into security audits and investigations."
    },
    "App Mesh VG Health Check Policies": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon App Mesh virtual gateways use health check policies to monitor the availability of virtual nodes.",
        "PluginRecommendation": "[DEFAULT] Configure health check policies for the virtual gateway listeners in your App Mesh, specifying values for healthy threshold, health check interval, health check protocol, timeout period, and unhealthy threshold.",
        "PluginRiskDescription": "Health check policies in App Mesh are essential to maintain application availability and reliability by monitoring the health of associated virtual nodes."
    },
    "App Mesh Restrict External Traffic": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon App Mesh virtual nodes have egress only access to other defined resources available within the service mesh.",
        "PluginRecommendation": "[DEFAULT] Deny all traffic to the external services",
        "PluginRiskDescription": "Amazon App Mesh gives you controls to choose whether or not to allow App Mesh services to communicate with outside world."
    },
    "Service Encrypted": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS App Runner service is encrypted using desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Create App Runner Service with customer-manager keys (CMKs)",
        "PluginRiskDescription": "To protect your application\\"
    },
    "Workgroup Encrypted": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures Athena workgroups are configured to encrypt all data at rest.",
        "PluginRecommendation": "[DEFAULT] Enable encryption at rest for all Athena workgroups.",
        "PluginRiskDescription": "Athena workgroups support full server-side encryption for all data at rest which should be enabled."
    },
    "Workgroup Enforce Configuration": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures Athena workgroups do not allow clients to override configuration options.",
        "PluginRecommendation": "[DEFAULT] Disable the ability for clients to override Athena workgroup configuration options.",
        "PluginRiskDescription": "Athena workgroups support the ability for clients to override configuration options, including encryption requirements. This setting should be disabled to enforce encryption mandates."
    },
    "Audit Manager Data Encrypted": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that all data in Audit Manager is encrypted with desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Modify Audit Manager data encryption settings and choose desired encryption key for data encryption",
        "PluginRiskDescription": "All resource in AWS Audit Manager such as assessments, controls, frameworks, evidence are encrypted under a customer managed key or an AWS owned key, depending on your selected settings."
    },
    "App-Tier ASG Launch Configurations Approved AMIs": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that App-Tier Auto Scaling Group Launch Configurations are using approved AMIs.",
        "PluginRecommendation": "[DEFAULT] Update App-Tier ASG Launch Configurations to use approved AMIs only",
        "PluginRiskDescription": "App-Tier Auto Scaling Group Launch Configurations should use approved AMIs only to launch EC2 instances within the ASG"
    },
    "App-Tier Auto Scaling Group CloudWatch Logs Enabled": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that App-Tier Auto Scaling Groups are using CloudWatch logs agent.",
        "PluginRecommendation": "[DEFAULT] Update app-tier Auto Scaling Group to use CloudWatch Logs agent",
        "PluginRiskDescription": "EC2 instance available within app-tier Auto Scaling Group (ASG) should use an AWS CloudWatch Logs agent to monitor, store and access log files."
    },
    "App-Tier Launch Configurations IAM Roles": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that App-Tier Auto Scaling launch configuration is configured to use a customer created IAM role.",
        "PluginRecommendation": "[DEFAULT] Update App-Tier Auto Scaling launch configuration and attach a customer created App-Tier IAM role",
        "PluginRiskDescription": "App-Tier Auto Scaling launch configuration should have a customer created App-Tier IAM role to provide necessary credentials to access AWS services."
    },
    "Auto Scaling Notifications Active": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures auto scaling groups have notifications active.",
        "PluginRecommendation": "[DEFAULT] Add a notification endpoint to the auto scaling group.",
        "PluginRiskDescription": "Notifications can be sent to an SNS endpoint when scaling actions occur, which should be set to ensure all scaling activity is recorded."
    },
    "Auto Scaling Group Cooldown Period": {
        "PluginDomain": "Availability",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that your AWS Auto Scaling Groups are configured to use a cool down period.",
        "PluginRecommendation": "[DEFAULT] Implement proper cool down period for Auto Scaling groups to temporarily suspend any scaling actions.",
        "PluginRiskDescription": "A scaling cool down helps you prevent your Auto Scaling group from launching or terminating additional instances before the effects of previous activities are visible."
    },
    "Auto Scaling Group Missing ELB": {
        "PluginDomain": "Availability",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures all Auto Scaling groups are referencing active load balancers.",
        "PluginRecommendation": "[DEFAULT] Ensure that the Auto Scaling group load balancer has not been deleted. If so, remove it from the ASG.",
        "PluginRiskDescription": "Each Auto Scaling group with a load balancer configured should reference an active ELB."
    },
    "Launch Configuration Referencing Missing Security Groups": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Auto Scaling launch configurations are not utilizing missing security groups.",
        "PluginRecommendation": "[DEFAULT] Ensure that the launch configuration security group has not been deleted. If so, remove it from launch configurations",
        "PluginRiskDescription": "Auto Scaling launch configuration should utilize an active security group to ensure safety of managed instances."
    },
    "ASG Multiple AZ": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that ASGs are created to be cross-AZ for high availability.",
        "PluginRecommendation": "[DEFAULT] Modify the autoscaling instance to enable scaling across multiple availability zones.",
        "PluginRiskDescription": "ASGs can easily be configured to allow instances to launch in multiple availability zones. This ensures that the ASG can continue to scale, even when AWS is experiencing downtime in one or more zones."
    },
    "Suspended AutoScaling Groups": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that there are no Amazon AutoScaling groups with suspended processes.",
        "PluginRecommendation": "[DEFAULT] Update the AutoScaling group to resume the suspended processes.",
        "PluginRiskDescription": "AutoScaling groups should not have any suspended processes to avoid disrupting the AutoScaling workflow."
    },
    "Auto Scaling Unused Launch Configuration": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that any unused Auto Scaling Launch Configuration templates are identified and removed from your account in order to adhere to AWS best practices.",
        "PluginRecommendation": "[DEFAULT] Identify and remove any Auto Scaling Launch Configuration templates that are not associated anymore with ASGs available in the selected AWS region.",
        "PluginRiskDescription": "A launch configuration is an instance configuration template that an Auto Scaling group uses to launch EC2 instances. When you create a launch configuration, you specify information for the instances."
    },
    "ELB Health Check Active": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures all Auto Scaling groups have ELB health check active.",
        "PluginRecommendation": "[DEFAULT] Enable ELB health check for the Auto Scaling groups.",
        "PluginRiskDescription": "Auto Scaling groups should have ELB health checks active to replace unhealthy instances in time."
    },
    "Empty AutoScaling Group": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures all autoscaling groups contain at least 1 instance.",
        "PluginRecommendation": "[DEFAULT] Delete the unused AutoScaling group.",
        "PluginRiskDescription": "AutoScaling groups that are no longer in use should be deleted to prevent accidental use."
    },
    "AutoScaling ELB Same Availability Zone": {
        "PluginDomain": "Availability",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures all autoscaling groups with attached ELBs are operating in the same availability zone.",
        "PluginRecommendation": "[DEFAULT] Update the ELB to use the same availability zones as the autoscaling group.",
        "PluginRiskDescription": "To work properly and prevent orphaned instances, ELBs must be created in the same availability zones as the backend instances in the autoscaling group."
    },
    "Web-Tier ASG Launch Configurations Approved AMIs": {
        "PluginDomain": "Availability",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that Web-Tier Auto Scaling Group Launch Configurations are using approved AMIs.",
        "PluginRecommendation": "[DEFAULT] Update Web-Tier ASG Launch Configuration to use approved AMIs only",
        "PluginRiskDescription": "Web-Tier Auto Scaling Group Launch Configurations should use approved AMIs only to launch EC2 instances within the ASG"
    },
    "Web-Tier Auto Scaling Group Associated ELB": {
        "PluginDomain": "Availability",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that Web-Tier Auto Scaling Group has an associated Elastic Load Balancer",
        "PluginRecommendation": "[DEFAULT] Update Web-Tier Auto Scaling group to associate ELB to distribute incoming traffic.",
        "PluginRiskDescription": "Web-Tier Auto Scaling groups should have an ELB associated to distribute incoming traffic across EC2 instances."
    },
    "Web-Tier Auto Scaling Group CloudWatch Logs Enabled": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Web-Tier Auto Scaling Groups are using CloudWatch Logs agent.",
        "PluginRecommendation": "[DEFAULT] Update web-tier Auto Scaling Group to use CloudWatch Logs agent",
        "PluginRiskDescription": "EC2 instance available within web-tier Auto Scaling Group (ASG) should use an AWS CloudWatch Logs agent to monitor, store and access log files."
    },
    "Web-Tier Launch Configurations IAM Roles": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Web-Tier Auto Scaling launch configuration is configured to use a customer created IAM role.",
        "PluginRecommendation": "[DEFAULT] Update Web-Tier Auto Scaling launch configuration and attach a customer created Web-Tier IAM role",
        "PluginRiskDescription": "Web-Tier Auto Scaling launch configuration should have a customer created Web-Tier IAM role to provide necessary credentials to access AWS services."
    },
    "Backup Deletion Protection Enabled": {
        "PluginDomain": "Storage",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that an Amazon Backup vault access policy is configured to prevent the deletion of AWS backups in the backup vault.",
        "PluginRecommendation": "[DEFAULT] Add a statement in Backup vault access policy which denies global access to action: backup:DeleteRecoveryPoint",
        "PluginRiskDescription": "With AWS Backup, you can assign policies to backup vaults and the resources they contain. Assigning policies allows you to do things like grant access to users to create backup plans and on-demand backups, but limit their ability to delete recovery points after they are created."
    },
    "Backup In Use For RDS Snapshots": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Backup is integrated with Amazon Relational Database Service in order to manage RDS database instance snapshots",
        "PluginRecommendation": "[DEFAULT] Enable RDS database instance snapshots to improve the reliability of your backup strategy.",
        "PluginRiskDescription": "Amazon RDS creates and saves automated backups of your DB instance during the backup window of your DB instance. With Amazon Backup, you can centrally configure backup policies and rules, and monitor backup activity for AWS RDS database instances."
    },
    "Backup Failure Notification Enabled": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Backup vaults send notifications via Amazon SNS for each failed backup job event.",
        "PluginRecommendation": "[DEFAULT] Configure Backup vaults to sent notifications alert for failed backup job events.",
        "PluginRiskDescription": "AWS Backup can take advantage of the robust notifications delivered by Amazon Simple Notification Service (Amazon SNS). You can configure Amazon SNS to notify you of AWS Backup events from the Amazon SNS console."
    },
    "Backup Resource Protection": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that protected resource types feature is enabled and configured for Amazon Backup service within.",
        "PluginRecommendation": "[DEFAULT] Enable protected resource type feature in order to meet compliance requirements.",
        "PluginRiskDescription": "Amazon Backup protected resource types feature allows you to choose which resource types are protected by backup plans on per-region basis."
    },
    "Backup Vault Encrypted": {
        "PluginDomain": "Storage",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that your Amazon Backup vaults are using AWS KMS Customer Master Keys instead of AWS managed-keys (i.e. default encryption keys).",
        "PluginRecommendation": "[DEFAULT] Encrypt Backup Vault with desired encryption level",
        "PluginRiskDescription": "When you encrypt AWS Backup using your own AWS KMS Customer Master Keys (CMKs) for enhanced protection, you have full control over who can use the encryption keys to access your backups."
    },
    "Backup Vault Has Tags": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Backup Vaults have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify Backup Vault and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "Backup Vault Policies": {
        "PluginDomain": "Storage",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures Backup Vault policies are properly scoped with specific permissions.",
        "PluginRecommendation": "[DEFAULT] Ensure that all Backup Vault policies are scoped to specific services and API calls.",
        "PluginRiskDescription": "Policies attached to Backup Vault should be scoped to least-privileged access and avoid the use of wildcards."
    },
    "AWS Backup Compliant Lifecycle Configured": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that a compliant lifecycle configuration is enabled for your Amazon Backup plans in order to meet compliance requirements when it comes to security and cost optimization.",
        "PluginRecommendation": "[DEFAULT] Enable compliant lifecycle configuration for your Amazon Backup plans",
        "PluginRiskDescription": "The AWS Backup lifecycle configuration contains an array of transition objects specifying how long in days before a recovery point transitions to cold storage or is deleted."
    },
    "AWS Bedrock In Use": {
        "PluginDomain": "Machine Learning",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS Bedrock service is in use within your AWS account.",
        "PluginRecommendation": "[DEFAULT] Use Bedrock service to utilize top foundation models with strong security and customization.",
        "PluginRiskDescription": "AWS Bedrock provides access to high-performing foundation models from leading AI startups and Amazon through a unified API, enabling easy experimentation, customization, and deployment of generative AI applications with robust security and privacy features."
    },
    "Custom Model Encryption Enabled": {
        "PluginDomain": "Machine Learning",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that an Amazon Bedrock custom models are encrypted with desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Encrypt Bedrock custom model with desired encryption level.",
        "PluginRiskDescription": "When you encrypt AWS Bedrock custom model using your own AWS Customer Managed Keys (CMKs) for enhanced protection, you have full control over who can use the encryption keys to access your custom model."
    },
    "Custom Model Has Tags": {
        "PluginDomain": "Machine Learning",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that Bedrock Custom model has tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify Bedrock Custom model and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "Custom Model In VPC": {
        "PluginDomain": "Machine Learning",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that an Amazon Bedrock custom model is configured with a VPC.",
        "PluginRecommendation": "[DEFAULT] Create the custom model with VPC configuration",
        "PluginRiskDescription": "When the custom model is configured within a VPC, it establishes a secure environment that prevents unauthorized internet access to your training data, enhancing the overall security and confidentiality of your model."
    },
    "Bedrock Model Invocation Logging Enabled": {
        "PluginDomain": "Machine Learning",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Bedrock model invocation logging is enabled.",
        "PluginRecommendation": "[DEFAULT] Enable invocation logging for Amazon Bedrock models.",
        "PluginRiskDescription": "With invocation logging enabled, you can collect the full request data, response data, and metadata associated with all calls performed in account. This detailed logging provides valuable insights into model usage patterns, helps in troubleshooting, and enhances security by allowing for thorough analysis of model interactions. It also facilitates compliance with auditing requirements, offering a comprehensive record of model invocations."
    },
    "Private Custom Model": {
        "PluginDomain": "Machine Learning",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that an Amazon Bedrock custom model is configured within a private VPC.",
        "PluginRecommendation": "[DEFAULT] Configure the custom model with VPC and private VPC endpoint.",
        "PluginRiskDescription": "When the custom model is configured within a private VPC or with a private VPC endpoint, it enhances security by restricting access to authorized networks only, preventing exposure to the public internet."
    },
    "CloudFormation Admin Priviliges": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures no AWS CloudFormation stacks available in your AWS account has admin privileges.",
        "PluginRecommendation": "[DEFAULT] Modify IAM role attached with AWS CloudFormation stack to provide the minimal amount of access required to perform its tasks",
        "PluginRiskDescription": "A service role is an AWS Identity and Access Management (IAM) role that allows AWS CloudFormation to make calls to resources in a stack on your behalf. You can specify an IAM role that allows AWS CloudFormation to create, update, or delete your stack resources"
    },
    "CloudFormation Deletion Policy In Use": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that deletion policy is used for Amazon CloudFormation stacks.",
        "PluginRecommendation": "[DEFAULT] Add DeletionPolicy attribute in the AWS Cloudformation stack template.",
        "PluginRiskDescription": "DeletionPolicy attribute allows to preserve and backup a resource when its stack is deleted. By default, AWS CloudFormation deletes the resource and all its content if a resource has no DeletionPolicy attribute in a template."
    },
    "AWS CloudFormation In Use": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon CloudFormation service is in use within your AWS account to automate your infrastructure management and deployment.",
        "PluginRecommendation": "[DEFAULT] Check if CloudFormation is in use or not by observing the stacks",
        "PluginRiskDescription": "AWS CloudFormation is a service that helps you model and set up your AWS resources so that you can spend less time managing those resources and more time focusing on your applications that run in AWS."
    },
    "CloudFormation Drift Detection": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS CloudFormation stacks are not in a drifted state.",
        "PluginRecommendation": "[DEFAULT] Resolve CloudFormation stack drift by importing drifted resource back to the stack.",
        "PluginRiskDescription": "AWS CloudFormation stack should not be in drifted state to ensure that stack template is aligned with the resources."
    },
    "CloudFormation Plaintext Parameters": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures CloudFormation parameters that reference sensitive values are configured to use NoEcho.",
        "PluginRecommendation": "[DEFAULT] Update the sensitive parameters to use the NoEcho property.",
        "PluginRiskDescription": "CloudFormation supports the NoEcho property for sensitive values, which should be used to ensure secrets are not exposed in the CloudFormation UI and APIs."
    },
    "CloudFormation Stack Failed Status": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS CloudFormation stacks are not in Failed mode for more than the maximum failure limit hours.",
        "PluginRecommendation": "[DEFAULT] Remove or redeploy the CloudFormation failed stack.",
        "PluginRiskDescription": "AWS CloudFormation stacks should not be in failed mode to avoid application downtime."
    },
    "CloudFormation Stack SNS Notifications": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS CloudFormation stacks have SNS topic associated.",
        "PluginRecommendation": "[DEFAULT] Associate an Amazon SNS topic to all CloudFormation stacks",
        "PluginRiskDescription": "AWS CloudFormation stacks should have SNS topic associated to ensure stack events monitoring."
    },
    "CloudFormation Stack Termination Protection Enabled": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS CloudFormation stacks have termination protection enabled.",
        "PluginRecommendation": "[DEFAULT] Enable termination protection for CloudFormation stack",
        "PluginRiskDescription": "AWS CloudFormation stacks should have termination protection enabled to avoid accidental stack deletion."
    },
    "CloudFront Custom Origin HTTPS Only": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures CloudFront Distribution Custom Origin is HTTPS Only.",
        "PluginRecommendation": "[DEFAULT] Modify CloudFront distribution and update the Origin Protocol Policy setting to HTTPS Only.",
        "PluginRiskDescription": "When you create a distribution, you specify the origin where CloudFront sends requests for the files. You can use several different kinds of origins with CloudFront."
    },
    "CloudFront Distribution Field-Level Encryption": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that field-level encryption is enabled for your Amazon CloudFront web distributions.",
        "PluginRecommendation": "[DEFAULT] Enable field-level encryption for CloudFront distributions.",
        "PluginRiskDescription": "With Amazon CloudFront, you can enforce secure end-to-end connections to origin servers by using HTTPS. Field-level encryption adds an additional layer of security that lets you protect specific data throughout system processing so that only certain applications can see it."
    },
    "CloudFront Geo Restriction": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that geo-restriction feature is enabled for your CloudFront distribution to allow or block location-based access.",
        "PluginRecommendation": "[DEFAULT] Enable CloudFront geo restriction to whitelist or block location-based access.",
        "PluginRiskDescription": "AWS CloudFront geo restriction feature can be used to assist in mitigation of Distributed Denial of Service (DDoS) attacks."
    },
    "CloudFront HTTPS Only": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures CloudFront distributions are configured to redirect non-HTTPS traffic to HTTPS.",
        "PluginRecommendation": "[DEFAULT] Remove HTTP-only listeners from distributions.",
        "PluginRiskDescription": "For maximum security, CloudFront distributions can be configured to only accept HTTPS connections or to redirect HTTP connections to HTTPS."
    },
    "CloudFront Enabled": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS CloudFront service is used within your AWS account.",
        "PluginRecommendation": "[DEFAULT] Create CloudFront distributions as per requirement.",
        "PluginRiskDescription": "Amazon CloudFront is a web service that speeds up distribution of your static and dynamic web content, such as .html, .css, .js, and image files, to your users. CloudFront delivers your content through a worldwide network of data centers called edge locations."
    },
    "CloudFront Logging Enabled": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures CloudFront distributions have request logging enabled.",
        "PluginRecommendation": "[DEFAULT] Enable CloudFront request logging.",
        "PluginRiskDescription": "Logging requests to CloudFront"
    },
    "CloudFront Distribution Origins TLS Version": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures CloudFront Distribution custom origin TLS version is not deprecated.",
        "PluginRecommendation": "[DEFAULT] Modify cloudFront distribution and update the TLS version.",
        "PluginRiskDescription": "The TLS (Transport Layer Security) protocol secures transmission of data over the internet using standard encryption technology. Encryption should be set with the latest version of TLS where possible."
    },
    "CloudFront TLS Deprecated Protocols": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures AWS CloudFront distribution is not using deprecated TLS Version.",
        "PluginRecommendation": "[DEFAULT] Modify cloudFront distribution and update the TLS version.",
        "PluginRiskDescription": "Use latest TLS policy for CloudFront distribution to meet compliance and regulatory requirements within your organisation and to adhere to AWS security best policies."
    },
    "CloudFront TLS Insecure Cipher": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures CloudFront distribution TLS Version is not using insecure cipher.",
        "PluginRecommendation": "[DEFAULT] Modify cloudFront distribution and update the TLS version.",
        "PluginRiskDescription": "The TLS (Transport Layer Security) protocol secures transmission of data over the internet using standard encryption technology. Encryption should be set with the latest version of TLS where possible."
    },
    "CloudFront WAF Enabled": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures CloudFront distributions have WAF enabled.",
        "PluginRecommendation": "[DEFAULT] 1. Enter the WAF service. 2. Enter Web ACLs and filter by global. 3. If no Web ACL is found, Create a new global Web ACL and in Resource type to associate with web ACL, select the CloudFront Distribution.",
        "PluginRiskDescription": "Enabling WAF allows control over requests to the CloudFront Distribution, allowing or denying traffic based off rules in the Web ACL"
    },
    "CloudFront Compress Objects Automatically": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that your Amazon CloudFront distributions are configured to automatically compress files(object).",
        "PluginRecommendation": "[DEFAULT] Ensures that CloudFront is configured to automatically compress files",
        "PluginRiskDescription": "CloudFront data transfer is based on the total amount of data served, sending compressed files to the viewers is much less expensive than sending uncompressed files."
    },
    "CloudFront Enable Origin Failover": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Origin Failover feature is enabled for your CloudFront distributions in order to improve the availability of the content delivered to your end users.",
        "PluginRecommendation": "[DEFAULT] Modify CloudFront distributions and configure origin group instead of a single origin",
        "PluginRiskDescription": "With Origin Failover capability, you can setup two origins for your CloudFront web distributions primary and secondary. In the event of primary origin failure,"
    },
    "Insecure CloudFront Protocols": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Detects the use of insecure HTTPS SSL/TLS protocols for use with HTTPS traffic between viewers and CloudFront",
        "PluginRecommendation": "[DEFAULT] Ensure that traffic sent between viewers and CloudFront is passed over HTTPS and uses TLSv1.1 or higher.",
        "PluginRiskDescription": "CloudFront supports SSLv3 and TLSv1 protocols for use with HTTPS traffic, but only TLSv1.1 or higher should be used unless there is a valid business justification to support the older, insecure SSLv3."
    },
    "Public S3 CloudFront Origin": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Detects the use of an S3 bucket as a CloudFront origin without an origin access identity",
        "PluginRecommendation": "[DEFAULT] Create an origin access identity for CloudFront, then make the contents of the S3 bucket private.",
        "PluginRiskDescription": "When S3 is used as an origin for a CloudFront bucket, the contents should be kept private and an origin access identity should allow CloudFront access. This prevents someone from bypassing the caching benefits that CloudFront provides, repeatedly loading objects directly from S3, and amassing a large access bill."
    },
    "Secure CloudFront Origin": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Detects the use of secure web origins with secure protocols for CloudFront.",
        "PluginRecommendation": "[DEFAULT] Ensure that traffic sent between CloudFront and its origin is passed over HTTPS and uses TLSv1.1 or higher. Do not use the match-viewer option.",
        "PluginRiskDescription": "Traffic passed between the CloudFront edge nodes and the backend resource should be sent over HTTPS with modern protocols for all web-based origins."
    },
    "CloudTrail Bucket Access Logging": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures CloudTrail logging bucket has access logging enabled to detect tampering of log files",
        "PluginRecommendation": "[DEFAULT] Enable access logging on the CloudTrail bucket from the S3 console",
        "PluginRiskDescription": "CloudTrail buckets should utilize access logging for an additional layer of auditing. If the log files are deleted or modified in any way, the additional access logs can help determine who made the changes."
    },
    "CloudTrail Bucket Delete Policy": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures CloudTrail logging bucket has a policy to prevent deletion of logs without an MFA token",
        "PluginRecommendation": "[DEFAULT] Enable MFA delete on the CloudTrail bucket",
        "PluginRiskDescription": "To provide additional security, CloudTrail logging buckets should require an MFA token to delete objects"
    },
    "CloudTrail Bucket Private": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures CloudTrail logging bucket is not publicly accessible",
        "PluginRecommendation": "[DEFAULT] Set the S3 bucket access policy for all CloudTrail buckets to only allow known users to access its files.",
        "PluginRiskDescription": "CloudTrail buckets contain large amounts of sensitive account data and should only be accessible by logged in users."
    },
    "CloudTrail Data Events": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure Data events are included into Amazon CloudTrail trails configuration.",
        "PluginRecommendation": "[DEFAULT] Update CloudTrail to enable data events.",
        "PluginRiskDescription": "AWS CloudTrail trails should be configured to enable Data Events in order to log S3 object-level API operations."
    },
    "CloudTrail Delivery Failing": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon CloudTrail trail log files are delivered to destination S3 bucket.",
        "PluginRecommendation": "[DEFAULT] Modify CloudTrail trail configurations so that logs are being delivered",
        "PluginRiskDescription": "Amazon CloudTrail trail logs should be delivered to destination S3 bucket to be used for security audits."
    },
    "CloudTrail Enabled": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures CloudTrail is enabled for all regions within an account",
        "PluginRecommendation": "[DEFAULT] Enable CloudTrail for all regions and ensure that at least one region monitors global service events",
        "PluginRiskDescription": "CloudTrail should be enabled for all regions in order to detect suspicious activity in regions that are not typically used."
    },
    "CloudTrail Encryption": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures CloudTrail encryption at rest is enabled for logs",
        "PluginRecommendation": "[DEFAULT] Enable CloudTrail log encryption through the CloudTrail console or API",
        "PluginRiskDescription": "CloudTrail log files contain sensitive information about an account and should be encrypted at rest for additional protection."
    },
    "CloudTrail File Validation": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures CloudTrail file validation is enabled for all regions within an account",
        "PluginRecommendation": "[DEFAULT] Enable CloudTrail file validation for all regions",
        "PluginRiskDescription": "CloudTrail file validation is essentially a hash of the file which can be used to ensure its integrity in the case of an account compromise."
    },
    "CloudTrail Has Tags": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS CloudTrail trails have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify CloudTrail trails and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "CloudTrail Management Events": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS CloudTrail trails are configured to log management events.",
        "PluginRecommendation": "[DEFAULT] Update CloudTrail to enable management events logging",
        "PluginRiskDescription": "AWS CloudTrail trails should be configured to log management events to record management operations that are performed on resources in your AWS account."
    },
    "CloudTrail Notifications Enabled": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "MEDIUM",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon CloudTrail trails are using active Simple Notification Service (SNS) topics to deliver notifications.",
        "PluginRecommendation": "[DEFAULT] Make sure that CloudTrail trails are using active SNS topics and that SNS topics have not been deleted after trail creation.",
        "PluginRiskDescription": "CloudTrail trails should reference active SNS topics to notify for log files delivery to S3 buckets. Otherwise, you will lose the ability to take immediate actions based on log information."
    },
    "Object Lock Enabled": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS CloudTrail S3 buckets use Object Lock for data protection and regulatory compliance.",
        "PluginRecommendation": "[DEFAULT] Edit trail to use a bucket with object locking enabled.",
        "PluginRiskDescription": "CloudTrail buckets should be configured to have object lock enabled. You can use it to prevent an object from being deleted or overwritten for a fixed amount of time or indefinitely."
    },
    "CloudTrail S3 Bucket": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS CloudTrail trail uses the designated Amazon S3 bucket.",
        "PluginRecommendation": "[DEFAULT] Modify ClouTrail trails to configure designated S3 bucket",
        "PluginRiskDescription": "Ensure that your Amazon CloudTrail trail is configured to use the appropriated S3 bucket in order to meet regulatory compliance requirements within your organization."
    },
    "CloudTrail To CloudWatch": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures CloudTrail logs are being properly delivered to CloudWatch",
        "PluginRecommendation": "[DEFAULT] Enable CloudTrail CloudWatch integration for all regions",
        "PluginRiskDescription": "Sending CloudTrail logs to CloudWatch enables easy integration with AWS CloudWatch alerts, as well as an additional backup log storage location."
    },
    "CloudTrail Global Services Logging Duplicated": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS CloudTrail trails are not duplicating global services events in log files.",
        "PluginRecommendation": "[DEFAULT] Update CloudTrail trails to log global services events enabled for only one trail",
        "PluginRiskDescription": "Only one trail should have Include Global Services feature enabled to avoid duplication of global services events in log files."
    },
    "VPC Flow Logs Metric Alarm": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that an AWS CloudWatch alarm exists and configured for metric filter attached with VPC flow logs CloudWatch group.",
        "PluginRecommendation": "[DEFAULT] Create a CloudWatch group, attached metric filter to log VPC flow logs changes and create an CloudWatch alarm for the metric filter.",
        "PluginRiskDescription": "A metric alarm watches a single CloudWatch metric or the result of a math expression based on CloudWatch metrics."
    },
    "CloudWatch Log Groups Encrypted": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that the CloudWatch Log groups are encrypted using desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Ensure CloudWatch Log groups have encryption enabled with desired AWS KMS key",
        "PluginRiskDescription": "Log group data is always encrypted in CloudWatch Logs. You can optionally use AWS Key Management Service for this encryption."
    },
    "CloudWatch Log Retention Period": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that the CloudWatch Log retention period is set above a specified length of time.",
        "PluginRecommendation": "[DEFAULT] Ensure CloudWatch logs are retained for at least 90 days.",
        "PluginRiskDescription": "Retention settings can be used to specify how long log events are kept in CloudWatch Logs. Expired log events get deleted automatically."
    },
    "CloudWatch Monitoring Metrics": {
        "PluginDomain": "Compliance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures metric filters are setup for CloudWatch logs to detect security risks from CloudTrail.",
        "PluginRecommendation": "[DEFAULT] Enable metric filters to detect malicious activity in CloudTrail logs sent to CloudWatch.",
        "PluginRiskDescription": "Sending CloudTrail logs to CloudWatch is only useful if metrics are setup to detect risky activity from those logs. There are numerous metrics that should be used. For the exact filter patterns, please see this plugin on GitHub: https://github.com/cloudsploit/scans/blob/master/plugins/aws/cloudwatchlogs/monitoringMetrics.js"
    },
    "CodeArtifact Domain Encrypted": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS CodeArtifact domains have encryption enabled with desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Encrypt CodeArtifact domains with desired encryption level",
        "PluginRiskDescription": "CodeArtifact domains make it easier to manage multiple repositories across an organization. By default, domain assets are encrypted with AWS-managed KMS key."
    },
    "Build Project Environment Privileged Mode": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that your AWS CodeBuild build project environment has privileged mode disabled.",
        "PluginRecommendation": "[DEFAULT] Modify CodeBuild build project and disable environment privileged mode.",
        "PluginRiskDescription": "Enabling privileged mode for CodeBuild project environments allows the build container to have elevated permissions on the host machine, which can potentially lead to security vulnerabilities and unauthorized access."
    },
    "CodeBuild Project Logging Enabled": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that your AWS CodeBuild build project has S3 or Cloudwatch logs enabled.",
        "PluginRecommendation": "[DEFAULT] Ensure that CodeBuild project has logging enabled.",
        "PluginRiskDescription": "Monitoring AWS CodeBuild projects helps maintaining the reliability, availability, and performance of the resource. It helps to easily debug multi-point failure and potential incidents."
    },
    "CodeBuild Valid Source Providers": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that CodeBuild projects are using only valid source providers.",
        "PluginRecommendation": "[DEFAULT] Edit CodeBuild project source provider information and remove disallowed source providers",
        "PluginRiskDescription": "CodeBuild should use only desired source providers in order to follow your organizations\\"
    },
    "Project Artifacts Encrypted": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that your AWS CodeBuild project artifacts are encrypted with desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Encrypt them using customer-managed keys to gain more control over data encryption and decryption process.",
        "PluginRiskDescription": "AWS CodeBuild encrypts artifacts such as a cache, logs, exported raw test report data files, and build results"
    },
    "Pipeline Artifacts Encrypted": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS CodePipeline is using desired encryption level to encrypt pipeline artifacts being stored in S3.",
        "PluginRecommendation": "[DEFAULT] Ensure customer-manager keys (CMKs) are being used for CodePipeline pipeline artifacts.",
        "PluginRiskDescription": "CodePipeline creates an S3 artifact bucket and default AWS managed key when you create a pipeline."
    },
    "CodeStar Has Tags": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that CodeStar projects has tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify CodeStar Project and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "CodeStar Valid Repository Providers": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that CodeStar projects are not using undesired repository providers.",
        "PluginRecommendation": "[DEFAULT] Ensure diallowed repository providers are not being used for CodeStar projects",
        "PluginRiskDescription": "CodeStar should use only allowed repository providers in order to follow your organizations\\"
    },
    "Cognito User Pool WAF Enabled": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Cognito User Pool has WAF enabled.",
        "PluginRecommendation": "[DEFAULT] 1. Enter the Cognito service. 2. Enter user pools and enable WAF from properties.",
        "PluginRiskDescription": "Enabling WAF allows control over unwanted requests to your hosted UI and Amazon Cognito API service endpoints, allowing or denying traffic based off rules in the Web ACL."
    },
    "Cognito User Pool MFA enabled": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Cognito user pool has MFA enabled.",
        "PluginRecommendation": "[DEFAULT] 1. Enter the Cognito service. 2. Enter user pools and enable MFA from sign in experience.",
        "PluginRiskDescription": "Enabling Multi-factor authentication (MFA) increases security for your app. You can choose SMS text messages or time-based one-time passwords (TOTP) as second factors to sign in your users."
    },
    "Amazon Comprehend Flywheel In VPC": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that an Amazon Comprehend Flywheel is configured with a VPC.",
        "PluginRecommendation": "[DEFAULT] Update Comprehend Flywheel and configure it within VPC.",
        "PluginRiskDescription": "Configuring Amazon Comprehend flywheel within a VPC, establishes a secure environment that prevents unauthorized access to your data stored in job containers, minimizing the risk of internet exposure, data breaches and ensuring compliance with security standards."
    },
    "Amazon Comprehend Output Result Encryption": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures the Comprehend service is using encryption for all result output.",
        "PluginRecommendation": "[DEFAULT] Enable output result encryption for the Comprehend job",
        "PluginRiskDescription": "Comprehend supports using KMS keys to result output, which should be enabled."
    },
    "Amazon Comprehend Volume Encryption": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures the Comprehend service is using encryption for all volumes storing data at rest.",
        "PluginRecommendation": "[DEFAULT] Enable volume encryption for the Comprehend job",
        "PluginRiskDescription": "Comprehend supports using KMS keys to encrypt data at rest, which should be enabled."
    },
    "Auto Scaling Group Optimized": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Compute Optimizer does not have active recommendation summaries for unoptimized Auto Scaling groups.",
        "PluginRecommendation": "[DEFAULT] Resolve Compute Optimizer recommendations for Auto Scaling groups.",
        "PluginRiskDescription": "An Auto Scaling group is considered optimized when Compute Optimizer determines that the group is correctly provisioned to run your workload, based on the chosen instance type. For optimized Auto Scaling groups, Compute Optimizer might sometimes recommend a new generation instance type."
    },
    "EBS Volumes Optimized": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Compute Optimizer does not have active recommendation summaries for unoptimized EBS Volumes.",
        "PluginRecommendation": "[DEFAULT] Resolve Compute Optimizer recommendations for EBS volumes.",
        "PluginRiskDescription": "An EBS volume is considered optimized when Compute Optimizer determines that the volume is correctly provisioned to run your workload, based on the chosen volume type, volume size, and IOPS specification. For optimized resources, Compute Optimizer might sometimes recommend a new generation volume type."
    },
    "EC2 Instances Optimized": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Compute Optimizer does not have active recommendation summaries for over-provisioned or under-provisioned EC2 instances.",
        "PluginRecommendation": "[DEFAULT] Resolve Compute Optimizer recommendations for EC2 instances.",
        "PluginRiskDescription": "An EC2 instance is considered optimized when all specifications of an instance, such as CPU, memory, and network, meet the performance requirements of your workload, and the instance is not over-provisioned. For optimized instances, Compute Optimizer might sometimes recommend a new generation instance type."
    },
    "Lambda Function Optimized": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Compute Optimizer does not have active recommendation summaries for unoptimized Lambda Functions.",
        "PluginRecommendation": "[DEFAULT] Resolve Compute Optimizer recommendations for Lambda functions.",
        "PluginRiskDescription": "AWS Compute Optimizer generates memory size recommendations for AWS Lambda functions. A Lambda function is considered optimized when Compute Optimizer determines that its configured memory or CPU power (which is proportional to the configured memory) is correctly provisioned to run your workload."
    },
    "Compute Optimizer Recommendations Enabled": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Compute Optimizer is enabled for your AWS account.",
        "PluginRecommendation": "[DEFAULT] Enable Compute Optimizer Opt In options for current of all AWS account in your organization.",
        "PluginRiskDescription": "AWS Compute Optimizer is a service that analyzes the configuration and utilization metrics of your AWS resources. It reports whether your resources are optimal, and generates optimization recommendations to reduce the cost and improve the performance of your workloads."
    },
    "AWS Config Complaint Rules": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that all the evaluation results returned from the Amazon Config rules created within your AWS account are compliant.",
        "PluginRecommendation": "[DEFAULT] Enable the AWS Config Service rules for compliance checks and close security gaps.",
        "PluginRiskDescription": "AWS Config provides AWS managed rules, which are predefined customizable rules that AWS Config uses to evaluate whether your AWS resources comply with common best practices."
    },
    "Config Delivery Failing": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that the AWS Config log files are delivered to the S3 bucket in order to store logging data for auditing purposes without any failures.",
        "PluginRecommendation": "[DEFAULT] Configure AWS Config log files to be delivered without any failures to designated S3 bucket.",
        "PluginRiskDescription": "Amazon Config keep record of the changes within the configuration of your AWS resources and it regularly stores this data to log files that are send to an S3 bucket specified by you."
    },
    "Config Service Enabled": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures the AWS Config Service is enabled to detect changes to account resources",
        "PluginRecommendation": "[DEFAULT] Enable the AWS Config Service for all regions and resources in an account. Ensure that it is properly recording and delivering logs.",
        "PluginRiskDescription": "The AWS Config Service tracks changes to a number of resources in an AWS account and is invaluable in determining how account changes affect other resources and in recovery in the event of an account intrusion or accidental configuration change."
    },
    "Config Service Missing Bucket": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Config service is pointing an S3 bucket that is active in your account in order to save configuration information",
        "PluginRecommendation": "[DEFAULT] Ensure that Amazon Config service is referencing an active S3 bucket in order to save configuration information.",
        "PluginRiskDescription": "Amazon Config tracks changes within the configuration of your AWS resources and it regularly sends updated configuration details to an S3 bucket that you specify."
    },
    "AWS Services In Use": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that only permitted services are being used in you AWS cloud account.",
        "PluginRecommendation": "[DEFAULT] Delete resources from unpermitted services within your AWS cloud account.",
        "PluginRiskDescription": "Use only permitted AWS services in your cloud account in order to meet security and compliance requirements within your organization."
    },
    "Connect Customer Profiles Domain Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Connect Customer Profiles domains are using desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Enabled data encryption feature for Connect Customer Profiles",
        "PluginRiskDescription": "Customer profiles domain is a container for all data, such as customer profiles, object types, profile keys, and encryption keys. To encrypt this data, use a KMS key with desired encrypted level to meet regulatory compliance requirements within your organization."
    },
    "Connect Instance Attachments Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Connect instances have encryption enabled for attachments being saved on S3.",
        "PluginRecommendation": "[DEFAULT] Modify Connect instance data storage configuration and enable encryption for  attachments",
        "PluginRiskDescription": "You can configure Amazon Connect instance to save attachments on S3. When you save"
    },
    "Connect Instance Call Recording Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Connect instances have encryption enabled for call recordings being saved on S3.",
        "PluginRecommendation": "[DEFAULT] Modify Connect instance data storage configuration and enable encryption for call recordings",
        "PluginRiskDescription": "You can configure Amazon Connect instance to save recordings for incoming call to be saved on S3. When you save"
    },
    "Connect Instance Media Streams Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Connect instances have encryption enabled for media streams being saved on Kinesis Video Stream.",
        "PluginRecommendation": "[DEFAULT] Modify Connect instance data storage configuration and enable encryption for media streams",
        "PluginRiskDescription": "In Amazon Connect, you can capture customer audio during an interaction with your contact center by sending the audio to a Kinesis video stream."
    },
    "Connect Instance Exported Reports Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Connect instances have encryption enabled for exported reports being saved on S3.",
        "PluginRecommendation": "[DEFAULT] Modify Connect instance data storage configuration and enable encryption for exported reports",
        "PluginRiskDescription": "You can configure Amazon Connect instance to save exported reports on S3. When you save"
    },
    "Connect Instance Chat Transcripts Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Connect instances have encryption enabled for chat transcripts being saved on S3.",
        "PluginRecommendation": "[DEFAULT] Modify Connect instance data storage configuration and enable encryption for chat transcripts",
        "PluginRiskDescription": "You can configure Amazon Connect instance to save transcripts for chats to be saved on S3. When you save"
    },
    "Connect Voice ID Domain Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Voice domains created under Amazon Connect instances are using desired KMS encryption level.",
        "PluginRecommendation": "[DEFAULT] Ensure that Amazon Voice ID domains have encryption enabled.",
        "PluginRiskDescription": "All user data stored in Amazon Connect Voice ID is encrypted at rest using encryption keys stored in AWS Key Management Service. Additionally, you can provide customer managed KMS keys in order to gain more control over encryption/decryption processes."
    },
    "Connect Wisdom Domain Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Wisdom domains created under Amazon Connect instances are using desired KMS encryption level.",
        "PluginRecommendation": "[DEFAULT] Ensure that Amazon Connect Wisdom domains have encryption enabled.",
        "PluginRiskDescription": "All user data stored in Amazon Connect Wisdom is encrypted at rest using encryption keys stored in AWS Key Management Service. Additionally, you can provide customer managed KMS keys in order to gain more control over encryption/decryption processes."
    },
    "DevOps Guru Notifications Enabled": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures SNS topic is set up for Amazon DevOps Guru.",
        "PluginRecommendation": "[DEFAULT] Add a notification channel to DevOps Guru",
        "PluginRiskDescription": "Amazon DevOps Guru uses an SNS topic to notify you about important DevOps Guru events."
    },
    "DMS Auto Minor Version Upgrade": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that your Amazon Database Migration Service (DMS) replication instances have the Auto Minor Version Upgrade feature enabled",
        "PluginRecommendation": "[DEFAULT] Enable Auto Minor Version Upgrade feature in order to automatically receive minor engine upgrades for improved performance and security",
        "PluginRiskDescription": "AWS Database Migration Service (AWS DMS) helps you migrate databases to AWS quickly and securely. The DMS service releases engine version upgrades regularly to introduce new software features, bug fixes, security patches and performance improvements."
    },
    "DMS Encryption Enabled": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures DMS encryption is enabled using a CMK",
        "PluginRecommendation": "[DEFAULT] Enable encryption using KMS CMKs for all DMS replication instances.",
        "PluginRiskDescription": "Data sent through the data migration service is encrypted using KMS. Encryption is enabled by default, but it is recommended to use customer managed keys."
    },
    "DMS Multi-AZ Feature Enabled": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that your Amazon Database Migration Service (DMS) replication instances are using Multi-AZ deployment configurations.",
        "PluginRecommendation": "[DEFAULT] Enable Multi-AZ deployment feature in order to get high availability and failover support",
        "PluginRiskDescription": "AWS Database Migration Service (AWS DMS) helps you migrate databases to AWS quickly and securely. In a Multi-AZ deployment, AWS DMS automatically provisions and maintains a synchronous standby replica of the replication instance in a different Availability Zone."
    },
    "DMS Publicly Accessible Instances": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Database Migration Service (DMS) instances are not publicly accessible.",
        "PluginRecommendation": "[DEFAULT] Ensure that DMS replication instances have only private IP address and not public IP address",
        "PluginRiskDescription": "An AWS DMS replication instance can have one public IP address and one private IP address. If you uncheck (disable) the box for Publicly accessible, then the replication instance has only a private IP address. that prevents from exposure of data to other users"
    },
    "DocumentDB Cluster Instance Certificate Rotation": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that DocumentDB cluster instance certificates are rotated.",
        "PluginRecommendation": "[DEFAULT] Modify DocumentDB cluster instance and rotate the old server certificate.",
        "PluginRiskDescription": "AWS DocumentDB cluster certificate rotation ensures that cluster\\"
    },
    "DocumentDB Cluster Backup Retention": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that your Amazon DocumentDB clusters have set a minimum backup retention period.",
        "PluginRecommendation": "[DEFAULT] Modify DocumentDb cluster to configure sufficient backup retention period.",
        "PluginRiskDescription": "DocumentDB cluster provides feature to retain incremental backups between 1 and 35 allowing you to quickly restore to any point within the backup retention period. Ensure that you have sufficient backup retention period configured in order to restore your data in the event of failure."
    },
    "DocumentDB Cluster Encrypted": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that data at-rest in encrypted in AWS DocumentDB clusters using desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Modify DocumentDB cluster at-rest encryption configuration to use desired encryption key",
        "PluginRiskDescription": "Amazon DocumentDB integrates with AWS KMS and uses a method known as envelope encryption to protect your data."
    },
    "DocumentDB Cluster Profiler Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon DocumentDB clusters have profiler feature enabled.",
        "PluginRecommendation": "[DEFAULT] Modify DocumentDB cluster and enable profiler feature.",
        "PluginRiskDescription": "Enabling the Profiler for your Amazon DocumentDB clusters helps to monitor and log database operations. This makes it easier to identify slowest operations on cluster and fix performance issues by analyzing detailed logs in Amazon CloudWatch."
    },
    "DocumentDB Cluster Deletion Protection": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon DocumentDB clusters have deletion protection feature enabled.",
        "PluginRecommendation": "[DEFAULT] Modify DocumentDb cluster and enable deletion protection.",
        "PluginRiskDescription": "Enabling deletion protection feature for Amazon DocumentDB clusters acts as a safety net, preventing accidental database deletions or deletion by an unauthorized user. It ensures that the data stays secure and accessible at all times."
    },
    "DocumentDB Has Tags": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS DocumentDB clusters have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify DocumentDB cluster and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "DynamoDB Accelerator Cluster Encryption": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures DynamoDB Cluster Accelerator DAX clusters have encryption enabled.",
        "PluginRecommendation": "[DEFAULT] Enable encryption for DAX cluster.",
        "PluginRiskDescription": "DynamoDB Clusters Accelerator DAX clusters should have encryption at rest enabled to secure data from unauthorized access."
    },
    "DynamoDB Continuous Backups": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon DynamoDB tables have continuous backups enabled.",
        "PluginRecommendation": "[DEFAULT] Enable Continuous Backups and Point-In-Time Recovery (PITR) features.",
        "PluginRiskDescription": "DynamoDB tables should have Continuous Backups and Point-In-Time Recovery (PITR) features enabled to protect DynamoDB data against accidental data writes."
    },
    "DynamoDB Deletion Protection Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that DynamoDB tables have deletion protection feature enabled.",
        "PluginRecommendation": "[DEFAULT] Modify DynamoDB table and enable deletion protection.",
        "PluginRiskDescription": "Enabling deletion protection feature ensures the prevention of accidental deletion of DynamoDB tables during regular maintenance operations, thereby safeguarding your data."
    },
    "DynamoDB KMS Encryption": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures DynamoDB tables are encrypted using a customer-owned KMS key.",
        "PluginRecommendation": "[DEFAULT] Create a new DynamoDB table using a CMK KMS key.",
        "PluginRiskDescription": "DynamoDB tables can be encrypted using AWS-owned or customer-owned KMS keys. Customer keys should be used to ensure control over the encryption seed data."
    },
    "DynamoDB Table Backup Exists": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon DynamoDB tables are using on-demand backups.",
        "PluginRecommendation": "[DEFAULT] Create on-demand backups for DynamoDB tables.",
        "PluginRiskDescription": "With AWS Backup, you can configure backup policies and monitor activity for your AWS resources and on-premises workloads in one place. Using DynamoDB with AWS Backup, you can copy your on-demand backups across AWS accounts and regions, add cost allocation tags to on-demand backups, and transition on-demand backups to cold storage for lower costs."
    },
    "DynamoDB Table Has Tags": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that DynamoDB tables have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify DynamoDB table and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "DynamoDB Empty Table": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon DynamoDB empty tables are removed to optimise costs.",
        "PluginRecommendation": "[DEFAULT] Remove unused tables if you no longer need them.",
        "PluginRiskDescription": "A DynamoDB table is considered unused if its item count is zero. As a best practice, delete unused tables for operational efficiency and better resource management. This will also prevent resource wastage and unnecessary costs. This plugin might produce false positives or false negatives as AWS updates table count every 6 hours."
    },
    "Allowed Custom Ports": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that security groups does not allow public access to any port.",
        "PluginRecommendation": "[DEFAULT] Modify the security group to ensure the ports are not exposed publicly",
        "PluginRiskDescription": "Security groups should be used to restrict access to ports from known networks."
    },
    "AMI Has Tags": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AMIs have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify AMI and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "App-Tier EC2 Instance IAM Role": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure IAM roles attached with App-Tier EC2 instances have IAM policies attached.",
        "PluginRecommendation": "[DEFAULT] Modify EC2 instances to attach IAM roles with required IAM policies",
        "PluginRiskDescription": "EC2 instances should have IAM roles configured with necessary permission to access other AWS services"
    },
    "Detect EC2 Classic Instances": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures AWS VPC is being used for instances instead of EC2 Classic",
        "PluginRecommendation": "[DEFAULT] Migrate instances from EC2 Classic to VPC",
        "PluginRiskDescription": "VPCs are the latest and more secure method of launching AWS resources. EC2 Classic should not be used."
    },
    "Cross VPC Public Private Communication": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures communication between public and private VPC tiers is not enabled",
        "PluginRecommendation": "[DEFAULT] Remove the NACL rules allowing communication between the public and private tiers of different VPCs",
        "PluginRiskDescription": "Communication between the public tier of one VPC and the private tier of other VPCs should never be allowed. Instead, VPC peerings with proper NACLs and gateways should be used"
    },
    "Default Security Group": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure the default security groups block all traffic by default",
        "PluginRecommendation": "[DEFAULT] Update the rules for the default security group to deny all traffic by default",
        "PluginRiskDescription": "The default security group is often used for resources launched without a defined security group. For this reason, the default rules should be to block all traffic to prevent an accidental exposure."
    },
    "Default Security Group In Use": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS EC2 Instances are not associated with default security group.",
        "PluginRecommendation": "[DEFAULT] Modify EC2 instances and change security group.",
        "PluginRiskDescription": "The default security group allows all traffic inbound and outbound, which can make your resources vulnerable to attacks. Ensure that the Amazon EC2 instances are not associated with the default security groups."
    },
    "Default VPC Exists": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Determines whether the default VPC exists.",
        "PluginRecommendation": "[DEFAULT] Move resources from the default VPC to a new VPC created for that application or resource group.",
        "PluginRiskDescription": "The default VPC should not be used in order to avoid launching multiple services in the same network which may not require connectivity. Each application, or network tier, should use its own VPC."
    },
    "Default VPC In Use": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Determines whether the default VPC is being used for launching EC2 instances.",
        "PluginRecommendation": "[DEFAULT] Move resources from the default VPC to a new VPC created for that application or resource group.",
        "PluginRiskDescription": "The default VPC should not be used in order to avoid launching multiple services in the same network which may not require connectivity. Each application, or network tier, should use its own VPC."
    },
    "EBS Backup Enabled": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Checks whether EBS Backup is enabled",
        "PluginRecommendation": "[DEFAULT] Ensure that each EBS volumes contain at least .",
        "PluginRiskDescription": "EBS volumes should have backups in the form of snapshots."
    },
    "EBS Encryption Enabled By Default": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure the setting for encryption by default is enabled",
        "PluginRecommendation": "[DEFAULT] Enable EBS Encryption by Default",
        "PluginRiskDescription": "AWS account should be configured to enable encryption for new EBS volumes and snapshots for all regions."
    },
    "EBS Encrypted Snapshots": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures EBS snapshots are encrypted at rest",
        "PluginRecommendation": "[DEFAULT] Configure volume encryption and delete unencrypted EBS snapshots.",
        "PluginRiskDescription": "EBS snapshots should have at-rest encryption enabled through AWS using KMS. If the volume was not encrypted and a snapshot was taken the snapshot will be unencrypted."
    },
    "EBS Encryption Enabled": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures EBS volumes are encrypted at rest",
        "PluginRecommendation": "[DEFAULT] Enable encryption for EBS volumes.",
        "PluginRiskDescription": "EBS volumes should have at-rest encryption enabled through AWS using KMS. If the volume is used for a root volume, the instance must be launched from an AMI that has been encrypted as well."
    },
    "EBS Volumes Too Old Snapshots": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that EBS volume snapshots are deleted after defined time period.",
        "PluginRecommendation": "[DEFAULT] Delete the EBS snapshots past their defined expiration date",
        "PluginRiskDescription": "EBS volume snapshots older than indicated should be deleted after defined time period for cost optimization."
    },
    "EBS Volumes Recent Snapshots": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that EBS volume has had a snapshot within the last 7 days",
        "PluginRecommendation": "[DEFAULT] Create a new snapshot for EBS volume weekly.",
        "PluginRiskDescription": "EBS volumes without recent snapshots may be at risk of data loss or recovery issues."
    },
    "EBS Snapshot Has Tags": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that EBS snapshots have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify EBS snapshots and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "Automate EBS Snapshot Lifecycle": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure DLM is used to automate EBS volume snapshots management.",
        "PluginRecommendation": "[DEFAULT] Create lifecycle policy for EBS volumes.",
        "PluginRiskDescription": "Amazon Data Lifecycle Manager (DLM) service enables you to manage the lifecycle of EBS volume snapshots.\\\n            Using DLM helps in enforcing regular backup schedule, retaining backups, deleting outdated EBS snapshots"
    },
    "EBS Volume Snapshot Public": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures EBS volume snapshots are private",
        "PluginRecommendation": "[DEFAULT] Ensure that each EBS snapshot has its permissions set to private.",
        "PluginRiskDescription": "EBS volumes often contain sensitive data from running EC2 instances and should be set to private so they cannot be accidentally shared with other accounts."
    },
    "Amazon EBS Public Snapshots": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon EBS volume snapshots are not shared to all AWS accounts.",
        "PluginRecommendation": "[DEFAULT] Modify the permissions of public snapshots to remove public access.",
        "PluginRiskDescription": "AWS Elastic Block Store (EBS) volume snapshots should not be not publicly shared with other AWS account to avoid data exposure."
    },
    "Unused EBS Volumes": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures EBS volumes are in use and attached to EC2 instances",
        "PluginRecommendation": "[DEFAULT] Delete the unassociated EBS volume.",
        "PluginRiskDescription": "EBS volumes should be deleted if the parent instance has been deleted to prevent accidental exposure of data."
    },
    "EBS Volume has tags": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that EBS Volumes have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify EBS volumes and add tags",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "EC2 has Tags": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS EC2 Instances have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify EC2 instances and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "Insecure EC2 Metadata Options": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures EC2 instance metadata is updated to require HttpTokens or disable HttpEndpoint",
        "PluginRecommendation": "[DEFAULT] Update instance metadata options to use IMDSv2",
        "PluginRiskDescription": "The new EC2 metadata service prevents SSRF attack escalations from accessing the sensitive instance metadata endpoints."
    },
    "Elastic IP Limit": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Determine if the number of allocated EIPs is close to the AWS per-account limit",
        "PluginRecommendation": "[DEFAULT] Contact AWS support to increase the number of EIPs available",
        "PluginRiskDescription": "AWS limits accounts to certain numbers of resources. Exceeding those limits could prevent resources from launching."
    },
    "Instance Detailed Monitoring": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that EC2 instances have detailed monitoring feature enabled.",
        "PluginRecommendation": "[DEFAULT] Modify EC2 instance to enable detailed monitoring.",
        "PluginRiskDescription": "By default, your instance is enabled for basic monitoring. After you enable detailed monitoring, EC2 console displays monitoring graphs with a 1-minute period."
    },
    "Encrypted AMI": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures EBS-backed AMIs are configured to use encryption",
        "PluginRecommendation": "[DEFAULT] Ensure all AMIs have encrypted EBS volumes.",
        "PluginRiskDescription": "AMIs with unencrypted data volumes can be used to launch unencrypted instances that place data at risk."
    },
    "Excessive Security Groups": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Determine if there are an excessive number of security groups in the account",
        "PluginRecommendation": "[DEFAULT] Limit the number of security groups to prevent accidental authorizations",
        "PluginRiskDescription": "Keeping the number of security groups to a minimum helps reduce the attack surface of an account. Rather than creating new groups with the same rules for each project, common rules should be grouped under the same security groups. For example, instead of adding port 22 from a known IP to every group, create a single"
    },
    "VPC Flow Logs Enabled": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures VPC flow logs are enabled for traffic logging",
        "PluginRecommendation": "[DEFAULT] Enable VPC flow logs for each VPC",
        "PluginRiskDescription": "VPC flow logs record all traffic flowing in to and out of a VPC. These logs are critical for auditing and review after security incidents."
    },
    "Instance IAM Role": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures EC2 instances are using an IAM role instead of hard-coded AWS credentials",
        "PluginRecommendation": "[DEFAULT] Attach an IAM role to the EC2 instance",
        "PluginRiskDescription": "IAM roles should be assigned to all instances to enable them to access AWS resources. Using an IAM role is more secure than hard-coding AWS access keys into application code."
    },
    "EC2 Instance Key Based Login": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures EC2 instances have associated keys for password-less SSH login",
        "PluginRecommendation": "[DEFAULT] Ensure each EC2 instance has an associated SSH key and disable password login.",
        "PluginRiskDescription": "AWS allows EC2 instances to be launched with a specified PEM key for SSH login which should be used instead of user and password login."
    },
    "Instance Limit": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Determine if the number of EC2 instances is close to the AWS per-account limit",
        "PluginRecommendation": "[DEFAULT] Contact AWS support to increase the number of instances available",
        "PluginRiskDescription": "AWS limits accounts to certain numbers of resources. Exceeding those limits could prevent resources from launching."
    },
    "EC2 Max Instances": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures the total number of EC2 instances does not exceed a set threshold.",
        "PluginRecommendation": "[DEFAULT] Ensure that the number of running EC2 instances matches the expected count. If instances are launched above the threshold, investigate to ensure they are legitimate.",
        "PluginRiskDescription": "The number of running EC2 instances should be carefully audited, especially in unused regions, to ensure only approved applications are consuming compute resources. Many compromised AWS accounts see large numbers of EC2 instances launched."
    },
    "Instance vCPU On-Demand Based Limits": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Determine if the number of EC2 On-Demand instances is close to the regional vCPU based limit.",
        "PluginRecommendation": "[DEFAULT] EC2 automatically increases On Demand Instance limits based on usage, limit increases can be requested via the Limits Page on Amazon EC2 console, the EC2 service page on the Service Quotas console, or the Service Quotas API/CLI.",
        "PluginRiskDescription": "AWS limits accounts to certain numbers of resources per region. Exceeding those limits could prevent resources from launching."
    },
    "Internet Gateways In VPC": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure Internet Gateways are associated with at least one available VPC.",
        "PluginRecommendation": "[DEFAULT] Ensure Internet Gateways have VPC attached to them.",
        "PluginRiskDescription": "Internet Gateways allow communication between instances in VPC and the internet. They provide a target in VPC route tables for internet-routable traffic and also perform network address translation (NAT) for instances that have been assigned public IPv4 addresses."
    },
    "EC2 LaunchWizard Security Groups": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures security groups created by the EC2 launch wizard are not used",
        "PluginRecommendation": "[DEFAULT] Delete the launch wizard security group and replace it with a custom security group.",
        "PluginRiskDescription": "The EC2 launch wizard frequently creates insecure security groups that are exposed publicly. These groups should not be used and custom security groups should be created instead."
    },
    "Managed NAT Gateway In Use": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure AWS VPC Managed NAT (Network Address Translation) Gateway service is enabled for high availability (HA).",
        "PluginRecommendation": "[DEFAULT] Update VPCs to use Managed NAT Gateways instead of NAT instances",
        "PluginRiskDescription": "VPCs should use highly available Managed NAT Gateways in order to enable EC2 instances to connect to the internet or with other AWS components."
    },
    "VPC Multiple Subnets": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that VPCs have multiple subnets to provide a layered architecture",
        "PluginRecommendation": "[DEFAULT] Create at least two subnets in each VPC, utilizing one for public traffic and the other for private traffic.",
        "PluginRiskDescription": "VPCs should be designed to have separate public and private subnets, ideally across availability zones, enabling a DMZ-style architecture."
    },
    "NAT Multiple AZ": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures managed NAT instances exist in at least 2 AZs for availability purposes",
        "PluginRecommendation": "[DEFAULT] Launch managed NAT instances in multiple AZs.",
        "PluginRiskDescription": "Creating NAT instances in a single AZ creates a single point of failure for all systems in the VPC. All managed NAT instances should be created in multiple AZs to ensure proper failover."
    },
    "Network ACL has Tags": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Network ACLs have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify Network ACL and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "Unrestricted Network ACL Inbound Traffic": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that no Amazon Network ACL allows inbound/ingress traffic to remote administration ports.",
        "PluginRecommendation": "[DEFAULT] Update Network ACL to allow inbound/ingress traffic to specific port ranges only",
        "PluginRiskDescription": "Amazon Network ACL should not allow inbound/ingress traffic to remote administration ports to avoid unauthorized access at the subnet level."
    },
    "Unrestricted Network ACL Outbound Traffic": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that no Amazon Network ACL allows outbound/egress traffic to all ports.",
        "PluginRecommendation": "[DEFAULT] Update Network ACL to allow outbound/egress traffic to specific port ranges only",
        "PluginRiskDescription": "Amazon Network ACL should not allow outbound/egress traffic to all ports to avoid unauthorized access at the subnet level."
    },
    "Open All Ports Protocols": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if security group has all ports or protocols open to the public",
        "PluginRecommendation": "[DEFAULT] Modify the security group to specify a specific port and protocol to allow.",
        "PluginRiskDescription": "Security groups should be created on a per-service basis and avoid allowing all ports or protocols."
    },
    "Open All Ports Protocols Egress": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if security group has all outbound ports or protocols open to the public",
        "PluginRecommendation": "[DEFAULT] Modify the security group tp restrict access to only those IP addresses and/or IP ranges that require it.",
        "PluginRiskDescription": "Security groups should be created on a per-service basis and avoid allowing all ports or protocols in order to implement the Principle of Least Privilege (POLP) and reduce the attack surface."
    },
    "Open Cassandra Client": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 9042 for Cassandra Client is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 9042 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as Cassandra Client should be restricted to known IP addresses."
    },
    "Open Cassandra Internode": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 7000 for Cassandra Internode is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 7001 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as Cassandra Internode should be restricted to known IP addresses."
    },
    "Open Cassandra Monitoring": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 7199 for Cassandra Monitoring is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 7199 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as Cassandra Client should be restricted to known IP addresses."
    },
    "Open Cassandra Thrift": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 9160 for Cassandra Thrift is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 9160 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as Cassandra Client should be restricted to known IP addresses."
    },
    "Open CIFS": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if UDP port 445 for CIFS is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict UDP port 445 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as CIFS should be restricted to known IP addresses."
    },
    "Open Custom Ports": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that defined custom ports are not open to public.",
        "PluginRecommendation": "[DEFAULT] Modify the security group to ensure the defined custom ports are not exposed publicly",
        "PluginRiskDescription": "Security groups should restrict access to ports from known networks."
    },
    "Open DNS": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP or UDP port 53 for DNS is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP and UDP port 53 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as DNS should be restricted to known IP addresses."
    },
    "Open Docker": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Critical",
        "PluginTestDescription": "[DEFAULT] Determine if Docker port 2375 or 2376 is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP ports 2375 and 2376 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as Docker should be restricted to known IP addresses."
    },
    "Open Elasticsearch": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 9200 or 9300 for Elasticsearch is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 9200 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as Elasticsearch should be restricted to known IP addresses."
    },
    "Open FTP": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 20 or 21 for FTP is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP ports 20 and 21 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as FTP should be restricted to known IP addresses."
    },
    "Open Hadoop HDFS NameNode Metadata Service": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 8020 for HDFS NameNode metadata service is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 8020 to known IP addresses for Hadoop/HDFS",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as Hadoop/HDFS should be restricted to known IP addresses."
    },
    "Open Hadoop HDFS NameNode WebUI": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 50070 and 50470 for Hadoop/HDFS NameNode WebUI service is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 50070 and 50470 to known IP addresses for Hadoop/HDFS",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as Hadoop/HDFS should be restricted to known IP addresses."
    },
    "Open HTTP": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 80 for HTTP is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 80 to known IP addresses",
        "PluginRiskDescription": "While some ports are required to be open to the public to function properly, more sensitive services such as HTTP should be restricted to known IP addresses."
    },
    "Open HTTPS": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 443 for HTTPS is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 443 to known IP addresses.",
        "PluginRiskDescription": "While some ports are required to be open to the public to function properly, more sensitive services such as HTTPS should be restricted to known IP addresses."
    },
    "Open Internal Web": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 8080 for internal web is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 8080 to known IP addresses",
        "PluginRiskDescription": "Internal web port 8080 is used for web applications and proxy services. Allowing Inbound traffic from any IP address to TCP port 8080 is vulnerable to exploits like backdoor trojan attacks. It is a best practice to block port 8080 from the public internet."
    },
    "Open Kibana": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 5601 for Kibana is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 5601 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as Kibana should be restricted to known IP addresses."
    },
    "Open LDAP": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP or UDP port 389 for LDAP is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP or UDP port 389 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as LDAP should be restricted to known IP addresses."
    },
    "Open LDAPS": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 636 for LDAP SSL is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 636 to known IP addresses.",
        "PluginRiskDescription": "LDAP SSL port 636 is used for Secure LDAP authentication. Allowing Inbound traffic from any IP address to TCP port 636 is vulnerable to DoS attacks. It is a best practice to block port 636 from the public internet."
    },
    "Open Memcached": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP or UDP port 11211 for Memcached is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP and UDP port 11211 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as Memcached should be restricted to known IP addresses."
    },
    "Open MongoDB": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 27017 or 27018 or 27019 for MongoDB is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 27017 or 27018 or 27019 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as MongoDB should be restricted to known IP addresses."
    },
    "Open MySQL": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 4333 or 3306 for MySQL is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP ports 4333 and 3306 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as MySQL should be restricted to known IP addresses."
    },
    "Open NetBIOS": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if UDP port 137 or 138 or 139 for NetBIOS is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict UDP ports 137 and 138 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as NetBIOS should be restricted to known IP addresses."
    },
    "Open Oracle": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP ports 1521 , 2483 for Oracle is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP ports 1521, 2483 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open \\\n        to the public to function properly, more sensitive services such as Oracle \\\n        should be restricted to known IP addresses."
    },
    "Open Oracle Auto Data Warehouse": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 1522 for Oracle Auto Data Warehouse is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP ports 1522 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open \\\n        to the public to function properly, more sensitive services such as Oracle Auto Data Warehouse \\\n        should be restricted to known IP addresses."
    },
    "Open PostgreSQL": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 5432 for PostgreSQL is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 5432 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as PostgreSQL should be restricted to known IP addresses."
    },
    "Open RDP": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 3389 for RDP is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 3389 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as RDP should be restricted to known IP addresses."
    },
    "Open Redis": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 6379 for Redis is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 6379 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as Redis should be restricted to known IP addresses."
    },
    "Open RPC": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 135 for RPC is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 135 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as RPC should be restricted to known IP addresses."
    },
    "Open Salt": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP ports 4505 or 4506 for the Salt master are open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP ports 4505 and 4506 to known IP addresses",
        "PluginRiskDescription": "Active Salt vulnerabilities, CVE-2020-11651 and CVE-2020-11652 are exploiting Salt instances exposed to the internet. These ports should be closed immediately."
    },
    "Open SMBoTCP": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 445 for Windows SMB over TCP is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 445 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as SMB should be restricted to known IP addresses."
    },
    "Open SMTP": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 25 for SMTP is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 25 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as SMTP should be restricted to known IP addresses."
    },
    "Open SNMP": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if UDP port 161 for SNMP is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict UDP port 161 to known IP addresses.",
        "PluginRiskDescription": "SNMP UDP 161 used by various devices and applications for logging events, monitoring and management. Allowing Inbound traffic from any external IP address on port 161 is vulnerable to DoS attack. It is a best practice to block port 161 completely unless explicitly required."
    },
    "Open SQL Server": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 1433 or UDP port 1434 for SQL Server is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 1433 and UDP port 1434 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as SQL server should be restricted to known IP addresses."
    },
    "Open SSH": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 22 for SSH is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 22 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as SSH should be restricted to known IP addresses."
    },
    "Open Telnet": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 23 for Telnet is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 23 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as Telnet should be restricted to known IP addresses."
    },
    "Open VNC Client": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Critical",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 5500 for VNC Client is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 5500 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as VNC Client should be restricted to known IP addresses."
    },
    "Open VNC Server": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Determine if TCP port 5900 for VNC Server is open to the public",
        "PluginRecommendation": "[DEFAULT] Restrict TCP port 5900 to known IP addresses",
        "PluginRiskDescription": "While some ports such as HTTP and HTTPS are required to be open to the public to function properly, more sensitive services such as VNC Server should be restricted to known IP addresses."
    },
    "Outdated Amazon Machine Images": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that deprecated Amazon Machine Images are not in use.",
        "PluginRecommendation": "[DEFAULT] Delete the instances using deprecated AMIs",
        "PluginRiskDescription": "Deprecated Amazon Machine Images should not be used to make an instance."
    },
    "Overlapping Security Groups": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Determine if EC2 instances have security groups that share the same rules",
        "PluginRecommendation": "[DEFAULT] Structure security groups to provide a single category of access and do not",
        "PluginRiskDescription": "Overlapping security group rules make managing EC2 instance access much more difficult."
    },
    "EC2 CPU Alarm Threshold Exceeded": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure EC2 instances do not exceed the alarm threshold for CPU utilization.",
        "PluginRecommendation": "[DEFAULT] Investigate the cause of high CPU utilization and consider optimizing or scaling resources.",
        "PluginRiskDescription": "Excessive CPU utilization can indicate performance issues or the need for capacity optimization."
    },
    "Public AMI": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Checks for publicly shared AMIs",
        "PluginRecommendation": "[DEFAULT] Convert the public AMI a private image.",
        "PluginRiskDescription": "Accidentally sharing AMIs allows any AWS user to launch an EC2 instance using the image as a base. This can potentially expose sensitive information stored on the host."
    },
    "Public IP Address EC2 Instances": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that EC2 instances do not have public IP address attached.",
        "PluginRecommendation": "[DEFAULT] Remove the public IP address from the EC2 instances to block public access to the instance",
        "PluginRiskDescription": "EC2 instances should not have a public IP address attached in order to block public access to the instances."
    },
    "Open RFC 1918": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures EC2 security groups are configured to deny inbound traffic from RFC-1918 CIDRs",
        "PluginRecommendation": "[DEFAULT] Modify the security group to deny private reserved addresses for inbound traffic",
        "PluginRiskDescription": "RFC-1918 IP addresses are considered reserved private addresses and should not be used in security groups."
    },
    "Security Group Has Tags": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Security Groups have tags associated.",
        "PluginRecommendation": "[DEFAULT] Update Security Group and add Tags",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "Subnet IP Availability": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Determine if a subnet is at risk of running out of IP addresses",
        "PluginRecommendation": "[DEFAULT] Add a new subnet with larger CIDR block and migrate resources.",
        "PluginRiskDescription": "Subnets have finite IP addresses. Running out of IP addresses could prevent resources from launching."
    },
    "Unassociated Elastic IP Addresses": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures all EIPs are allocated to a resource to avoid accidental usage or reuse and to save costs",
        "PluginRecommendation": "[DEFAULT] Delete the unassociated Elastic IP",
        "PluginRiskDescription": "EIPs should be deleted if they are not in use to avoid extra charges."
    },
    "Unused Amazon Machine Images": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that all Amazon Machine Images are in use to ensure cost optimization.",
        "PluginRecommendation": "[DEFAULT] Delete the unused/deregistered AMIs",
        "PluginRiskDescription": "All unused/deregistered Amazon Machine Images should be deleted to avoid extraneous cost."
    },
    "Unused Elastic Network Interfaces": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that unused AWS Elastic Network Interfaces (ENIs) are removed.",
        "PluginRecommendation": "[DEFAULT] Delete the unused AWS Elastic Network Interfaces",
        "PluginRiskDescription": "Unused AWS ENIs should be removed to follow best practices and to avoid reaching the service limit."
    },
    "Unused Security Groups": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Identify and remove unused EC2 security groups.",
        "PluginRecommendation": "[DEFAULT] Remove security groups that are not being used.",
        "PluginRiskDescription": "Keeping the number of security groups to a minimum makes the management easier and helps to avoid reaching the service limit."
    },
    "Unused Virtual Private Gateway": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that unused Virtual Private Gateways (VGWs) are removed.",
        "PluginRecommendation": "[DEFAULT] Remove the unused Virtual Private Gateways (VGWs)",
        "PluginRiskDescription": "Unused VGWs should be remove to follow best practices and to avoid reaching the service limit."
    },
    "Unused VPC Internet Gateways": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that unused VPC Internet Gateways and Egress-Only Internet Gateways are removed.",
        "PluginRecommendation": "[DEFAULT] Remove the unused/detached Internet Gateways and Egress-Only Internet Gateways",
        "PluginRiskDescription": "Unused VPC Internet Gateways and Egress-Only Internet Gateways must be removed to avoid reaching the internet gateway limit."
    },
    "VPC Elastic IP Limit": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Determine if the number of allocated VPC EIPs is close to the AWS per-account limit",
        "PluginRecommendation": "[DEFAULT] Contact AWS support to increase the number of EIPs available",
        "PluginRiskDescription": "AWS limits accounts to certain numbers of resources. Exceeding those limits could prevent resources from launching."
    },
    "VPC PrivateLink Endpoint Acceptance Required": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures VPC PrivateLink endpoints require acceptance",
        "PluginRecommendation": "[DEFAULT] Update the VPC PrivateLink endpoint to require acceptance",
        "PluginRiskDescription": "VPC PrivateLink endpoints should be configured to require acceptance so that access to the endpoint is controlled on a case-by-case basis."
    },
    "VPC Endpoint Cross Account Access": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon VPC endpoints do not allow unknown cross account access.",
        "PluginRecommendation": "[DEFAULT] Update VPC endpoint access policy in order to remove untrusted cross account access",
        "PluginRiskDescription": "VPC endpoints should not allow unknown cross account access to avoid any unsigned requests made to the services inside VPC."
    },
    "VPC Endpoint Exposed": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure Amazon VPC endpoints are not publicly exposed.",
        "PluginRecommendation": "[DEFAULT] Update VPC endpoint access policy in order to stop any unsigned requests",
        "PluginRiskDescription": "VPC endpoints should not be publicly accessible in order to avoid any unsigned requests made to the services inside VPC."
    },
    "VPC Has Tags": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS VPC have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify VPCs and add new tags",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "Cross Organization VPC Peering Connections": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that VPC peering communication is only between AWS accounts, members of the same AWS Organization.",
        "PluginRecommendation": "[DEFAULT] Update VPC peering connections to allow connections to AWS Accounts, members of the same organization",
        "PluginRiskDescription": "VPC peering communication should be only between AWS accounts to keep organization resources private and isolated."
    },
    "VPC Subnet Instances Present": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that there are instances attached to every subnet.",
        "PluginRecommendation": "[DEFAULT] Update VPC subnets and attach instances to it or remove the unused VPC subnets",
        "PluginRiskDescription": "All subnets should have instances associated and unused subnets should be removed to avoid reaching the limit."
    },
    "Virtual Private Gateway In VPC": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure Virtual Private Gateways are associated with at least one VPC.",
        "PluginRecommendation": "[DEFAULT] Check if virtual private gateways have vpc associated",
        "PluginRiskDescription": "Virtual Private Gateways allow communication between cloud infrastructure and the remote customer network. They help in establishing VPN connection between VPC and the customer gateway."
    },
    "VPN Tunnel State": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that each AWS Virtual Private Network (VPN) connection has all tunnels up.",
        "PluginRecommendation": "[DEFAULT] Establish a successful VPN connection using IKE or IPsec configuration",
        "PluginRiskDescription": "AWS Virtual Private Network (VPN) should have tunnels up to ensure network traffic flow over Virtual Private Network."
    },
    "Web-Tier EC2 Instance IAM Role": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure IAM roles attached with Web-Tier EC2 instances have IAM policies attached.",
        "PluginRecommendation": "[DEFAULT] Modify EC2 instances to attach IAM roles with required IAM policies",
        "PluginRiskDescription": "EC2 instances should have IAM roles configured with necessary permission to access other AWS services"
    },
    "Amazon ECR Scan on Push": {
        "PluginDomain": "Containers",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures Amazon ECR container images are automatically scanned for security vulnerabilities after being pushed to a repository.",
        "PluginRecommendation": "[DEFAULT] Enable",
        "PluginRiskDescription": "Scan on Push for Amazon ECR is an automated vulnerability assessment feature that helps improve the security of ECR container images by scanning them for OS vulnerabilities."
    },
    "ECR Repository Encrypted": {
        "PluginDomain": "Containers",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that the images in ECR repository are encrypted using desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Create ECR Repository with customer-manager keys (CMKs).",
        "PluginRiskDescription": "By default, Amazon ECR uses server-side encryption with Amazon S3-managed encryption keys which encrypts your data at rest using an AES-256 encryption algorithm."
    },
    "ECR Repository Has Tags": {
        "PluginDomain": "Containers",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon ECR repositories have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify ECR repository and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "ECR Repository Policy": {
        "PluginDomain": "Containers",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures ECR repository policies do not enable global or public access to images",
        "PluginRecommendation": "[DEFAULT] Update the repository policy to limit access to known IAM entities.",
        "PluginRiskDescription": "ECR repository policies should limit access to images to known IAM entities and AWS accounts and avoid the use of account-level wildcards."
    },
    "ECR Repository Tag Immutability": {
        "PluginDomain": "Containers",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures ECR repository image tags cannot be overwritten",
        "PluginRecommendation": "[DEFAULT] Update ECR registry configurations to ensure image tag mutability is set to immutable.",
        "PluginRiskDescription": "ECR repositories should be configured to prevent overwriting of image tags to avoid potentially-malicious images from being deployed to live environments."
    },
    "ECS Cluster Active Services": {
        "PluginDomain": "Containers",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS ECS clusters have active services.",
        "PluginRecommendation": "[DEFAULT] Modify Cluster and create new service.",
        "PluginRiskDescription": "Amazon ECS service allows you to run and maintain a specified number of instances of a task definition simultaneously in an Amazon ECS cluster. It is recommended to have clusters with the active services to avoid any container attack surface."
    },
    "ECS Cluster Has Tags": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS ECS Clusters have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify ECS Cluster and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "ECS Cluster Service Active Tasks": {
        "PluginDomain": "Containers",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure ECS clusters have services with running tasks.",
        "PluginRecommendation": "[DEFAULT] Modify Cluster services and add tasks",
        "PluginRiskDescription": "A task is the instantiation of a task definition within a cluster. Amazon ECS service instantiates and maintains the specified number of tasks simultaneously in a cluster. As a best practice, ensure you always have running tasks in a cluster."
    },
    "Container Insights Enabled": {
        "PluginDomain": "Containers",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that ECS clusters have CloudWatch Container Insights feature enabled.",
        "PluginRecommendation": "[DEFAULT] Enabled container insights feature for ECS clusters.",
        "PluginRiskDescription": "CloudWatch Container Insights provides monitoring and troubleshooting solution for containerized applications and microservices that collects, aggregates and summarizes resource utilization such as CPU, memory, disk, and network."
    },
    "EFS CMK Encrypted": {
        "PluginDomain": "Storage",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure EFS file systems are encrypted using Customer Master Keys (CMKs).",
        "PluginRecommendation": "[DEFAULT] Encryption at rest key can only be configured during file system creation. Encryption of data in transit is configured when mounting your file system. 1. Backup your data in not encrypted efs 2. Recreate the EFS and use KMS CMK for encryption of data at rest.",
        "PluginRiskDescription": "EFS file systems should use KMS Customer Master Keys (CMKs) instead of AWS managed keys for encryption in order to have full control over data encryption and decryption."
    },
    "EFS Encryption Enabled": {
        "PluginDomain": "Storage",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that EFS volumes are encrypted at rest",
        "PluginRecommendation": "[DEFAULT] Encryption of data at rest can only be enabled during file system creation. Encryption of data in transit is configured when mounting your file system. 1. Backup your data in not encrypted efs 2. Recreate the EFS and select \\",
        "PluginRiskDescription": "EFS offers data at rest encryption using keys managed through AWS Key Management Service (KMS)."
    },
    "EFS Has Tags": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS EFS file systems have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify EFS file systems to add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "EKS Cluster Has Tags": {
        "PluginDomain": "Containers",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS EKS Clusters have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify EKS Cluster and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "EKS Kubernetes Version": {
        "PluginDomain": "Containers",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures the latest version of Kubernetes is installed on EKS clusters",
        "PluginRecommendation": "[DEFAULT] Upgrade the version of Kubernetes on all EKS clusters to the latest available version.",
        "PluginRiskDescription": "EKS supports provisioning clusters from several versions of Kubernetes. Clusters should be kept up to date to ensure Kubernetes security patches are applied."
    },
    "EKS Latest Platform Version": {
        "PluginDomain": "Containers",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that EKS clusters are using latest platform version.",
        "PluginRecommendation": "[DEFAULT] Check for the version on all EKS clusters to be the latest platform version.",
        "PluginRiskDescription": "Amazon EKS platform versions represent the capabilities of the Amazon EKS cluster control plane, such as which Kubernetes API server flags are enabled, as well as the current Kubernetes patch version."
    },
    "EKS Logging Enabled": {
        "PluginDomain": "Containers",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures all EKS cluster logs are being sent to CloudWatch",
        "PluginRecommendation": "[DEFAULT] Enable all EKS cluster logs to be sent to CloudWatch with proper log retention limits.",
        "PluginRiskDescription": "EKS supports routing of cluster event and audit logs to CloudWatch, including control plane logs. All logs should be sent to CloudWatch for security analysis."
    },
    "EKS Private Endpoint": {
        "PluginDomain": "Containers",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures the private endpoint setting is enabled for EKS clusters",
        "PluginRecommendation": "[DEFAULT] Enable the private endpoint setting for all EKS clusters.",
        "PluginRiskDescription": "EKS private endpoints can be used to route all traffic between the Kubernetes worker and control plane nodes over a private VPC endpoint rather than across the public internet."
    },
    "EKS Secrets Encrypted": {
        "PluginDomain": "Containers",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures EKS clusters are configured to enable envelope encryption of Kubernetes secrets using KMS.",
        "PluginRecommendation": "[DEFAULT] Modify EKS clusters to enable envelope encryption for Kubernetes secrets",
        "PluginRiskDescription": "Amazon EKS clusters should be configured to enable envelope encryption for Kubernetes secrets to adhere to security best practice for applications that store sensitive data."
    },
    "EKS Security Groups": {
        "PluginDomain": "Containers",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures the EKS control plane only allows inbound traffic on port 443.",
        "PluginRecommendation": "[DEFAULT] Configure security groups for the EKS control plane to allow access only on port 443.",
        "PluginRiskDescription": "The EKS control plane only requires port 443 access. Security groups for the control plane should not add additional port access."
    },
    "ElastiCache Cluster In VPC": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that your ElastiCache clusters are provisioned within the AWS VPC platform.",
        "PluginRecommendation": "[DEFAULT] Create ElastiCache clusters within VPC network",
        "PluginRiskDescription": "Creating Amazon ElastiCache clusters inside Amazon VPC can bring multiple advantages such as better networking infrastructure and flexible control over access security ."
    },
    "ElastiCache Default Ports": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure AWS ElastiCache clusters are not using the default ports set for Redis and Memcached cache engines.",
        "PluginRecommendation": "[DEFAULT] Configure ElastiCache clusters to use the non-default ports.",
        "PluginRiskDescription": "ElastiCache clusters should be configured not to use the default assigned port value for Redis (6379) and Memcached (11211)."
    },
    "ElastiCache Instance Generation": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that all ElastiCache clusters provisioned within your AWS account are using the latest generation of instances",
        "PluginRecommendation": "[DEFAULT] Upgrade ElastiCache instance generation to the latest available generation.",
        "PluginRiskDescription": "Using the latest generation of Amazon ElastiCache instances instances will benefit clusters for higher hardware performance,"
    },
    "ElastiCache Nodes Count": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that the number of ElastiCache cluster cache nodes has not reached the limit quota established by your organization.",
        "PluginRecommendation": "[DEFAULT] Enable limit for ElastiCache cluster nodes count",
        "PluginRiskDescription": "Defining limits for the maximum number of ElastiCache cluster nodes that can be created within your AWS account will help you to better manage your ElastiCache compute resources and prevent unexpected charges on your AWS bill."
    },
    "ElastiCache Redis Cluster Have Multi-AZ": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that your ElastiCache Redis Cache clusters are using a Multi-AZ deployment configuration to enhance High Availability.",
        "PluginRecommendation": "[DEFAULT] Enable Redis Multi-AZ for ElastiCache clusters",
        "PluginRiskDescription": "Enabling the Multi-AZ feature for your Redis Cache clusters will improve the fault tolerance in case the read/write primary node becomes unreachable due to loss of network connectivity, loss of availability in the primary\u00e2\u20ac\u2122s AZ, etc."
    },
    "ElastiCache Desired Node Type": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that the Amazon ElastiCache cluster nodes provisioned in your AWS account have the desired node type established within your organization based on the workload deployed.",
        "PluginRecommendation": "[DEFAULT] Create ElastiCache clusters with desired node types",
        "PluginRiskDescription": "Setting limits for the type of Amazon ElastiCache cluster nodes will help you address internal compliance requirements and prevent unexpected charges on your AWS bill."
    },
    "ElastiCache Cluster Has Tags": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that ElastiCache clusters have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify ElastiCache cluster and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "ElastiCache idle Cluster Status": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Identify ElastiCache clusters having CPU utilization below defined threshold within last 24 hours (idle clusters).",
        "PluginRecommendation": "[DEFAULT] Identify and remove idle ElastiCache clusters",
        "PluginRiskDescription": "Idle Amazon ElastiCache cache cluster nodes represent a good candidate to reduce your monthly AWS costs and avoid accumulating unnecessary usage charges."
    },
    "ElastiCache Redis Cluster Encryption At-Rest": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that your Amazon ElastiCache Redis clusters are encrypted to increase data security.",
        "PluginRecommendation": "[DEFAULT] Enable encryption for ElastiCache cluster data-at-rest",
        "PluginRiskDescription": "Amazon ElastiCache provides an optional feature to encrypt your data saved to persistent media."
    },
    "ElastiCache Redis Cluster Encryption In-Transit": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that your AWS ElastiCache Redis clusters have encryption in-transit enabled.",
        "PluginRecommendation": "[DEFAULT] Enable in-transit encryption for ElastiCache clusters",
        "PluginRiskDescription": "Amazon ElastiCache in-transit encryption is an optional feature that allows you to increase the security of your data at its most vulnerable points\u00e2\u20ac\u201dwhen it is in transit from one location to another."
    },
    "ElastiCache Engine Versions for Redis": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon ElastiCache clusters are using the stable latest version of Redis cache engine.",
        "PluginRecommendation": "[DEFAULT] Upgrade the version of Redis on all ElastiCache clusters to the latest available version.",
        "PluginRiskDescription": "ElastiCache clusters with the latest version of Redis cache engine, You will benefit from new features and enhancements,"
    },
    "ElastiCache Reserved Cache Node Lease Expiration": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that your AWS ElastiCache Reserved Cache Nodes are renewed before expiration in order to get a significant discount.",
        "PluginRecommendation": "[DEFAULT] Enable ElastiCache reserved cache nodes expiration days alert",
        "PluginRiskDescription": "Reserved Cache Nodes can optimize your Amazon ElastiCache costs based on your expected usage. Since RCNs are not renewed automatically, purchasing another reserved ElastiCache nodes before expiration will guarantee their billing at a discounted hourly rate."
    },
    "ElastiCache Reserved Cache Node Payment Failed": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that payments for ElastiCache Reserved Cache Nodes available within your AWS account has been processed completely.",
        "PluginRecommendation": "[DEFAULT] Identify any failed payments for ElastiCache reserved cache nodes",
        "PluginRiskDescription": "When using ElastiCache Reserved Cache Nodes over standard On-Demand Cache Nodes savings are up to max that they give when used in steady state, therefore in order to receive this benefit you need to make sure that all your ElastiCache reservation purchases have been fully successful."
    },
    "ElastiCache Reserved Cache Node Payment Pending": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that payments for ElastiCache Reserved Cache Nodes available within your AWS account has been processed completely.",
        "PluginRecommendation": "[DEFAULT] Identify any pending payments for ElastiCache reserved cache nodes",
        "PluginRiskDescription": "When using ElastiCache Reserved Cache Nodes over standard On-Demand Cache Nodes savings are up to max that they give when used in steady state, therefore in order to receive this benefit you need to make sure that all your ElastiCache reservation purchases have been fully successful."
    },
    "Unused ElastiCache Reserved Cache Nodes": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that all your AWS ElastiCache reserved nodes have corresponding cache nodes running within the same account of an AWS Organization.",
        "PluginRecommendation": "[DEFAULT] Enable prevention of unused reserved nodes for ElastiCache clusters",
        "PluginRiskDescription": "Creating cache nodes for your unused reserved cache clusters will prevent your investment having a negative return. When an Amazon ElastiCache RCN is not in use the investment made is not properly exploited."
    },
    "Enhanced Health Reporting": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Elastic Beanstalk (EB) environments have enhanced health reporting feature enabled.",
        "PluginRecommendation": "[DEFAULT] Modify Elastic Beanstalk environmentsand enable enhanced health reporting.",
        "PluginRiskDescription": "Enhanced health reporting is a feature that you can enable on your environment to allow AWS Elastic Beanstalk to gather additional"
    },
    "Environment Access Logs": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that your Amazon Elastic Beanstalk environment is configured to save logs for load balancer associated with the application environment.",
        "PluginRecommendation": "[DEFAULT] Go to specific environment, select Configuration, edit Load Balancer category, and enable Store logs",
        "PluginRiskDescription": "Elastic Load Balancing provides access logs that capture detailed information about requests sent to your load balancer. Each log contains information such as the time the request was received, the client\\"
    },
    "Environment Persistent Logs": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Elastic Beanstalk environment logs are retained and saved on S3.",
        "PluginRecommendation": "[DEFAULT] Go to specific environment, select Configuration, edit Software category, and enable Log streaming",
        "PluginRiskDescription": "Elastic Beanstalk environment logs should be retained in order to keep the logging data for future audits, historical purposes or to track and analyze the EB application environment behavior for a long period of time."
    },
    "ElasticBeanstalk Managed Platform Updates": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures ElasticBeanstalk applications are configured to use managed updates.",
        "PluginRecommendation": "[DEFAULT] Update the environment to enable managed updates.",
        "PluginRiskDescription": "Environments for an application should be configured to allow platform managed updates."
    },
    "Elastic Transcoder Job Outputs Encrypted": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Elastic Transcoder jobs have encryption enabled to encrypt your data before saving on S3.",
        "PluginRecommendation": "[DEFAULT] Enable encryption for Elastic Transcoder job outputs",
        "PluginRiskDescription": "Amazon Elastic Transcoder jobs saves th result output on S3. If you don\\"
    },
    "Elastic Transcoder Pipeline Data Encrypted": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Elastic Transcoder pipelines have encryption enabled with desired encryption level to encrypt your data.",
        "PluginRecommendation": "[DEFAULT] Modify Elastic Transcoder pipelines encryption settings to use custom KMS key",
        "PluginRiskDescription": "Amazon Elastic Transcoder pipelines use AWS-managed KMS keys to encrypt your data."
    },
    "App-Tier ELB Security Policy": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS App-Tier ELBs are using the latest predefined security policies.",
        "PluginRecommendation": "[DEFAULT] Update App-Tier ELB reference security policy to latest predefined security policy to secure the connection between client and ELB",
        "PluginRiskDescription": "AWS App-Tier ELBs should use the latest predefined security policies to secure the connection between client and ELB."
    },
    "Classic Load Balancers In Use": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that HTTP/HTTPS applications are using Application Load Balancer instead of Classic Load Balancer.",
        "PluginRecommendation": "[DEFAULT] Detach Classic Load balancer from HTTP/HTTPS applications and attach Application Load Balancer to those applications",
        "PluginRiskDescription": "HTTP/HTTPS applications should use Application Load Balancer instead of Classic Load Balancer for cost and web traffic distribution optimization."
    },
    "ELB Connection Draining Enabled": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS ELBs have connection draining enabled.",
        "PluginRecommendation": "[DEFAULT] Update ELBs to enable connection draining",
        "PluginRiskDescription": "Connection draining should be used to ensure that a Classic Load Balancer stops sending requests to instances that are de-registering or unhealthy, while keeping the existing connections open."
    },
    "ELB Cross-Zone Load Balancing": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS ELBs have cross-zone load balancing enabled.",
        "PluginRecommendation": "[DEFAULT] Update AWS ELB to enable cross zone load balancing",
        "PluginRiskDescription": "AWS ELBs should have cross-zone load balancing enabled to distribute the traffic evenly across the registered instances in all enabled Availability Zones."
    },
    "ELB Has Tags": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that ELBs have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify ELB and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "ELB HTTPS Only": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures ELBs are configured to only accept",
        "PluginRecommendation": "[DEFAULT] Remove non-HTTPS listeners from load balancer.",
        "PluginRiskDescription": "For maximum security, ELBs can be configured to only"
    },
    "ELB Logging Enabled": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures load balancers have request logging enabled.",
        "PluginRecommendation": "[DEFAULT] Enable ELB request logging",
        "PluginRiskDescription": "Logging requests to ELB endpoints is a helpful way"
    },
    "ELB No Instances": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Detects ELBs that have no backend instances attached",
        "PluginRecommendation": "[DEFAULT] Delete old ELBs that no longer have backend resources.",
        "PluginRiskDescription": "All ELBs should have backend server resources."
    },
    "ELB Unhealthy Instances": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS ELBs have healthy instances attached",
        "PluginRecommendation": "[DEFAULT] Investigate and resolve the health issues of the instances attached to the ELB.",
        "PluginRiskDescription": "ELBs should have healthy instances attached to ensure proper load balancing and availability. The status of the instances that are healthy should be InService."
    },
    "Insecure Ciphers": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Detect use of insecure ciphers on ELBs",
        "PluginRecommendation": "[DEFAULT] Update your ELBs to use the recommended cipher suites",
        "PluginRiskDescription": "Various security vulnerabilities have rendered several ciphers insecure. Only the recommended ciphers should be used."
    },
    "ELBv2 Cross-Zone Load Balancing": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS ELBv2 load balancers have cross-zone load balancing enabled.",
        "PluginRecommendation": "[DEFAULT] Update AWS ELBv2 load balancers to enable cross zone load balancing.",
        "PluginRiskDescription": "AWS ELBv2 should have cross-zone load balancing enabled to distribute the traffic evenly across the registered instances in all enabled Availability Zones."
    },
    "ELBv2 Deletion Protection": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures ELBv2 load balancers are configured with deletion protection.",
        "PluginRecommendation": "[DEFAULT] Update ELBv2 load balancers to use deletion protection to prevent accidental deletion",
        "PluginRiskDescription": "ELBv2 load balancers should be configured with deletion protection to prevent accidental"
    },
    "ELBv2 Deprecated SSL Policies": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Elbv2 listeners are configured to use the latest predefined security policies.",
        "PluginRecommendation": "[DEFAULT] Modify ELBv2 listeners with the latest predefined AWS security policies.",
        "PluginRiskDescription": "Insecure or deprecated security policies can expose the client and the load balancer to various vulnerabilities."
    },
    "ELBv2 Deregistration Delay": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS ELBv2 target groups have deregistration delay configured.",
        "PluginRecommendation": "[DEFAULT] Update ELBv2 target group attributes and set the deregistration delay value",
        "PluginRiskDescription": "AWS ELBv2 target groups should have deregistration delay configured to help in-flight requests to the target to complete."
    },
    "ELBv2 Has Tags": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that ELBv2 load balancers have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify ELBv2 and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "ELBv2 HTTPS Only": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures ELBs are configured to only accept",
        "PluginRecommendation": "[DEFAULT] Remove non-HTTPS listeners from load balancer.",
        "PluginRiskDescription": "For maximum security, ELBs can be configured to only"
    },
    "ELBv2 Insecure Ciphers": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Elbv2 listeners are configured to use the predefined security policies containing secure ciphers.",
        "PluginRecommendation": "[DEFAULT] Modify ELBv2 listeners with the predefined AWS security policies containing secure ciphers.",
        "PluginRiskDescription": "A security policy is a combination of protocols and ciphers. The protocol establishes a secure connection between a client and a server and ensures that all data passed between the client and your load balancer is private."
    },
    "ELBv2 Logging Enabled": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures load balancers have request logging enabled.",
        "PluginRecommendation": "[DEFAULT] Enable ELB request logging",
        "PluginRiskDescription": "Logging requests to ELB endpoints is a helpful way"
    },
    "ELBv2 Minimum Number of EC2 Target Instances": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that there is a minimum number of two healthy target instances associated with each AWS ELBv2 load balancer.",
        "PluginRecommendation": "[DEFAULT] Associate at least two healthy target instances to AWS ELBv2 load balancer",
        "PluginRiskDescription": "There should be a minimum number of two healthy target instances associated with each AWS ELBv2 load balancer to ensure fault tolerance."
    },
    "ELBv2 NLB Listener Security": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS Network Load Balancers have secured listener configured.",
        "PluginRecommendation": "[DEFAULT] Attach TLS listener to AWS Network Load Balancer",
        "PluginRiskDescription": "AWS Network Load Balancer should have TLS protocol listener configured to terminate TLS traffic."
    },
    "ELBv2 No Instances": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Detects ELBs that have no target groups attached",
        "PluginRecommendation": "[DEFAULT] Delete old ELBs that no longer have backend resources.",
        "PluginRiskDescription": "All ELBs should have backend server resources."
    },
    "ELB SSL Termination": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Load Balancers has SSL certificate configured for SSL terminations.",
        "PluginRecommendation": "[DEFAULT] Attach SSL certificate with the listener to AWS Elastic Load Balancer",
        "PluginRiskDescription": "SSL termination or SSL offloading decrypts and verifies data on the load balancer instead of the application server which spares the server of having to organize incoming connections and prioritize on other tasks like loading web pages. This helps increase server speed."
    },
    "ELBv2 TLS Version and Cipher Header Disabled": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "low",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS ELBv2 load balancers does not have TLS version and cipher headers enabled.",
        "PluginRecommendation": "[DEFAULT] Update ELBv2 load balancer traffic configuration to disable TLS version and cipher headers",
        "PluginRiskDescription": "TLS Version and Cipher Header provides information about the specific TLS version and cipher suite used during the establishment of the secure connection. Enabling the header might leak the sensitive information about the encryption protocols and algorithms being used"
    },
    "ELBv2 Unhealthy Instances": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that ELBv2 have healthy instances attached",
        "PluginRecommendation": "[DEFAULT] Investigate and resolve the health issues with the instances attached to the ELB.",
        "PluginRiskDescription": "ELBs should have healthy instances to ensure proper load balancing and availability."
    },
    "ELBv2 WAF Enabled": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that all Application Load Balancers have WAF enabled.",
        "PluginRecommendation": "[DEFAULT] 1. Enter the WAF service. 2. Enter Web ACLs and filter by the region the Application Load Balancer is in. 3. If no Web ACL is found, Create a new Web ACL in the region the ALB resides and in Resource type to associate with web ACL, select the Load Balancer.",
        "PluginRiskDescription": "Enabling WAF allows control over requests to the load balancer, allowing or denying traffic based off rules in the Web ACL"
    },
    "EMR Cluster Has Tags": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that EMR clusters have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify EMR cluster and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "EMR Cluster In VPC": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that your Amazon Elastic MapReduce (EMR) clusters are provisioned using the AWS VPC platform instead of EC2-Classic platform.",
        "PluginRecommendation": "[DEFAULT] EMR clusters Available in VPC",
        "PluginRiskDescription": "AWS EMR clusters using VPC platform instead of EC2-Classic can bring multiple advantages such as better networking infrastructure, much more flexible control over access security ."
    },
    "EMR Cluster Logging": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure AWS Elastic MapReduce (EMR) clusters capture detailed log data to Amazon S3.",
        "PluginRecommendation": "[DEFAULT] Modify EMR clusters to enable cluster logging",
        "PluginRiskDescription": "EMR cluster logging should be enabled to save log files for troubleshooting purposes."
    },
    "EMR Cluster Desired Instance Type": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure AWS Elastic MapReduce (EMR) clusters are using desired instance type.",
        "PluginRecommendation": "[DEFAULT] Modify EMR clusters to enable cluster logging",
        "PluginRiskDescription": "EMR cluster desired instance should be enabled  to get the desired instance type."
    },
    "EMR Encryption At Rest": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures encryption at rest for local disks is enabled for EMR clusters",
        "PluginRecommendation": "[DEFAULT] Update security configuration associated with EMR cluster to enable encryption at rest for local disks.",
        "PluginRiskDescription": "EMR clusters should be configured to enable encryption at rest for local disks."
    },
    "EMR Encryption In Transit": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures encryption in transit is enabled for EMR clusters",
        "PluginRecommendation": "[DEFAULT] Update security configuration associated with EMR cluster to enable encryption in transit.",
        "PluginRiskDescription": "EMR clusters should be configured to enable encryption in transit."
    },
    "EMR Instances Counts": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that the number of EMR cluster instances provisioned in your AWS account has not reached the desired threshold established by your organization.",
        "PluginRecommendation": "[DEFAULT] Ensure that the number of running EMR cluster instances matches the expected count. If instances are launched above the threshold, investigate to ensure they are legitimate.",
        "PluginRiskDescription": "Setting threshold for the number of EMR cluster instances provisioned within your AWS account will help to manage EMR compute resources and"
    },
    "Event Bus Cross Account Access": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that EventBridge event bus is configured to allow access to whitelisted AWS account principals.",
        "PluginRecommendation": "[DEFAULT] Configure EventBridge event bus policies that allow access to whitelisted/trusted cross-account principals.",
        "PluginRiskDescription": "EventBridge event bus policy should be configured to allow access only to whitelisted/trusted cross-account principals."
    },
    "Event Bus Public Access": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that EventBridge event bus is configured to prevent exposure to public access.",
        "PluginRecommendation": "[DEFAULT] Configure EventBridge event bus policies that allow access to whitelisted/trusted account principals but not public access.",
        "PluginRiskDescription": "The default event bus in your Amazon account only allows events from one account. You can grant additional permissions to an event bus by attaching a resource-based policy to it."
    },
    "EventBridge Event Rules In Use": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon EventBridge Events service is in use in order to enable you to react selectively and efficiently to system events.",
        "PluginRecommendation": "[DEFAULT] Create EventBridge event rules to meet regulatory and compliance requirement within your organization.",
        "PluginRiskDescription": "Amazon EventBridge Events delivers a near real-time stream of system events that describe changes in Amazon Web Services (AWS) resources. Using simple rules that you can quickly set up, you can match events and route them to one or more target functions or streams."
    },
    "FinSpace Environment Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS FinSpace Environments are using desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Create FinSpace Environment with customer-manager keys (CMKs).",
        "PluginRiskDescription": "Amazon FinSpace is a fully managed data management and analytics service that makes it easy to store, catalog, and prepare financial industry data at scale."
    },
    "Firehose Delivery Stream Destination CMK Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures Firehose delivery stream data records are encrypted at destination bucket using AWS KMS key of desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Enable encryption using desired level for all Firehose Delivery Streams destination S3 bucket.",
        "PluginRiskDescription": "Encrypting Kinesis Firehose delivery stream data records at the destination S3 bucket is crucial for compliance and data security. This ensures that data is protected at rest, meeting regulatory requirements and providing an additional layer of security, essential for organizations with strict data protection mandates."
    },
    "Firehose Delivery Streams Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures Firehose Delivery Stream encryption is enabled",
        "PluginRecommendation": "[DEFAULT] Enable encryption using KMS for all Firehose Delivery Streams.",
        "PluginRiskDescription": "Data sent through Firehose Delivery Streams can be encrypted using KMS server-side encryption. Existing delivery streams can be modified to add encryption with minimal overhead."
    },
    "Forecast Dataset Export Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Forecast exports have encryption enabled before they are being saved on S3.",
        "PluginRecommendation": "[DEFAULT] Create Forecast exports with encryption enabled",
        "PluginRiskDescription": "In AWS Forecast, you can save forecast reports on S3 in CSV format. Make sure to encrypt these export before writing them to the bucket in order to follow your organizations\\"
    },
    "Forecast Dataset Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Forecast datasets are using desired KMS key for data encryption.",
        "PluginRecommendation": "[DEFAULT] Create Forecast datasets using customer-manager KMS keys (CMKs).",
        "PluginRiskDescription": "Datasets contain the data used to train a predictor. You create one or more Amazon Forecast datasets and import your training data into them."
    },
    "Fraud Detector Data Encrypted": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Fraud Detector has encryption enabled for data at rest with desired KMS encryption level.",
        "PluginRecommendation": "[DEFAULT] Enable encryption for data at rest using PutKMSEncryptionKey API",
        "PluginRiskDescription": "Amazon Fraud Detector encrypts your data at rest with AWS-managed KMS key. Use customer-manager KMS keys (CMKs) instead in order to follow your organizations\\"
    },
    "FSx File System Encrypted": {
        "PluginDomain": "Storage",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon FSx for Windows File Server file systems are encrypted using desired KMS encryption level.",
        "PluginRecommendation": "[DEFAULT] Enable encryption for file systems created under Amazon FSx for Windows File Server",
        "PluginRiskDescription": "If your organization is subject to corporate or regulatory policies that require encryption of data and metadata at rest, AWS recommends creating encrypted file systems."
    },
    "AWS Glue Job Bookmark Encryption Enabled": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS Glue job bookmark encryption is enabled.",
        "PluginRecommendation": "[DEFAULT] Recreate Glue security configurations and enable job bookmark encryption",
        "PluginRiskDescription": "AWS Glue security configuration should have job bookmark encryption enabled in order to encrypt the bookmark data before it is sent to Amazon S3."
    },
    "AWS Glue Data Catalog CMK Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS Glue has data catalog encryption enabled with KMS Customer Master Key (CMK).",
        "PluginRecommendation": "[DEFAULT] Modify Glue data catalog to use CMK instead of AWS-managed Key to encrypt Metadata",
        "PluginRiskDescription": "AWS Glue should have data catalog encryption enabled with KMS Customer Master Key (CMK) instead of AWS-managed Key in order to gain more granular control over encryption/decryption process."
    },
    "AWS Glue Data Catalog Encryption Enabled": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS Glue Data Catalogs has encryption at-rest enabled.",
        "PluginRecommendation": "[DEFAULT] Modify Glue data catalog settings and enable metadata encryption",
        "PluginRiskDescription": "Encryption should be enabled for metadata objects stored in your AWS Glue Data Catalog to secure sensitive data."
    },
    "AWS Glue CloudWatch Encrypted Logs": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that encryption at-rest is enabled when writing AWS Glue logs to Amazon CloudWatch.",
        "PluginRecommendation": "[DEFAULT] Modify Glue Security Configurations to enable CloudWatch logs encryption at-rest",
        "PluginRiskDescription": "AWS Glue should have encryption at-rest enabled for AWS Glue logs to ensure security of AWS Glue logs."
    },
    "AWS Glue S3 Encryption Enabled": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that encryption at-rest is enabled when writing AWS Glue data to Amazon S3.",
        "PluginRecommendation": "[DEFAULT] Recreate AWS Glue Security Configuration to enable Amazon S3 encryption at-rest",
        "PluginRiskDescription": "AWS Glue should have encryption at-rest enabled for Amazon S3 to ensure security of data at rest and to prevent unauthorized access."
    },
    "AWS Glue DataBrew Job Output Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Glue DataBrew jobs have encryption enabled for output files with desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Modify Glue DataBrew jobs to set desired encryption configuration",
        "PluginRiskDescription": "AWS Glue DataBrew jobs should have encryption enabled to encrypt S3 targets i.e. output files to meet regulatory compliance requirements within your organization."
    },
    "Exported Findings Encrypted": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that GuardDuty findings export is encrypted using desired KMS encryption level.",
        "PluginRecommendation": "[DEFAULT] Encrypt GuardDuty Export Findings with customer-manager keys (CMKs)",
        "PluginRiskDescription": "GuardDuty data, such as findings, is encrypted at rest using AWS owned customer master keys (CMK)."
    },
    "GuardDuty is Enabled": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures GuardDuty is enabled",
        "PluginRecommendation": "[DEFAULT] Enable GuardDuty for all AWS accounts.",
        "PluginRiskDescription": "GuardDuty provides threat intelligence by analyzing several AWS data sources for security risks and should be enabled in all accounts."
    },
    "GuardDuty Master Account": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures GuardDuty master account is correct",
        "PluginRecommendation": "[DEFAULT] Configure the member account to send GuardDuty findings to a known master account.",
        "PluginRiskDescription": "Organizations with large numbers of AWS accounts should configure GuardDuty findings from all member accounts to be sent to a consistent master account."
    },
    "GuardDuty Lambda Protection Enabled": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures GuardDuty protection is enabled for Lambda functions.",
        "PluginRecommendation": "[DEFAULT] Enable GuardDuty Lambda protection for all AWS accounts.",
        "PluginRiskDescription": "Enabling GuardDuty Lambda Protection helps detect potential security threats offering enhanced security by monitoring network activity logs and generating findings for suspicious activities and security issues."
    },
    "GuardDuty No Active Findings": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that GurardDuty active/current findings does not exist in your AWS account.",
        "PluginRecommendation": "[DEFAULT] Resolve the GuardDuty findings and archive them",
        "PluginRiskDescription": "Amazon GuardDuty is a threat detection service that continuously monitors your AWS accounts and workloads for malicious activity and delivers detailed security findings for visibility and remediation."
    },
    "GuardDuty RDS Protection Enabled": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures GuardDuty protection is enabled for RDS instances.",
        "PluginRecommendation": "[DEFAULT] Enable GuardDuty RDS protection for all AWS accounts.",
        "PluginRiskDescription": "Enabling GuardDuty RDS Protection helps analyze RDS login activity to identify access threats, offering enhanced security. It enables proactive threat detection, automated alerting, and flexible configuration for AWS accounts."
    },
    "S3 GuardDuty Enabled": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures GuardDuty is enabled for S3 buckets",
        "PluginRecommendation": "[DEFAULT] Enable GuardDuty S3 protection for all AWS accounts.",
        "PluginRiskDescription": "Enabling GuardDuty S3 protection helps to detect and prevent unauthorized access to your S3 buckets."
    },
    "HealthLake Data Store Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS HealthLake Data Store is using desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Create HealthLake Data Store with customer-manager keys (CMKs).",
        "PluginRiskDescription": "Amazon HealthLake is a Fast Healthcare Interoperability Resources (FHIR)-enabled patient Data Store that uses AWS-managed KMS keys for encryption."
    },
    "HealthLake Data Store Has Tags": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that HealthLake Data Store has tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify HealthLake data store and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "Access Keys Extra": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Detects the use of more than one access key by any single user",
        "PluginRecommendation": "[DEFAULT] Remove the extra access key for the specified user.",
        "PluginRiskDescription": "Having more than one access key for a single user increases the chance of accidental exposure. Each account should only have one key that defines the users permissions."
    },
    "Access Keys Last Used": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Detects access keys that have not been used for a period of time and that should be decommissioned",
        "PluginRecommendation": "[DEFAULT] Log into the IAM portal and remove the offending access key.",
        "PluginRiskDescription": "Having numerous, unused access keys extends the attack surface. Access keys should be removed if they are no longer being used."
    },
    "Access Keys Rotated": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures access keys are not older than 180 days in order to reduce accidental exposures",
        "PluginRecommendation": "[DEFAULT] To rotate an access key, first create a new key, replace the key and secret throughout your app or scripts, then set the previous key to disabled. Once you ensure that no services are broken, then fully delete the old key.",
        "PluginRiskDescription": "Access keys should be rotated frequently to avoid having them accidentally exposed."
    },
    "Canary Keys Used": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Critical",
        "PluginTestDescription": "[DEFAULT] Detects when a special canary-token access key has been used",
        "PluginRecommendation": "[DEFAULT] Create a canary access token and provide its user to CloudSploit. If CloudSploit detects that the account is in use, it will trigger a failure.",
        "PluginRiskDescription": "Canary access keys can be created with limited permissions and then used to detect when a potential breach occurs."
    },
    "Certificate Expiry": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Detect upcoming expiration of certificates used with ELBs",
        "PluginRecommendation": "[DEFAULT] Update your certificates before the expiration date",
        "PluginRiskDescription": "Certificates that have expired will trigger warnings in all major browsers"
    },
    "Cross-Account Access External ID and MFA": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that either MFA or external IDs are used to access AWS roles.",
        "PluginRecommendation": "[DEFAULT] Update the IAM role to either require MFA or use an external ID.",
        "PluginRiskDescription": "IAM roles should be configured to require either a shared external ID or use an MFA device when assuming the role."
    },
    "Empty Groups": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures all groups have at least one member",
        "PluginRecommendation": "[DEFAULT] Remove unused groups without users",
        "PluginRiskDescription": "While having empty groups does not present a direct security risk, it does broaden the management landscape which could potentially introduce risks in the future."
    },
    "Group Inline Policies": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that groups do not have any inline policies",
        "PluginRecommendation": "[DEFAULT] Remove inline policies attached to groups",
        "PluginRiskDescription": "Managed Policies are recommended over inline policies."
    },
    "IAM Master and IAM Manager Roles": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure IAM Master and IAM Manager roles are active within your AWS account.",
        "PluginRecommendation": "[DEFAULT] Create the IAM Master and IAM Manager roles for an efficient IAM administration and permission management within your AWS account",
        "PluginRiskDescription": "IAM roles should be split into IAM Master and IAM Manager roles to work in two-person rule manner for best prectices."
    },
    "IAM Policies Present": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that required policies are present in all IAM roles.",
        "PluginRecommendation": "[DEFAULT] Modify IAM roles to attach required policies",
        "PluginRiskDescription": "Validate the presence of required policies in IAM roles in order to follow your organizations\\"
    },
    "IAM Role Has Tags": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS IAM Roles have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify Roles to add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "IAM Role Last Used": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures IAM roles that have not been used within the given time frame are deleted.",
        "PluginRecommendation": "[DEFAULT] Delete IAM roles that have not been used within the expected time frame.",
        "PluginRiskDescription": "IAM roles that have not been used for a long period may contain old access policies that could allow unintended access to resources if accidentally attached to new services. These roles should be deleted."
    },
    "IAM Role Policies": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures IAM role policies are properly scoped with specific permissions",
        "PluginRecommendation": "[DEFAULT] Ensure that all IAM roles are scoped to specific services and API calls.",
        "PluginRiskDescription": "Policies attached to IAM roles should be scoped to least-privileged access and avoid the use of wildcards."
    },
    "IAM Support Policy": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that an IAM role, group or user exists with specific permissions to access support center.",
        "PluginRecommendation": "[DEFAULT] Ensure that an IAM role has permission to access support center.",
        "PluginRiskDescription": "AWS provides a support center that can be used for incident notification and response, as well as technical support and customer services. An IAM Role should be present to allow authorized users to manage incidents with AWS Support."
    },
    "IAM User Admins": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures the number of IAM admins in the account are minimized",
        "PluginRecommendation": "[DEFAULT] Keep two users with admin permissions but ensure other IAM users have more limited permissions.",
        "PluginRiskDescription": "While at least two IAM admin users should be configured, the total number of admins should be kept to a minimum."
    },
    "IAM User Has Tags": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS IAM Users have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify IAM User and add tags",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "IAM User Account In Use": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that IAM user accounts are not being actively used.",
        "PluginRecommendation": "[DEFAULT] Delete IAM user accounts which are being actively used.",
        "PluginRiskDescription": "IAM users, roles, and groups should not be used for day-to-day account management."
    },
    "IAM Username Matches Regex": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures all IAM user names match the given regex",
        "PluginRecommendation": "[DEFAULT] Rename the IAM user name to match the provided regex.",
        "PluginRiskDescription": "Many organizational policies require IAM user names to follow a common naming convention. This check ensures these conventions are followed."
    },
    "IAM User Account Not In Use": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that IAM user accounts are being actively used.",
        "PluginRecommendation": "[DEFAULT] Delete IAM user accounts which are not being actively used or change the password or deactivate the access keys so they no longer have access.",
        "PluginRiskDescription": "To increase the security of your AWS account, remove IAM user accounts that have not been used over a certain period of time."
    },
    "IAM User Present": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that at least one IAM user exists so that access to your AWS services and resources is made only through IAM users instead of the root account.",
        "PluginRecommendation": "[DEFAULT] Create IAM user(s) and use them to access AWS services and resources.",
        "PluginRiskDescription": "To protect your AWS root account and adhere to IAM security best practices, create individual IAM users to access your AWS environment."
    },
    "IAM User Unauthorized to Edit": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures AWS IAM users that are not authorized to edit IAM access policies are decommissioned.",
        "PluginRecommendation": "[DEFAULT] Update unauthorized IAM users to remove permissions to edit IAM access policies.",
        "PluginRiskDescription": "Only authorized IAM users should have permission to edit IAM access policies to prevent any unauthorized requests."
    },
    "IAM User Without Permissions": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that no IAM user exists without any permissions.",
        "PluginRecommendation": "[DEFAULT] Modify IAM user and attach new permissions or delete the user.",
        "PluginRiskDescription": "IAM users are created to perform any Console, CLI or API based operations on AWS cloud accounts. They are associated with policies that grant them permissions to perform required operations. An IAM user without any permission is a security risk, it is recommended to either add required permissions or delete them to adhere to compliance standards."
    },
    "Maximum Password Age": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures password policy requires passwords to be reset every 180 days",
        "PluginRecommendation": "[DEFAULT] Descrease the maximum allowed age of passwords for the password policy",
        "PluginRiskDescription": "A strong password policy enforces minimum length, expirations, reuse, and symbol usage"
    },
    "Minimum Password Length": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures password policy requires a password of at least a minimum number of characters",
        "PluginRecommendation": "[DEFAULT] Increase the minimum length requirement for the password policy",
        "PluginRiskDescription": "A strong password policy enforces minimum length, expirations, reuse, and symbol usage"
    },
    "No User IAM Policies": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures IAM policies are not connected directly to IAM users",
        "PluginRecommendation": "[DEFAULT] Create groups with the required policies, move the IAM users to the applicable groups, and then remove the inline and directly attached policies from the IAM user.",
        "PluginRiskDescription": "To reduce management complexity, IAM permissions should only be assigned to roles and groups. Users can then be added to those groups. Policies should not be applied directly to a user."
    },
    "Password Expiration": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures password policy enforces a password expiration",
        "PluginRecommendation": "[DEFAULT] Enable password expiration for the account",
        "PluginRiskDescription": "A strong password policy enforces minimum length, expirations, reuse, and symbol usage"
    },
    "Password Policy Exists": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that password policy is set for IAM users.",
        "PluginRecommendation": "[DEFAULT] Create a password policy under account settings in IAM",
        "PluginRiskDescription": "You can set a custom password policy on your AWS account to specify login password complexity requirements and mandatory rotation periods for your IAM users\\"
    },
    "Password Requires Lowercase": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures password policy requires at least one lowercase letter",
        "PluginRecommendation": "[DEFAULT] Update the password policy to require the use of lowercase letters",
        "PluginRiskDescription": "A strong password policy enforces minimum length, expirations, reuse, and symbol usage"
    },
    "Password Requires Numbers": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures password policy requires the use of numbers",
        "PluginRecommendation": "[DEFAULT] Update the password policy to require the use of numbers",
        "PluginRiskDescription": "A strong password policy enforces minimum length, expirations, reuse, and symbol usage"
    },
    "Password Requires Symbols": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures password policy requires the use of symbols",
        "PluginRecommendation": "[DEFAULT] Update the password policy to require the use of symbols",
        "PluginRiskDescription": "A strong password policy enforces minimum length, expirations, reuse, and symbol usage"
    },
    "Password Requires Uppercase": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures password policy requires at least one uppercase letter",
        "PluginRecommendation": "[DEFAULT] Update the password policy to require the use of uppercase letters",
        "PluginRiskDescription": "A strong password policy enforces minimum length, expirations, reuse, and symbol usage"
    },
    "Password Reuse Prevention": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures password policy prevents previous password reuse",
        "PluginRecommendation": "[DEFAULT] Increase the minimum previous passwords that can be reused to 24.",
        "PluginRiskDescription": "A strong password policy enforces minimum length, expirations, reuse, and symbol usage"
    },
    "Password Policy Allows To Change Password": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure IAM password policy allows users to change their passwords.",
        "PluginRecommendation": "[DEFAULT] Update the password policy for users to change their passwords",
        "PluginRiskDescription": "Password policy should allow users to rotate their passwords as a security best practice."
    },
    "IAM Role Policy Unused Services": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that IAM role policies are scoped properly as to not provide access to unused AWS services.",
        "PluginRecommendation": "[DEFAULT] Ensure that all IAM roles are scoped to specific services and resource types.",
        "PluginRiskDescription": "IAM role policies should only contain actions for resource types which are being used in your account i.e. dynamodb:ListTables permission should only be given when there are DynamoDB tables to adhere to security best practices and to follow principal of least-privilege."
    },
    "Root Access Keys": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures the root account is not using access keys",
        "PluginRecommendation": "[DEFAULT] Remove access keys for the root account and setup IAM users with limited permissions instead",
        "PluginRiskDescription": "The root account should avoid using access keys. Since the root account has full permissions across the entire account, creating access keys for it only increases the chance that they are compromised. Instead, create IAM users with predefined roles."
    },
    "Root Account In Use": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures the root account is not being actively used",
        "PluginRecommendation": "[DEFAULT] Create IAM users with appropriate group-level permissions for account access. Create an MFA token for the root account, and store its password and token generation QR codes in a secure place.",
        "PluginRiskDescription": "The root account should not be used for day-to-day account management. IAM users, roles, and groups should be used instead."
    },
    "Root Hardware MFA": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures the root account is using a hardware MFA device",
        "PluginRecommendation": "[DEFAULT] Enable a hardware MFA device for the root account and disable any virtual devices",
        "PluginRiskDescription": "The root account should use a hardware MFA device for added security, rather than a virtual device which could be more easily compromised."
    },
    "Root MFA Enabled": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures a multi-factor authentication device is enabled for the root account",
        "PluginRecommendation": "[DEFAULT] Enable an MFA device for the root account and then use an IAM user for managing services",
        "PluginRiskDescription": "The root account should have an MFA device setup to enable two-factor authentication."
    },
    "Root Account Active Signing Certificates": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures the root user is not using x509 signing certificates",
        "PluginRecommendation": "[DEFAULT] Delete the x509 certificates associated with the root account.",
        "PluginRiskDescription": "AWS supports using x509 signing certificates for API access, but these should not be attached to the root user, which has full access to the account."
    },
    "SSH Keys Rotated": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures SSH keys are not older than 180 days in order to reduce accidental exposures",
        "PluginRecommendation": "[DEFAULT] To rotate an SSH key, first create a new public-private key pair, then upload the public key to AWS and delete the old key.",
        "PluginRiskDescription": "SSH keys should be rotated frequently to avoid having them accidentally exposed."
    },
    "Trusted Cross Account Roles": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that only trusted cross-account IAM roles can be used.",
        "PluginRecommendation": "[DEFAULT] Delete the IAM roles that are associated with untrusted account IDs.",
        "PluginRiskDescription": "IAM roles should be configured to allow access to trusted account IDs."
    },
    "Users MFA Enabled": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures a multi-factor authentication device is enabled for all users within the account",
        "PluginRecommendation": "[DEFAULT] Enable an MFA device for the user account",
        "PluginRiskDescription": "User accounts should have an MFA device setup to enable two-factor authentication"
    },
    "Users Password And Keys": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Detects whether users with a console password are also using access keys",
        "PluginRecommendation": "[DEFAULT] Remove access keys from all users with console access.",
        "PluginRiskDescription": "Access keys should only be assigned to machine users and should not be used for accounts that have console password access."
    },
    "Users Password Last Used": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Detects users with password logins that have not been used",
        "PluginRecommendation": "[DEFAULT] Delete old user accounts that allow password-based logins and have not been used recently.",
        "PluginRiskDescription": "Having numerous, unused user accounts extends the attack surface."
    },
    "Dockerfile Template Encrypted": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Image Recipe dockerfile templates are encrypted.",
        "PluginRecommendation": "[DEFAULT] Ensure that container recipe docker file templates are encrypted using AWS keys or customer managed keys in Imagebuilder service",
        "PluginRiskDescription": "Image Builder now offers a managed service for building Docker images. With Image Builder, you can automatically produce new up-to-date container images and publish them to specified Amazon Elastic Container Registry (Amazon ECR) repositories after running stipulated tests. Custom components are encrypted with your KMS key or a KMS key owned by Image Builder."
    },
    "Enhanced Metadata Collection Enabled": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that enhanced metadata collection is enabled for image pipelines.",
        "PluginRecommendation": "[DEFAULT] Enable enhanced metadata collection for image pipeline.",
        "PluginRiskDescription": "EC2 Image Builder is a fully managed AWS service that makes it easier to automate the creation, management, and deployment of customized, secure, and up-to-date server images that are pre-installed and pre-configured with software and settings to meet specific IT standards."
    },
    "Image Recipe Storage Volumes Encrypted": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Image Recipe storage ebs volumes are encrypted.",
        "PluginRecommendation": "[DEFAULT] Ensure that storage volumes for ebs are encrypted using AWS keys or customer managed keys in Image recipe",
        "PluginRiskDescription": "EC2 Image Builder is a fully managed AWS service that makes it easier to automate the creation, management, and deployment of customized, secure, and up-to-date server images that are pre-installed and pre-configured with software and settings to meet specific IT standards."
    },
    "Image Builder Components Encrypted": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Image Builder components are encrypted.",
        "PluginRecommendation": "[DEFAULT] Ensure that components are encrypted using AWS keys or customer managed keys in Image Builder service",
        "PluginRiskDescription": "Build components contain software, settings, and configurations that are installed or applied during the process of building custom images. Tests are run after a custom image is built to validate functionality, security, performance, etc. Custom components are encrypted with your KMS key or a KMS key owned by Image Builder."
    },
    "Infrastructure Configuration Notification Enabled": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Image Builder infrastructure configurations have SNS notifications enabled.",
        "PluginRecommendation": "[DEFAULT] Enable SNS notification in EC2 Image Builder infrastructure configurations to get notified of any changes in the service.",
        "PluginRiskDescription": "Infrastructure configurations allow you to specify the infrastructure within which to build and test your EC2 Image Builder image."
    },
    "IoT SiteWise Data Encrypted": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS IoT SiteWise is using desired encryption level for data at-rest.",
        "PluginRecommendation": "[DEFAULT] Update IoT SiteWise encryption configuration to use a CMK.",
        "PluginRiskDescription": "AWS IoT SiteWise encrypts data such as your asset property values and aggregate values by default."
    },
    "Kendra Index Encrypted": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that the Kendra index is encrypted using desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Create Kendra Index with customer-manager keys (CMKs).",
        "PluginRiskDescription": "Amazon Kendra encrypts your data at rest with AWS-manager keys by default. Use customer-managed keys instead in order to gain more granular control over encryption/decryption process."
    },
    "Kinesis Data Streams Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures Kinesis data streams are encrypted using AWS KMS key of desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Enable encryption using desired level for all Kinesis streams",
        "PluginRiskDescription": "Data sent to Kinesis data streams can be encrypted using KMS server-side encryption. Existing streams can be modified to add encryption with minimal overhead."
    },
    "Kinesis Streams Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures Kinesis Streams encryption is enabled",
        "PluginRecommendation": "[DEFAULT] Enable encryption using KMS for all Kinesis Streams.",
        "PluginRiskDescription": "Data sent to Kinesis Streams can be encrypted using KMS server-side encryption. Existing streams can be modified to add encryption with minimal overhead."
    },
    "Video Stream Data Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Kinesis Video Streams is using desired encryption level for Data at-rest.",
        "PluginRecommendation": "[DEFAULT] Encrypt Kinesis Video Streams data with customer-manager keys (CMKs).",
        "PluginRiskDescription": "Server-side encryption is always enabled on Kinesis video streams data. If a user-provided key is not specified when the stream is created, the default key (provided by Kinesis Video Streams) is used."
    },
    "App-Tier KMS Customer Master Key (CMK)": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that there is one Amazon KMS Customer Master Key (CMK) present in the account for App-Tier resources.",
        "PluginRecommendation": "[DEFAULT] Create a Customer Master Key (CMK) with App-Tier tag",
        "PluginRiskDescription": "Amazon KMS should have Customer Master Key (CMK) for App-Tier to protect data in transit."
    },
    "KMS Default Key Usage": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Checks AWS services to ensure the default KMS key is not being used",
        "PluginRecommendation": "[DEFAULT] Avoid using the default KMS key",
        "PluginRiskDescription": "It is recommended not to use the default key to avoid encrypting disparate sets of data with the same key. Each application should have its own customer-managed KMS key"
    },
    "KMS Duplicate Grants": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS KMS keys does not have duplicate grants to adhere to AWS security best practices.",
        "PluginRecommendation": "[DEFAULT] Delete duplicate grants for AWS KMS keys",
        "PluginRiskDescription": "Duplicate grants have the same key ARN, API actions, grantee principal, encryption context, and name."
    },
    "KMS Grant Least Privilege": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS KMS key grants use the principle of least privileged access.",
        "PluginRecommendation": "[DEFAULT] Create KMS grants with minimum permission required",
        "PluginRiskDescription": "AWS KMS key grants should be created with minimum set of permissions required by grantee principal to adhere to AWS security best practices."
    },
    "KMS Key Policy": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Validates the KMS key policy to ensure least-privilege access.",
        "PluginRecommendation": "[DEFAULT] Modify the KMS key policy to remove any wildcards and limit the number of users and roles that can perform encrypt and decrypt operations using the key.",
        "PluginRiskDescription": "KMS key policies should be designed to limit the number of users who can perform encrypt and decrypt operations. Each application should use its own key to avoid over exposure."
    },
    "KMS Key Rotation": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures KMS keys are set to rotate on a regular schedule",
        "PluginRecommendation": "[DEFAULT] Enable yearly rotation for the KMS key",
        "PluginRiskDescription": "All KMS keys should have key rotation enabled. AWS will handle the rotation of the encryption key itself, as well as storage of previous keys, so previous data does not need to be re-encrypted before the rotation occurs."
    },
    "KMS Scheduled Deletion": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Critical",
        "PluginTestDescription": "[DEFAULT] Detects KMS keys that are scheduled for deletion",
        "PluginRecommendation": "[DEFAULT] Disable the key deletion before the scheduled deletion time.",
        "PluginRiskDescription": "Deleting a KMS key will permanently prevent all data encrypted using that key from being decrypted. Avoid deleting keys unless no encrypted data is in use."
    },
    "Lambda Environment Variables Client Side Encryption": {
        "PluginDomain": "Serverless",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that all sensitive AWS Lambda environment variable values are client side encrypted.",
        "PluginRecommendation": "[DEFAULT] Encrypt environment variables that store sensitive information",
        "PluginRiskDescription": "AWS Lambda lets you encrypt environment variable values prior to sending them to Lambda."
    },
    "Lambda Admin Privileges": {
        "PluginDomain": "Serverless",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures no Lambda function available in your AWS account has admin privileges.",
        "PluginRecommendation": "[DEFAULT] Modify IAM role attached with Lambda function to provide the minimal amount of access required to perform its tasks",
        "PluginRiskDescription": "AWS Lambda Function should have most-restrictive IAM permissions for Lambda security best practices."
    },
    "Lambda Code Signing Enabled": {
        "PluginDomain": "Serverless",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Lambda functions are configured to use the code signing feature.",
        "PluginRecommendation": "[DEFAULT] Modify Lambda function configurations and enable code signing.",
        "PluginRiskDescription": "Code signing for AWS Lambda helps to ensure that only trusted code runs in Lambda functions. Enabling code signing feature ensures that lambda checks every code deployment and verifies that the code package is signed by a trusted source."
    },
    "Lambda Dead Letter Queue": {
        "PluginDomain": "Serverless",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Lambda functions are configured to use a Dead Letter Queue.",
        "PluginRecommendation": "[DEFAULT] Modify Lambda function configurations and enable dead letter queue.",
        "PluginRiskDescription": "Configuring Dead Letter Queues (DLQs) with lambda functions helps to store discarded events and isolate messages that can\\"
    },
    "Lambda Enhanced Monitoring Enabled": {
        "PluginDomain": "Serverless",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Lambda functions have enhanced monitoring enabled.",
        "PluginRecommendation": "[DEFAULT] Modify Lambda function configurations and enable enhanced monitoring.",
        "PluginRiskDescription": "Enabling enhanced monitoring on lambda functions adds lambda insights extension as a layer to your functions, which helps to collect, aggregate, and summarizes system-level metrics including CPU, memory, disk, and network usage. It helps you to monitor, troubleshoot, and optimize your functions."
    },
    "Lambda Has Tags": {
        "PluginDomain": "Serverless",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Lambda functions have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify Lambda function configurations and  add new tags",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "Lambda Log Groups": {
        "PluginDomain": "Serverless",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures each Lambda function has a valid log group attached to it",
        "PluginRecommendation": "[DEFAULT] Update the Lambda function permissions to allow CloudWatch logging.",
        "PluginRiskDescription": "Every Lambda function created should automatically have a CloudWatch log group generated to handle its log streams."
    },
    "Lambda Old Runtimes": {
        "PluginDomain": "Serverless",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures Lambda functions are not using out-of-date runtime environments.",
        "PluginRecommendation": "[DEFAULT] Upgrade the Lambda function runtime to use a more current version.",
        "PluginRiskDescription": "Lambda runtimes should be kept current with recent versions of the underlying codebase. Deprecated runtimes should not be used."
    },
    "Lambda Public Access": {
        "PluginDomain": "Serverless",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures Lambda functions are not accessible globally",
        "PluginRecommendation": "[DEFAULT] Update the Lambda policy to prevent access from the public.",
        "PluginRiskDescription": "The Lambda function execution policy should not allow public invocation of the function."
    },
    "Lambda Tracing Enabled": {
        "PluginDomain": "Serverless",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures AWS Lambda functions have active tracing for X-Ray.",
        "PluginRecommendation": "[DEFAULT] Modify Lambda functions to activate tracing",
        "PluginRiskDescription": "AWS Lambda functions should have active tracing in order to gain visibility into the functions execution and performance."
    },
    "Lambda Unique Execution Role": {
        "PluginDomain": "Serverless",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Lambda functions do not share the same execution role.",
        "PluginRecommendation": "[DEFAULT] Modify Lambda function and add new execution role.",
        "PluginRiskDescription": "An execution role grants required permission to Lambda function to access AWS services and resources. It is recommended to associate the unique IAM role for each Lambda function to follow the principle of least privilege access."
    },
    "Lambda VPC Config": {
        "PluginDomain": "Serverless",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures Lambda functions are created in a VPC.",
        "PluginRecommendation": "[DEFAULT] Update the Lambda function with a VPC configuration.",
        "PluginRiskDescription": "Lambda functions should be created in an AWS VPC to avoid exposure to the Internet and to enable communication with VPC resources through NACLs and security groups."
    },
    "Audio Logs Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Lex audio logs are encrypted using desired KMS encryption level",
        "PluginRecommendation": "[DEFAULT] Encrypt Lex audio logs with customer-manager keys (CMKs) present in your account",
        "PluginRiskDescription": "For audio logs you use default encryption on your S3 bucket or specify an AWS KMS key to encrypt your audio objects. Even if your S3 bucket uses default encryption you can still specify a different AWS KMS key to encrypt your audio objects for enhanced security."
    },
    "Geofence Collection Data Encrypted": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Location geoference collection data is encrypted using desired KMS encryption level.",
        "PluginRecommendation": "[DEFAULT] Encrypt Amazon Location geoference collection with customer-manager keys (CMKs)",
        "PluginRiskDescription": "Amazon Location Service provides encryption by default to protect sensitive customer data at rest using AWS owned encryption keys."
    },
    "Tracker Data Encrypted": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Location tracker data is encrypted using desired KMS encryption level",
        "PluginRecommendation": "[DEFAULT] Encrypt Amazon Location tracker with customer-manager keys (CMKs)",
        "PluginRiskDescription": "Amazon Location Service provides encryption by default to protect sensitive customer data at rest using AWS owned encryption keys."
    },
    "LookoutMetrics Anomaly Detector Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon LookoutMetrics Anomaly Detector is encrypted using desired KMS encryption level",
        "PluginRecommendation": "[DEFAULT] Encrypt Amazon LookoutMetrics Anomaly Detector with customer-manager keys (CMKs)",
        "PluginRiskDescription": "Amazon Lookout for Metrics encrypts your data at rest with your choice of an encryption key. If you do not specify an encryption key, your data is encrypted with AWS owned key by default."
    },
    "LookoutEquipment Dataset Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Lookout for Equipment datasets are encrypted using desired KMS encryption level",
        "PluginRecommendation": "[DEFAULT] Encrypt Amazon LookoutEquipment Dataset with customer-manager keys (CMKs)",
        "PluginRiskDescription": "Amazon Lookout for Equipment encrypts your data at rest with AWS owned KMS key by default."
    },
    "Model Data Encrypted": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Lookout for Vision model data is encrypted using desired KMS encryption level",
        "PluginRecommendation": "[DEFAULT] Encrypt LookoutVision model with customer-manager keys (CMKs) present in your account",
        "PluginRiskDescription": "By default, trained models and manifest files are encrypted in Amazon S3 using server-side encryption with KMS keys stored in AWS Key Management Service (SSE-KMS)."
    },
    "Managed Blockchain Network Member Data Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that members created in Amazon Managed Blockchain are encrypted using desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Ensure members in Managed Blockchain are using desired encryption level for encryption",
        "PluginRiskDescription": "Amazon Managed Blockchain encrypts the network member data at-rest by default with AWS-managed keys."
    },
    "MemoryDB Cluster Encrypted": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that your Amazon MemoryDB cluster is encrypted with desired encryption level.",
        "PluginRecommendation": "[DEFAULT] Modify MemoryDB cluster encryption configuration to use desired encryption key",
        "PluginRiskDescription": "To help keep your data secure, MemoryDB at-rest encryption is always enabled to increase data security by encrypting persistent data using AWS-managed KMS keys."
    },
    "MQ Auto Minor Version Upgrade": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon MQ brokers have the Auto Minor Version Upgrade feature enabled.",
        "PluginRecommendation": "[DEFAULT] Enabled Auto Minor Version Upgrade feature for MQ brokers",
        "PluginRiskDescription": "As AWS MQ deprecates minor engine version periodically and provides new versions for upgrade, it is highly recommended that Auto Minor Version Upgrade feature is enabled to apply latest upgrades."
    },
    "MQ Broker Encrypted": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon MQ brokers have data encrypted at-rest feature enabled.",
        "PluginRecommendation": "[DEFAULT] Enabled data at-rest encryption feature for MQ brokers",
        "PluginRiskDescription": "Amazon MQ encryption at rest provides enhanced security by encrypting your data using encryption keys stored in the AWS Key Management Service (KMS)."
    },
    "MQ Broker Public Accessibility": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon MQ brokers are not publicly accessible.",
        "PluginRecommendation": "[DEFAULT] Review and update the security group settings to restrict public access to Amazon MQ brokers.",
        "PluginRiskDescription": "Public Amazon MQ brokers can be accessed directly, outside of a Virtual Private Cloud (VPC), therefore every machine on the internet can reach your brokers through their public endpoints and this can increase the opportunity for malicious activity."
    },
    "MQ Deployment Mode": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that for high availability, your AWS MQ brokers are using the active/standby deployment mode instead of single-instance",
        "PluginRecommendation": "[DEFAULT] Enabled Deployment Mode feature for MQ brokers",
        "PluginRiskDescription": "With the active/standby deployment mode as opposed to the single-broker mode (enabled by default), you can achieve high availability for your Amazon MQ brokers as the service provides failure proof no risk."
    },
    "MQ Desired Broker Instance Type": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that the Amazon MQ broker instances are created with desired instance types.",
        "PluginRecommendation": "[DEFAULT] Create MQ broker with desired instance types",
        "PluginRiskDescription": "Set limits for the type of Amazon MQ broker instances created in your AWS account to address internal compliance"
    },
    "MQ Latest Engine Version": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon MQ brokers are using the latest version of Apache ActiveMQ broker engine.",
        "PluginRecommendation": "[DEFAULT] Update Amazon MQ brokers to the latest version of Apache ActiveMQ broker engine.",
        "PluginRiskDescription": "Using the latest version of Apache ActiveMQ engine helps follow AWS best practices and benefits from the latest features, performance improvements, and security updates."
    },
    "MQ Log Exports Enabled": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon MQ brokers have the Log Exports feature enabled.",
        "PluginRecommendation": "[DEFAULT] Enable Log Exports feature for MQ brokers",
        "PluginRiskDescription": "Amazon MQ has a feature of AWS CloudWatch Logs, a service of storing, accessing and monitoring your log files from different sources within your AWS account."
    },
    "MSK Cluster Client Broker Encryption": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that only TLS encryption between the client and broker feature is enabled for your Amazon MSK clusters.",
        "PluginRecommendation": "[DEFAULT] Enable only TLS encryption between the client and broker for all MSK clusters",
        "PluginRiskDescription": "Amazon MSK in-transit encryption is an optional feature which encrypts data in transit between the client and brokers. Select the Transport Layer Security (TLS) protocol to encrypt data as it travels between brokers and clients within the cluster."
    },
    "MSK Cluster Encryption At-Rest": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Managed Streaming for Kafka (MSK) clusters are using desired encryption key for at-rest encryption.",
        "PluginRecommendation": "[DEFAULT] Modify MSK cluster encryption configuration to use desired encryption key",
        "PluginRiskDescription": "Amazon MSK encrypts all data at rest using AWS-managed KMS keys by default. Use AWS customer-managed Keys (CMKs) instead in order to have a fine-grained control over data-at-rest encryption/decryption process and meet compliance requirements."
    },
    "MSK Cluster Encryption In-Transit": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that TLS encryption within the cluster feature is enabled for your Amazon MSK clusters.",
        "PluginRecommendation": "[DEFAULT] Enable TLS encryption within the cluster for all MSK clusters",
        "PluginRiskDescription": "Amazon MSK in-transit encryption is an optional feature which encrypts data in transit within your MSK cluster. You can override this default at the time you create the cluster."
    },
    "MSK Cluster Public Access": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that public access feature within the cluster is disabled for your Amazon MSK clusters.",
        "PluginRecommendation": "[DEFAULT] Check for public access feature within the cluster for all MSK clusters",
        "PluginRiskDescription": "Amazon MSK gives you the option to turn on public access to the brokers of MSK clusters running Apache Kafka 2.6.0 or later versions. For security reasons, you cannot turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible."
    },
    "MSK Cluster Unauthenticated Access": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that unauthenticated access feature is disabled for your Amazon MSK clusters.",
        "PluginRecommendation": "[DEFAULT] Ensure that MSK clusters does not have unauthenticated access enabled.",
        "PluginRiskDescription": "Amazon MSK authenticates clients to allow or deny Apache Kafka actions. Alternatively, TLS or SASL/SCRAM can be used to authenticate clients, and Apache Kafka ACLs to allow or deny actions."
    },
    "Environment Admin Privileges": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures no Amazon MWAA environment available in your AWS account has admin privileges.",
        "PluginRecommendation": "[DEFAULT] Modify IAM role attached with MWAA environment to provide the minimal amount of access required to perform its tasks",
        "PluginRiskDescription": "Amazon MWAA environments should have most-restrictive IAM permissions for security best practices."
    },
    "Environment Data Encrypted": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS MWAA environment data is encrypted",
        "PluginRecommendation": "[DEFAULT] Create MWAA environments with customer-manager keys (CMKs)",
        "PluginRiskDescription": "Amazon MWAA encrypts data saved to persistent media with AWS-manager keys by default."
    },
    "Web Server Public Access": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures web access to the Apache Airflow UI in your MWAA environment is not public.",
        "PluginRecommendation": "[DEFAULT] Modify Amazon MWAA environments to set web server access mode to be private only",
        "PluginRiskDescription": "To restrict access to the Apache Airflow UI, environment should be configured to be accessible only from within the VPC selected."
    },
    "Neptune Database Deletion Protection Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Neptune database instances have deletion protection feature enabled.",
        "PluginRecommendation": "[DEFAULT] Modify Neptune database instance and enable deletion protection.",
        "PluginRiskDescription": "Enabling deletion protection feature for Amazon Neptune adds an extra layer of security, preventing accidental database deletions or deletion by an unauthorized user. A Neptune DB cluster can\\"
    },
    "Neptune Database IAM Authentication Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Neptune database instance has IAM database authentication feature enabled.",
        "PluginRecommendation": "[DEFAULT] Modify Neptune database instance and enable IAM database authentication.",
        "PluginRiskDescription": "Enabling IAM authentication for AWS Neptune adds an extra layer of security by allowing access control through IAM credentials. It ensures that network traffic for clusters is encrypted using SSL and allows centralized management. All authentication requests are automatically signed with a secure access key instead of using a password."
    },
    "Neptune Database Instance Encrypted": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that your AWS Neptune database instances are encrypted with KMS Customer Master Keys (CMKs) instead of AWS managed-keys.",
        "PluginRecommendation": "[DEFAULT] Encrypt Neptune database with desired encryption level",
        "PluginRiskDescription": "Neptune encrypted instances provide an additional layer of data protection by helping to secure your data from unauthorized access to the underlying storage."
    },
    "Neptune Database Minor Version Upgrade": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures Auto Minor version upgrade is enabled on Neptune database instances.",
        "PluginRecommendation": "[DEFAULT] Modify Neptune database instance and enable automatic minor version upgrades feature.",
        "PluginRiskDescription": "AWS Neptune database service releases engine version upgrades regularly to introduce software features, bug fixes, security patches and performance improvements. Enabling auto minor version upgrade feature ensures that minor engine upgrades are applied automatically to the instance during the maintenance window."
    },
    "Neptune Database Multiple AZ": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Neptune database instances are created to be cross-AZ for high availability.",
        "PluginRecommendation": "[DEFAULT] Create new Neptune database instance and enable multi-AZ feature.",
        "PluginRiskDescription": "Enabling Multi-AZ feature for Neptune instances boosts database reliability by automatically replicating data across multiple availability zones. This ensures continuous availability and minimal downtime for graph database deployments."
    },
    "Neptune Database Instance Backup Retention": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Neptune database instances have set a minimum backup retention period.",
        "PluginRecommendation": "[DEFAULT] Modify Neptune database instance to configure sufficient backup retention period.",
        "PluginRiskDescription": "Neptune provides feature to retain incremental backups, which allows to quickly restore to any point within the backup retention period. Ensure that you have sufficient backup retention period configured in order to restore your data in the event of failure."
    },
    "OpenSearch Access From IP Addresses": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure only whitelisted IP addresses can access Amazon OpenSearch domains.",
        "PluginRecommendation": "[DEFAULT] Modify OpenSearch domain access policy to allow only known/whitelisted IP addresses.",
        "PluginRiskDescription": "OpenSearch domains should only be accessible only from whitelisted IP addresses to avoid unauthorized access."
    },
    "OpenSearch Cluster Status": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that OpenSearch clusters are healthy, i.e status is green.",
        "PluginRecommendation": "[DEFAULT] Configure alarms to send notification if cluster status remains red for more than a minute.",
        "PluginRiskDescription": "Unhealthy Amazon OpenSearch clusters with the status set to"
    },
    "OpenSearch Domain Cross Account access": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Critical",
        "PluginTestDescription": "[DEFAULT] Ensures that only trusted accounts have access to OpenSearch domains.",
        "PluginRecommendation": "[DEFAULT] Restrict the access to OpenSearch clusters to allow only trusted accounts.",
        "PluginRiskDescription": "Allowing unrestricted access of OpenSearch clusters will cause data leaks and data loss. This can be prevented by restricting access only to the trusted entities by implementing the appropriate access policies."
    },
    "OpenSearch Dedicated Master Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon OpenSearch domains are using dedicated master nodes.",
        "PluginRecommendation": "[DEFAULT] Update the domain to use dedicated master nodes.",
        "PluginRiskDescription": "Using OpenSearch dedicated master nodes to separate management tasks from index and search requests will improve the clusters ability to manage easily different types of workload and make them more resilient in production."
    },
    "OpenSearch Desired Instance Type": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that all your Amazon OpenSearch cluster instances are of given instance types.",
        "PluginRecommendation": "[DEFAULT] Reconfigure the domain to have the desired instance types.",
        "PluginRiskDescription": "Limiting the type of Amazon OpenSearch cluster instances that can be provisioned will help address compliance requirements and prevent unexpected charges on the AWS bill."
    },
    "OpenSearch Encryption Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS OpenSearch domains have encryption enabled.",
        "PluginRecommendation": "[DEFAULT] Ensure encryption-at-rest is enabled for all OpenSearch domains.",
        "PluginRiskDescription": "OpenSearch domains should be encrypted to ensure that data is secured."
    },
    "OpenSearch Audit Logs Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that audit logs feature is enabled for OpenSearch domains.",
        "PluginRecommendation": "[DEFAULT] Modify Opensearch domain and enable audit logs.",
        "PluginRiskDescription": "Enabling audit logs feature allows to keep track of all user activity on Amazon OpenSearch domains (clusters), including failed login attempts, including authentication success and failures, index changes, and incoming search queries, enhancing security and compliance monitoring."
    },
    "OpenSearch Encrypted Domain": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures OpenSearch domains are encrypted with KMS",
        "PluginRecommendation": "[DEFAULT] Ensure encryption-at-rest is enabled for all OpenSearch domains.",
        "PluginRiskDescription": "OpenSearch domains should be encrypted to ensure data at rest is secured."
    },
    "OpenSearch Exposed Domain": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures OpenSearch domains are not publicly exposed to all AWS accounts",
        "PluginRecommendation": "[DEFAULT] Update OpenSearch domain to set access control.",
        "PluginRiskDescription": "OpenSearch domains should not be publicly exposed to all AWS accounts."
    },
    "OpenSearch HTTPS Only": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures OpenSearch domains are configured to enforce HTTPS connections",
        "PluginRecommendation": "[DEFAULT] Ensure HTTPS connections are enforced for all OpenSearch domains.",
        "PluginRiskDescription": "OpenSearch domains should be configured to enforce HTTPS connections for all clients to ensure encryption of data in transit."
    },
    "OpenSearch Logging Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures OpenSearch domains are configured to log data to CloudWatch",
        "PluginRecommendation": "[DEFAULT] Ensure logging is enabled and a CloudWatch log group is specified for each OpenSearch domain.",
        "PluginRiskDescription": "OpenSearch domains should be configured with logging enabled with logs sent to CloudWatch for analysis and long-term storage."
    },
    "OpenSearch Node To Node Encryption": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures OpenSearch domain traffic is encrypted in transit between nodes",
        "PluginRecommendation": "[DEFAULT] Ensure node-to-node encryption is enabled for all OpenSearch domains.",
        "PluginRiskDescription": "OpenSearch domains should use node-to-node encryption to ensure data in transit remains encrypted using TLS 1.2."
    },
    "OpenSearch Public Service Domain": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures OpenSearch domains are created with private VPC endpoint options",
        "PluginRecommendation": "[DEFAULT] Configure the OpenSearch domain to use a VPC endpoint for secure VPC communication.",
        "PluginRiskDescription": "OpenSearch domains can either be created with a public endpoint or with a VPC configuration that enables internal VPC communication. Domains should be created without a public endpoint to prevent potential public access to the domain."
    },
    "OpenSearch IAM Authentication": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures OpenSearch domains require IAM Authentication",
        "PluginRecommendation": "[DEFAULT] Configure the OpenSearch domain to have an access policy without a global principal or no principal",
        "PluginRiskDescription": "OpenSearch domains can allow access without IAM authentication by having a policy that does not specify the principal or has a wildcard principal"
    },
    "OpenSearch TLS Version": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure OpenSearch domain is using the latest security policy to only allow TLS v1.2",
        "PluginRecommendation": "[DEFAULT] Update OpenSearch domain to set TLSSecurityPolicy to contain TLS version 1.2.",
        "PluginRiskDescription": "OpenSearch domains should be configured to enforce TLS version 1.2 for all clients to ensure encryption of data in transit with updated features."
    },
    "OpenSearch Upgrade Available": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures OpenSearch domains are running the latest service software",
        "PluginRecommendation": "[DEFAULT] Ensure each OpenSearch domain is running the latest service software and update out-of-date domains.",
        "PluginRiskDescription": "OpenSearch domains should be configured to run the latest service software which often contains security updates."
    },
    "OpenSearch Version": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures OpenSearch domains are using the latest engine version.",
        "PluginRecommendation": "[DEFAULT] Update OpenSearch domain to set to latest engine version.",
        "PluginRiskDescription": "OpenSearch domains should be upgraded to the latest version for optimal performance and security."
    },
    "OpenSearch Zone Awareness Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that OpenSearch domains have zone awareness enabled.",
        "PluginRecommendation": "[DEFAULT] Modify OpenSearch domain configuration and enable domain zone awareness.",
        "PluginRiskDescription": "To improve the fault-tolerance for your OpenSearch domain, ensure you enable zone awareness. It distributes the OpenSearch nodes across multiple availability zones in the same AWS region and assures the cluster is highly available."
    },
    "OpenSearch Collection CMK Encryption": {
        "PluginDomain": "Serverless",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that OpenSearch Serverless collections are encrypted with KMS Customer Master Keys (CMKs).",
        "PluginRecommendation": "[DEFAULT] Update the encryption policy and customer managed key for encryption.",
        "PluginRiskDescription": "OpenSearch Serverless should use KMS Customer Master Keys (CMKs) instead of AWS managed keys for encryption in order to have full control over data encryption and decryption."
    },
    "OpenSearch Collection Public Access": {
        "PluginDomain": "Serverless",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that OpenSearch Serverless collections are not publicly accessible.",
        "PluginRecommendation": "[DEFAULT] Update the network policy and remove the public access to the collection.",
        "PluginRiskDescription": "OpenSearch Serverless collections should be not be publicly accessible to prevent unauthorized actions."
    },
    "Enable All Organization Features": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures all Organization features are enabled",
        "PluginRecommendation": "[DEFAULT] Enable all AWS Organizations features.",
        "PluginRiskDescription": "All AWS Organizations should be enabled to take advantage of all shared security controls and policies across all member accounts."
    },
    "Organization Invite": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure all Organization invites are accepted",
        "PluginRecommendation": "[DEFAULT] Enable all AWS Organizations features",
        "PluginRiskDescription": "AWS Organizations invites should be accepted or rejected quickly so that member accounts can take advantage of all Organization features."
    },
    "Environment Template Encrypted": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Proton environment template is encrypted with desired level.",
        "PluginRecommendation": "[DEFAULT] Create Proton environment template with customer-manager keys (CMKs)",
        "PluginRiskDescription": "AWS Proton encrypts sensitive data in your template bundles at rest in the S3 bucket where you store your template bundles using AWS-managed keys. Use customer-managed keys (CMKs) in order to meet regulatory compliance requirements within your organization."
    },
    "Ledger Encrypted": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS QLDB ledger is encrypted using desired encryption level",
        "PluginRecommendation": "[DEFAULT] Create QLDB ledger with customer-manager keys (CMKs)",
        "PluginRiskDescription": "QLDB encryption at rest provides enhanced security by encrypting all ledger data at rest using encryption keys in AWS Key Management Service (AWS KMS)."
    },
    "RDS IAM Database Authentication Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures IAM Database Authentication is enabled for RDS database instances to manage database access",
        "PluginRecommendation": "[DEFAULT] Modify the PostgreSQL and MySQL type RDS instances to enable IAM database authentication.",
        "PluginRiskDescription": "AWS Identity and Access Management (IAM) can be used to authenticate to your RDS DB instances."
    },
    "RDS Idle Instance Status": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure there are no RDS instances with CPU utilization below all of the defined thresholds within last 7 days.",
        "PluginRecommendation": "[DEFAULT] Identify and remove idle RDS instance",
        "PluginRiskDescription": "Idle Amazon RDS instance is a prime candidate for reducing monthly AWS expenses and preventing unnecessary usage charges from accumulating."
    },
    "RDS MySQL Vulnerability Check": {
        "PluginDomain": "[DEFAULT]",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures RDS MySQL instances are not vulnerable to specific CVEs.",
        "PluginRecommendation": "[DEFAULT] Update the MySQL engine version to a more recent, patched version to mitigate the vulnerabilities.",
        "PluginRiskDescription": "Vulnerabilities in RDS MySQL instances can pose significant risks to the security and integrity of your database environment. By identifying and addressing these vulnerabilities, you can protect your data from unauthorized access, data tampering, or privilege escalation."
    },
    "RDS CPU Alarm Threshold Exceeded": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure RDS instances do not exceed the alarm threshold for CPU utilization.",
        "PluginRecommendation": "[DEFAULT] Upgrade (upsize) the overused RDS database instances.",
        "PluginRiskDescription": "High CPU usage may suggest that the databases on these servers lack sufficient hardware resources to operate at their best. Enhancing the performance of overburdened RDS instances by upgrading them can directly enhance the well-being and performance of the databases."
    },
    "RDS Automated Backups": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures automated backups are enabled for RDS instances",
        "PluginRecommendation": "[DEFAULT] Enable automated backups for the RDS instance",
        "PluginRiskDescription": "AWS provides a simple method of backing up RDS instances at a regular interval. This should be enabled to provide an option for restoring data in the event of a database compromise or hardware failure."
    },
    "RDS CMK Encryption": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures RDS instances are encrypted with KMS Customer Master Keys(CMKs).",
        "PluginRecommendation": "[DEFAULT] RDS does not currently allow modifications to encryption after the instance has been launched, so a new instance will need to be created with KMS CMK encryption enabled.",
        "PluginRiskDescription": "RDS instances should be encrypted with Customer Master Keys in order to have full control over data encryption and decryption."
    },
    "RDS Default Port": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure RDS database instances are not using the default ports.",
        "PluginRecommendation": "[DEFAULT] Change the default port number of the RDS instance to non-default port.",
        "PluginRiskDescription": "Using default ports for running RDS instances can be a security risk. To protect publicly accessible RDS databases from brute force and dictionary attacks and add an additional layer of security, shift RDS instance ports to non-default ones."
    },
    "RDS Instance Default Master Username": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures RDS instance does not have a default master username",
        "PluginRecommendation": "[DEFAULT] Create a new RDS instance with the desired username, and migrate the database to the new instance.",
        "PluginRiskDescription": "By default, RDS uses the default master username which has the maximum permissions for your instance. RDS instances should be configured to use unique username to ensure security."
    },
    "RDS Deletion Protection Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures deletion protection is enabled for RDS database instances.",
        "PluginRecommendation": "[DEFAULT] Modify the RDS instances to enable deletion protection.",
        "PluginRiskDescription": "Deletion protection prevents Amazon RDS instances from being deleted accidentally by any user."
    },
    "RDS Encryption Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures at-rest encryption is setup for RDS instances",
        "PluginRecommendation": "[DEFAULT] RDS does not currently allow modifications to encryption after the instance has been launched, so a new instance will need to be created with encryption enabled.",
        "PluginRiskDescription": "AWS provides at-read encryption for RDS instances which should be enabled to ensure the integrity of data stored within the databases."
    },
    "RDS Instance Generation": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS RDS instance is not using older generation of EC2",
        "PluginRecommendation": "[DEFAULT] Upgrade the instance to its latest generation.",
        "PluginRiskDescription": "Amazon RDS instances running on older generation EC2 instances may not have access to the latest hardware capabilities and performance improvements. It is recommended to upgrade the RDS instance to its latest generation for optimal performance and security."
    },
    "RDS Instance Has Tags": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS RDS instance have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify the RDS instance to add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "RDS Logging Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures logging is configured for RDS instances",
        "PluginRecommendation": "[DEFAULT] Modify the RDS instance to enable logging as required.",
        "PluginRiskDescription": "Logging database level events enables teams to analyze events for the purpose diagnostics as well as audit tracking for compliance purposes."
    },
    "RDS DocumentDB Minor Version Upgrade": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures Auto Minor Version Upgrade is enabled on RDS and DocumentDB databases",
        "PluginRecommendation": "[DEFAULT] Enable automatic minor version upgrades on RDS and DocumentDB databases",
        "PluginRiskDescription": "RDS supports automatically upgrading the minor version of the database, which should be enabled to ensure security fixes are quickly deployed."
    },
    "RDS Multiple AZ": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that RDS instances are created to be cross-AZ for high availability.",
        "PluginRecommendation": "[DEFAULT] Modify the RDS instance to enable scaling across multiple availability zones.",
        "PluginRiskDescription": "Creating RDS instances in a single AZ creates a single point of failure for all systems relying on that database. All RDS instances should be created in multiple AZs to ensure proper failover."
    },
    "RDS Publicly Accessible": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Critical",
        "PluginTestDescription": "[DEFAULT] Ensures RDS instances are not launched into the public cloud",
        "PluginRecommendation": "[DEFAULT] Remove the public endpoint from the RDS instance",
        "PluginRiskDescription": "Unless there is a specific business requirement, RDS instances should not have a public endpoint and should be accessed from within a VPC only."
    },
    "RDS Public Subnet": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures RDS database instances are not deployed in public subnet.",
        "PluginRecommendation": "[DEFAULT] Replace the subnet groups of rds instance with the private subnets.",
        "PluginRiskDescription": "RDS instances should not be deployed in public subnets to prevent direct exposure to the internet and reduce the risk of unauthorized access."
    },
    "RDS Restorable": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures RDS instances can be restored to a recent point",
        "PluginRecommendation": "[DEFAULT] Ensure the instance is running and configured properly. If the time drifts too far, consider opening a support ticket with AWS.",
        "PluginRiskDescription": "AWS will maintain a point to which the database can be restored. This point should not drift too far into the past, or else the risk of irrecoverable data loss may occur."
    },
    "RDS Snapshot Encryption": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures encryption is enabled for RDS snapshots to ensure encryption of data at rest.",
        "PluginRecommendation": "[DEFAULT] Copy the snapshot to a new snapshot that is encrypted and delete the old snapshot.",
        "PluginRiskDescription": "AWS provides encryption for RDS snapshots which should be enabled to ensure that all data at rest is encrypted."
    },
    "RDS Snapshot Publicly Accessible": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon RDS database snapshots are not publicly exposed.",
        "PluginRecommendation": "[DEFAULT] Ensure Amazon RDS database snapshot is not publicly accessible and available for any AWS account to copy or restore it.",
        "PluginRiskDescription": "If an RDS snapshot is exposed to the public, any AWS account can copy the snapshot and create a new database instance from it."
    },
    "RDS Transport Encryption Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures RDS SQL Server instances have Transport Encryption enabled.",
        "PluginRecommendation": "[DEFAULT] Update the parameter group associated with the RDS instance to have rds.force_ssl set to true",
        "PluginRiskDescription": "Parameter group associated with the RDS instance should have transport encryption enabled to handle encryption and decryption"
    },
    "SQL Server TLS Version": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures RDS SQL Servers do not allow outdated TLS certificate versions",
        "PluginRecommendation": "[DEFAULT] Create a parameter group that contains the TLS version restriction and limit access to TLS 1.2 or higher",
        "PluginRiskDescription": "TLS 1.2 or higher should be used for all TLS connections to RDS. A parameter group can be used to enforce this connection type."
    },
    "Redshift Cluster Audit Logging Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure audit logging is enabled for Redshift clusters for security and troubleshooting purposes.",
        "PluginRecommendation": "[DEFAULT] Modify Redshift clusters to enable audit logging",
        "PluginRiskDescription": "Redshift clusters should be configured to enable audit logging to log cluster usage information."
    },
    "Redshift Cluster Allow Version Upgrade": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that version upgrade is enabled for Redshift clusters to automatically receive upgrades during the maintenance window.",
        "PluginRecommendation": "[DEFAULT] Modify Redshift clusters to allow version upgrade",
        "PluginRiskDescription": "Redshift clusters should be configured to allow version upgrades to get the newest features, bug fixes or the latest security patches released."
    },
    "Redshift Cluster CMK Encryption": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures Redshift clusters are encrypted using KMS customer master keys (CMKs)",
        "PluginRecommendation": "[DEFAULT] Update Redshift clusters encryption configuration to use KMS CMKs instead of AWS managed-keys.",
        "PluginRiskDescription": "KMS CMKs should be used to encrypt redshift clusters in order to have full control over data encryption and decryption."
    },
    "Redshift Cluster Default Port": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon Redshift clusters are not using port",
        "PluginRecommendation": "[DEFAULT] Update Amazon Redshift cluster endpoint port.",
        "PluginRiskDescription": "Amazon Redshift clusters should not use the default port for database access to ensure cluster security."
    },
    "Redshift Cluster In VPC": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon Redshift clusters are launched within a Virtual Private Cloud (VPC).",
        "PluginRecommendation": "[DEFAULT] Update Amazon Redshift cluster and attach it to VPC",
        "PluginRiskDescription": "Amazon Redshift clusters should be launched within a Virtual Private Cloud (VPC) to ensure cluster security."
    },
    "Redshift Cluster Default Master Username": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon Redshift clusters are not using",
        "PluginRecommendation": "[DEFAULT] Update Amazon Redshift cluster master username.",
        "PluginRiskDescription": "Amazon Redshift clusters should not use default master username for database access to ensure cluster security."
    },
    "Redshift Desired Node Type": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon Redshift cluster nodes are of given types.",
        "PluginRecommendation": "[DEFAULT] Take snapshot of the Amazon Redshift cluster and launch a new cluster of the desired node type using the snapshot.",
        "PluginRiskDescription": "Amazon Redshift clusters nodes should be of the given types to ensure the internal compliance and prevent unexpected billing charges."
    },
    "Redshift Encryption Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures at-rest encryption is setup for Redshift clusters",
        "PluginRecommendation": "[DEFAULT] Redshift does not currently allow modifications to encryption after the cluster has been launched, so a new cluster will need to be created with encryption enabled.",
        "PluginRiskDescription": "AWS provides at-read encryption for Redshift clusters which should be enabled to ensure the integrity of data stored within the cluster."
    },
    "Redshift Nodes Count": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that each AWS region has not reached the limit set for the number of Redshift cluster nodes.",
        "PluginRecommendation": "[DEFAULT] Remove Redshift clusters over defined limit",
        "PluginRiskDescription": "The number of provisioned Amazon Redshift cluster nodes must be less than the provided nodes limit to avoid reaching the limit and exceeding the set budget."
    },
    "Redshift Publicly Accessible": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures Redshift clusters are not launched into the public cloud",
        "PluginRecommendation": "[DEFAULT] Remove the public endpoint from the Redshift cluster",
        "PluginRiskDescription": "Unless there is a specific business requirement, Redshift clusters should not have a public endpoint and should be accessed from within a VPC only."
    },
    "Redshift Parameter Group SSL Required": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures AWS Redshift non-default parameter group associated with Redshift cluster require SSL connection.",
        "PluginRecommendation": "[DEFAULT] Update Redshift parameter groups to have require-ssl parameter set to true.",
        "PluginRiskDescription": "Redshift parameter group associated with Redshift cluster should be configured to require SSL to secure data in transit."
    },
    "Redshift Unused Reserved Nodes": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon Redshift Reserved Nodes are being utilized.",
        "PluginRecommendation": "[DEFAULT] Provision new Redshift clusters matching the criteria of reserved nodes",
        "PluginRiskDescription": "Amazon Redshift reserved nodes must be utilized to avoid unnecessary billing."
    },
    "Redshift Automated Snapshot Retention Period": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that retention period is set for Amazon Redshift automated snapshots.",
        "PluginRecommendation": "[DEFAULT] Modify Amazon Redshift cluster to set snapshot retention period",
        "PluginRiskDescription": "Amazon Redshift clusters should have retention period set for automated snapshots for data protection and to avoid unexpected failures."
    },
    "Underutilized Redshift Cluster Check": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure Redshift clusters are not underutilized",
        "PluginRecommendation": "[DEFAULT] Resize the underused Redshift cluster to optimize costs and resource utilization.",
        "PluginRiskDescription": "Underutilized clusters are good candidates to reduce your monthly AWS costs and avoid accumulating unnecessary usage charges."
    },
    "Redshift User Activity Logging Enabled": {
        "PluginDomain": "Databases",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that user activity logging is enabled for your Amazon Redshift clusters.",
        "PluginRecommendation": "[DEFAULT] Update Redshift parameter groups to enable user activity logging",
        "PluginRiskDescription": "Redshift clusters associated parameter groups should have user activity logging enabled in order to log user activities performed."
    },
    "Route53 Dangling DNS Records": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that AWS Route53 DNS records are not pointing to invalid/deleted EIPs.",
        "PluginRecommendation": "[DEFAULT] Delete invalid/dangling AWS Route53 DNS records",
        "PluginRiskDescription": "AWS Route53 DNS records should not point to invalid/deleted EIPs to prevent malicious activities."
    },
    "Domain Auto Renew": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures domains are set to auto renew through Route53",
        "PluginRecommendation": "[DEFAULT] Enable auto renew for the domain",
        "PluginRiskDescription": "Domains purchased through Route53 should be set to auto renew. Domains that are not renewed can quickly be acquired by a third-party and cause loss of access for customers."
    },
    "Domain Expiry": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures domains are not expiring too soon",
        "PluginRecommendation": "[DEFAULT] Reregister the expiring domain",
        "PluginRiskDescription": "Expired domains can be lost and reregistered by a third-party."
    },
    "Domain Transfer Lock": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures domains have the transfer lock set",
        "PluginRecommendation": "[DEFAULT] Enable the transfer lock for the domain",
        "PluginRiskDescription": "To avoid having a domain maliciously transferred to a third-party, all domains should enable the transfer lock unless actively being transferred."
    },
    "Domain Privacy Protection": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Privacy Protection feature is enabled for your Amazon Route 53 domains.",
        "PluginRecommendation": "[DEFAULT] Enable Privacy Protection for Domain",
        "PluginRiskDescription": "Enabling the Privacy Protection feature protects against receiving spams and sharing contact information in response of WHOIS queries."
    },
    "Route 53 In Use": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Route 53 Domain Name System (DNS) service is used within your AWS account.",
        "PluginRecommendation": "[DEFAULT] Register your domain with AWS Route 53 for seamless DNS management.",
        "PluginRiskDescription": "AWS Route 53 simplifies DNS management, ensuring reliable and efficient routing for end users to your website through globally-dispersed DNS servers, enhancing accessibility and performance. It facilitates domain registration, DNS routing, and health checking, allowing seamless management of your web infrastructure."
    },
    "Sender Policy Framework In Use": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Sender Policy Framework (SPF) is used to stop spammers from spoofing your AWS Route 53 domain.",
        "PluginRecommendation": "[DEFAULT] Updated the domain records to have SPF.",
        "PluginRiskDescription": "The Sender Policy Framework enables AWS Route 53 registered domain to publicly state the mail servers that are authorized to send emails on its behalf."
    },
    "Sender Privacy Framework Record Present": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Route 53 hosted zones have a DNS record containing Sender Policy Framework (SPF) value set for each MX record available.",
        "PluginRecommendation": "[DEFAULT] Add SPF records to the DNS records.",
        "PluginRiskDescription": "The SPF record enables Route 53 registered domains to publicly state the mail servers that are authorized to send emails on its behalf."
    },
    "S3 Bucket All Users ACL": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures S3 buckets do not allow global write, delete, or read ACL permissions",
        "PluginRecommendation": "[DEFAULT] Disable global all users policies on all S3 buckets and ensure both the bucket ACL is configured with least privileges.",
        "PluginRiskDescription": "S3 buckets can be configured to allow anyone, regardless of whether they are an AWS user or not, to write objects to a bucket or delete objects. This option should not be configured unless there is a strong business requirement."
    },
    "S3 Bucket All Users Policy": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Critical",
        "PluginTestDescription": "[DEFAULT] Ensures S3 bucket policies do not allow global write, delete, or read permissions",
        "PluginRecommendation": "[DEFAULT] Remove wildcard principals from the bucket policy statements.",
        "PluginRiskDescription": "S3 buckets can be configured to allow the global principal to access the bucket via the bucket policy. This policy should be restricted only to known users or accounts."
    },
    "S3 DNS Compliant Bucket Names": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that S3 buckets have DNS complaint bucket names.",
        "PluginRecommendation": "[DEFAULT] Recreate S3 bucket to use",
        "PluginRiskDescription": "S3 bucket names must be DNS-compliant and not contain period"
    },
    "S3 Bucket Encryption": {
        "PluginDomain": "Storage",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures object encryption is enabled on S3 buckets",
        "PluginRecommendation": "[DEFAULT] Enable CMK KMS-based encryption for all S3 buckets.",
        "PluginRiskDescription": "S3 object encryption provides fully-managed encryption of all objects uploaded to an S3 bucket."
    },
    "S3 Bucket Encryption In Transit": {
        "PluginDomain": "Storage",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures S3 buckets have bucket policy statements that deny insecure transport",
        "PluginRecommendation": "[DEFAULT] Add statements to the bucket policy that deny all S3 actions when SecureTransport is false. Resources must be list of bucket ARN and bucket ARN with wildcard.",
        "PluginRiskDescription": "S3 bucket policies can be configured to deny access to the bucket over HTTP."
    },
    "S3 Bucket Enforce Object Encryption": {
        "PluginDomain": "Storage",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures S3 bucket policies do not allow uploads of unencrypted objects",
        "PluginRecommendation": "[DEFAULT] Set the S3 bucket policy to deny uploads of unencrypted objects.",
        "PluginRiskDescription": "S3 bucket policies can be configured to block uploads of objects that are not encrypted."
    },
    "S3 Bucket Lifecycle Configuration": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that S3 buckets have lifecycle configuration enabled to automatically transition S3 bucket objects.",
        "PluginRecommendation": "[DEFAULT] Update S3 bucket and create lifecycle rule configuration",
        "PluginRiskDescription": "S3 bucket should have lifecycle configuration enabled to automatically downgrade the storage class for your objects."
    },
    "S3 Bucket Logging": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures S3 bucket logging is enabled for S3 buckets",
        "PluginRecommendation": "[DEFAULT] Enable bucket logging for each S3 bucket.",
        "PluginRiskDescription": "S3 bucket logging helps maintain an audit trail of \\\n                access that can be used in the event of a security \\\n                incident."
    },
    "S3 Bucket MFA Delete Status": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures MFA delete is enabled on S3 buckets.",
        "PluginRecommendation": "[DEFAULT] Enable MFA Delete on S3 buckets.",
        "PluginRiskDescription": "Adding MFA delete adds another layer of security while changing the version state"
    },
    "S3 Bucket Policy CloudFront OAC": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures S3 bucket is origin to only one distribution and allows only that distribution.",
        "PluginRecommendation": "[DEFAULT] Review the access policy for S3 bucket which is an origin to a CloudFront distribution. Make sure the S3 bucket is origin to only one distribution.",
        "PluginRiskDescription": "Access to CloudFront origins should only happen via ClouFront URL and not from S3 URL or any source in order to restrict access to private data."
    },
    "S3 Bucket Policy CloudFront OAI": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures S3 bucket is origin to only one distribution and allows only that distribution.",
        "PluginRecommendation": "[DEFAULT] Review the access policy for S3 bucket which is an origin to a CloudFront distribution. Make sure the S3 bucket is origin to only one distribution.",
        "PluginRiskDescription": "Access to CloudFront origins should only happen via ClouFront URL and not from S3 URL or any source in order to restrict access to private data."
    },
    "S3 Bucket Public Access Block": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures S3 public access block is enabled on all buckets or for AWS account",
        "PluginRecommendation": "[DEFAULT] Enable the S3 public access block on all S3 buckets or for AWS account.",
        "PluginRiskDescription": "Blocking S3 public access at the account level or bucket-level ensures objects are not accidentally exposed."
    },
    "S3 Secure Transport Enabled": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure AWS S3 buckets enforce SSL to secure data in transit",
        "PluginRecommendation": "[DEFAULT] Update S3 bucket policy to enforse SSL to secure data in transit.",
        "PluginRiskDescription": "S3 buckets should be configured to strictly require SSL connections"
    },
    "S3 Transfer Acceleration Enabled": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that S3 buckets have transfer acceleration enabled to increase the speed of data transfers.",
        "PluginRecommendation": "[DEFAULT] Modify S3 bucket to enable transfer acceleration.",
        "PluginRiskDescription": "S3 buckets should have transfer acceleration enabled to increase the speed of data transfers in and out of Amazon S3 using AWS edge network."
    },
    "S3 Bucket Versioning": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures object versioning is enabled on S3 buckets",
        "PluginRecommendation": "[DEFAULT] Enable object versioning for buckets with \\\n                        sensitive contents at a minimum and for all buckets \\\n                        ideally.",
        "PluginRiskDescription": "Object versioning can help protect against the overwriting of \\\n                objects or data loss in the event of a compromise."
    },
    "S3 Bucket Website Enabled": {
        "PluginDomain": "Storage",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures S3 buckets are not configured with static website hosting",
        "PluginRecommendation": "[DEFAULT] Disable S3 bucket static website hosting in favor or CloudFront distributions.",
        "PluginRiskDescription": "S3 buckets should not be configured with static website hosting with public objects. Instead, a CloudFront distribution should be configured with an origin access identity."
    },
    "S3 Object Read Logging": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Object-level logging for read events is enabled for S3 bucket.",
        "PluginRecommendation": "[DEFAULT] Enable object level logging for read events for each S3 bucket.",
        "PluginRiskDescription": "Enabling Object-level S3 event logging significantly enhances security, especially for sensitive data."
    },
    "S3 Object Write Logging": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Object-level logging for write events is enabled for S3 bucket.",
        "PluginRecommendation": "[DEFAULT] Enable object level logging for Write events for each S3 bucket.",
        "PluginRiskDescription": "Enabling Object-level S3 event logging significantly enhances security, especially for sensitive data."
    },
    "S3 Bucket Has Tags": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS S3 Bucket have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify S3 buckets and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "S3 Bucket Encryption Enforcement": {
        "PluginDomain": "Storage",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] All statements in all S3 bucket policies must have a condition that requires encryption at a certain level",
        "PluginRecommendation": "[DEFAULT] Configure a bucket policy to enforce encryption.",
        "PluginRiskDescription": "S3 buckets support numerous types of encryption, including AES-256, KMS using a default key, KMS with a CMK, or via HSM-based key."
    },
    "S3 Versioned Buckets Lifecycle Configuration": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that S3 buckets having versioning enabled also have lifecycle policy configured for non-current objects.",
        "PluginRecommendation": "[DEFAULT] Configure lifecycle rules for buckets which have versioning enabled",
        "PluginRiskDescription": "When object versioning is enabled on a bucket, every modification/update to an object results in a new version of the object that will be stored indefinitely."
    },
    "S3 Glacier Vault Public Access": {
        "PluginDomain": "Storage",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that S3 Glacier Vault public access block is enabled for the account.",
        "PluginRecommendation": "[DEFAULT] Add access policy for the S3 Glacier Vault to block public access for the AWS account.",
        "PluginRiskDescription": "Blocking S3 Glacier Vault public access at the account level ensures objects are not accidentally exposed."
    },
    "Notebook Data Encrypted": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure Notebook data is encrypted",
        "PluginRecommendation": "[DEFAULT] An existing KMS key should be supplied during Notebook Instance creation.",
        "PluginRiskDescription": "An optional encryption key can be supplied during Notebook Instance creation."
    },
    "Notebook Direct Internet Access": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure Notebook Instance is not publicly available.",
        "PluginRecommendation": "[DEFAULT] Disable DirectInternetAccess for each SageMaker notebook.",
        "PluginRiskDescription": "SageMaker notebooks should not be exposed to the Internet. Public availability can be configured via the DirectInternetAccess attribute."
    },
    "Notebook instance in VPC": {
        "PluginDomain": "Compute",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon SageMaker Notebook instances are launched within a VPC.",
        "PluginRecommendation": "[DEFAULT] Migrate Notebook instances to exist within a VPC",
        "PluginRiskDescription": "Launching instances can bring multiple advantages such as better networking infrastructure, much more flexible control over access security. Also it makes it possible to access VPC-only resources such as EFS file systems."
    },
    "Secret Has Tags": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Secrets Manager secrets have tags associated.",
        "PluginRecommendation": "[DEFAULT] Update Secrets and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "Secrets Manager Secret Rotation Enabled": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures AWS Secrets Manager is configured to automatically rotate the secret for a secured service or database.",
        "PluginRecommendation": "[DEFAULT] Enable secret rotation for your secrets",
        "PluginRiskDescription": "Secrets Manager rotation makes access to your databases and third-party services secure by automatically rotating secrets used to access these resources."
    },
    "Secrets Manager Encrypted Secrets": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures Secrets Manager Secrets are encrypted",
        "PluginRecommendation": "[DEFAULT] Encrypt Secrets Manager Secrets",
        "PluginRiskDescription": "Secrets Manager Secrets should be encrypted. This allows their values to be used by approved systems, while restricting access to other users of the account."
    },
    "Secrets Manager In Use": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon Secrets Manager service is being used in your account to manage all the credentials.",
        "PluginRecommendation": "[DEFAULT] Use Secrets Manager service to store sensitive information in your AWS account.",
        "PluginRiskDescription": "Amazon Secrets Manager helps you protect sensitive information needed to access your cloud applications, services and resources. Users and apps can use secrets manager to get the secrets stored with a call to Secrets Manager API, enhancing access security."
    },
    "Security Hub No Active Findings": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Security Hub active findings do not exist in your AWS account.",
        "PluginRecommendation": "[DEFAULT] Resolve the Security Hub findings and archive them.",
        "PluginRiskDescription": "AWS Security Hub provides you with a comprehensive view of your security state within AWS. It continuously monitors your environment using automated security checks based on AWS best practices and industry standards, and aggregates findings from various AWS services. Active findings should be remediated and archived to maintain a secure environment."
    },
    "Security Hub Enabled": {
        "PluginDomain": "Management and Governance",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Security Hub is enabled.",
        "PluginRecommendation": "[DEFAULT] Enable AWS Security Hub for enhanced security monitoring and compliance.",
        "PluginRiskDescription": "AWS Security Hub provides a comprehensive view of your security posture across your AWS accounts. It aggregates, organises, and prioritises security findings from various AWS services."
    },
    "Email DKIM Enabled": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures DomainKeys Identified Mail (DKIM) is enabled for domains and addresses in SES.",
        "PluginRecommendation": "[DEFAULT] Enable DKIM for all domains and addresses in all regions used to send email through SES.",
        "PluginRiskDescription": "DKIM is a security feature that allows recipients of an email to veriy that the sender domain has authorized the message and that it has not been spoofed."
    },
    "SES Email Messages Encrypted": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon SES email messages are encrypted before delivering them to specified buckets.",
        "PluginRecommendation": "[DEFAULT] Enable encryption for SES email messages if they are being delivered to S3 in active rule-set .",
        "PluginRiskDescription": "Amazon SES email messages should be encrypted in case they are being delivered to S3 bucket to meet regulatory compliance requirements within your organization."
    },
    "Shield Advanced Enabled": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures AWS Shield Advanced is setup and properly configured",
        "PluginRecommendation": "[DEFAULT] Enable AWS Shield Advanced for the account.",
        "PluginRiskDescription": "AWS Shield Advanced provides enhanced DDOS protection for all enrolled services within a subscribed account. Subscriptions should be active."
    },
    "Shield Emergency Contacts": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures AWS Shield emergency contacts are configured",
        "PluginRecommendation": "[DEFAULT] Configure emergency contacts within AWS Shield for the account.",
        "PluginRiskDescription": "AWS Shield Emergency contacts should be configured so that AWS can contact an account representative in the event of a DDOS event."
    },
    "Shield Protections": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures AWS Shield Advanced is configured to protect account resources",
        "PluginRecommendation": "[DEFAULT] Enable AWS Shield Advanced on resources within the account.",
        "PluginRiskDescription": "Once AWS Shield Advanced is enabled, it can be applied to resources within the account including ELBs, CloudFront."
    },
    "SNS Cross Account Access": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures SNS policies disallow cross-account access",
        "PluginRecommendation": "[DEFAULT] Update the SNS policy to prevent access from external accounts.",
        "PluginRiskDescription": "SNS topic policies should be carefully restricted to to subscribe or send messages. Topic policies can be used to limit these privileges."
    },
    "SNS Subscription HTTPS Only": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon SNS subscriptions are configured to use HTTPS protocol",
        "PluginRecommendation": "[DEFAULT] Create a new SNS subscription using HTTPS protocol.",
        "PluginRiskDescription": "Amazon Simple Notification Service (Amazon SNS) is a managed service that provides message delivery from publishers to subscribers. It is important to verify that SNS subscriptions are configured to use the HTTPS protocol."
    },
    "SNS Topic Has Tags": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon SNS topics have tags associated.",
        "PluginRecommendation": "[DEFAULT] Modify SNS topic and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "SNS Topic HTTP Protocol Restriction": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures SNS topics do not allow HTTP protocol.",
        "PluginRecommendation": "[DEFAULT] Adjust the topic policy to only allow authorized AWS users in known accounts to send or subscribe via the HTTP protocol.",
        "PluginRiskDescription": "SNS topics should be configured to restrict access to the HTTP protocol to prevent unauthorized send or subscribe operations."
    },
    "SNS Valid Subscribers": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that Amazon SNS subscriptions are valid and there are no unwanted subscribers.",
        "PluginRecommendation": "[DEFAULT] Check for unwanted SNS subscriptions periodically",
        "PluginRiskDescription": "Amazon Simple Notification Service (Amazon SNS) is a managed service that provides message delivery from publishers to subscribers. So check for appropriate subscribers in order to improve access security to your SNS topics."
    },
    "SNS Topic CMK Encryption": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures Amazon SNS topics are encrypted with KMS Customer Master Keys (CMKs).",
        "PluginRecommendation": "[DEFAULT] Update SNS topics to use Customer Master Keys (CMKs) for Server-Side Encryption.",
        "PluginRiskDescription": "AWS SNS topics should be  encrypted with KMS Customer Master Keys (CMKs) instead of AWS managed-keys"
    },
    "SNS Topic Encrypted": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon SNS topics enforce Server-Side Encryption (SSE)",
        "PluginRecommendation": "[DEFAULT] Enable Server-Side Encryption to protect the content of SNS topic messages.",
        "PluginRiskDescription": "SNS topics should enforce Server-Side Encryption (SSE) to secure data at rest. SSE protects the contents of messages in Amazon SNS topics using keys managed in AWS Key Management Service (AWS KMS)."
    },
    "SNS Topic Policies": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures SNS topics do not allow global send or subscribe.",
        "PluginRecommendation": "[DEFAULT] Adjust the topic policy to only allow authorized AWS users in known accounts to subscribe.",
        "PluginRiskDescription": "SNS policies should not be configured to allow any AWS user to subscribe or send messages. This could result in data leakage or financial DDoS."
    },
    "SQS Queue Unprocessed Messages": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon SQS queue has not reached unprocessed messages limit.",
        "PluginRecommendation": "[DEFAULT] Set up appropriate message polling time and set up dead letter queue for Amazon SQS queue to handle messages in time",
        "PluginRiskDescription": "Amazon SQS queues should have unprocessed messages less than the limit to be highly available and responsive."
    },
    "SQS Cross Account Access": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures SQS policies disallow cross-account access",
        "PluginRecommendation": "[DEFAULT] Update the SQS policy to prevent access from external accounts.",
        "PluginRiskDescription": "SQS policies should be carefully restricted to prevent publishing or reading from the queue from unexpected sources. Queue policies can be used to limit these privileges."
    },
    "SQS Dead Letter Queue": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that each Amazon SQS queue has Dead Letter Queue configured.",
        "PluginRecommendation": "[DEFAULT] Update Amazon SQS queue and configure dead letter queue.",
        "PluginRiskDescription": "Amazon SQS queues should have dead letter queue configured to avoid data loss for unprocessed messages."
    },
    "SQS Encrypted": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures SQS encryption is enabled",
        "PluginRecommendation": "[DEFAULT] Enable encryption using KMS for all SQS queues.",
        "PluginRiskDescription": "Messages sent to SQS queues can be encrypted using KMS server-side encryption. Existing queues can be modified to add encryption with minimal overhead."
    },
    "SQS Encryption Enabled": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure SQS queues are encrypted using keys of desired encryption level",
        "PluginRecommendation": "[DEFAULT] Enable encryption using KMS Customer Master Keys (CMKs) for all SQS queues.",
        "PluginRiskDescription": "Messages sent to SQS queues can be encrypted using KMS server-side encryption. Existing queues can be modified to add encryption with minimal overhead."
    },
    "SQS Has Tags": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensures that Amazon SQS queue has tags associated.",
        "PluginRecommendation": "[DEFAULT] Update SQS queue and add tags.",
        "PluginRiskDescription": "Tags help you to group resources together that are related to or associated with each other. It is a best practice to tag cloud resources to better organize and gain visibility into their usage."
    },
    "SQS Public Access": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that SQS queues are not publicly accessible",
        "PluginRecommendation": "[DEFAULT] Update the SQS queue policy to prevent public access.",
        "PluginRiskDescription": "SQS queues should be not be publicly accessible to prevent unauthorized actions."
    },
    "SSM Agent Active All Instances": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures SSM agents are installed and active on all servers",
        "PluginRecommendation": "[DEFAULT] Install SSM on all servers and ensure it is active.",
        "PluginRiskDescription": "SSM allows for centralized monitoring of all servers and should be activated on all EC2 instances."
    },
    "SSM Agent Auto Update Enabled": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures the SSM agent is configured to automatically update to new versions",
        "PluginRecommendation": "[DEFAULT] Update the SSM agent configuration for all managed instances to use automatic updates.",
        "PluginRiskDescription": "To ensure the latest version of the SSM agent is installed, it should be configured to consume automatic updates."
    },
    "SSM Agent Latest Version": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures SSM agents installed on Linux hosts are running the latest version",
        "PluginRecommendation": "[DEFAULT] Update the SSM agent on all Linux hosts to the latest version.",
        "PluginRiskDescription": "SSM agent software provides sensitive access to servers and should be kept up-to-date."
    },
    "SSM Documents Public Access": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that SSM service has block public sharing setting enabled.",
        "PluginRecommendation": "[DEFAULT] Enable block public sharing setting under SSM  documents preferences.",
        "PluginRiskDescription": "Public documents can be viewed by all AWS accounts. To prevent unwanted access to your documents, turn on the block public access sharing setting."
    },
    "SSM Encrypted Parameters": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures SSM Parameters are encrypted",
        "PluginRecommendation": "[DEFAULT] Recreate unencrypted SSM Parameters with Type set to SecureString.",
        "PluginRiskDescription": "SSM Parameters should be encrypted. This allows their values to be used by approved systems, while restricting access to other users of the account."
    },
    "SSM Managed Instances": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that all Amazon EC2 instances are managed by AWS Systems Manager (SSM).",
        "PluginRecommendation": "[DEFAULT] Configure AWS EC2 instance as SSM Managed Instances",
        "PluginRiskDescription": "Systems Manager simplifies AWS cloud resource management, quickly detects and resolve operational problems, and makes it easier to operate and manage your instances securely at large scale."
    },
    "SSM Session Duration": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Low",
        "PluginTestDescription": "[DEFAULT] Ensure that all active sessions in the AWS Session Manager do not exceed the duration set in the settings.",
        "PluginRecommendation": "[DEFAULT] Terminate all the sessions which exceed the specified duration mentioned in settings.",
        "PluginRiskDescription": "The session manager gives users the ability to either open a shell in a EC2 instance or execute commands in a ECS task. This can be useful for when debugging issues in a container or instance."
    },
    "Timestream Database Encrypted": {
        "PluginDomain": "Databases",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Timestream databases are encrypted with KMS Customer Master Keys (CMKs) instead of AWS managed-keys.",
        "PluginRecommendation": "[DEFAULT] Modify Timestream database encryption configuration to use desired encryption key",
        "PluginRiskDescription": "Timestream encryption at rest provides enhanced security by encrypting all your data at rest using encryption keys."
    },
    "Transfer Logging Enabled": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures AWS Transfer servers have CloudWatch logging enabled.",
        "PluginRecommendation": "[DEFAULT] Provide a valid IAM service role for AWS Transfer servers.",
        "PluginRiskDescription": "AWS Transfer servers can log activity to CloudWatch if a proper IAM service role is provided. This role should be configured for all servers to ensure proper access logging."
    },
    "PrivateLink in Use for Transfer for SFTP Server Endpoints": {
        "PluginDomain": "Content Delivery",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Transfer for SFTP server endpoints are configured to use VPC endpoints powered by AWS PrivateLink.",
        "PluginRecommendation": "[DEFAULT] Configure the SFTP server endpoints to use endpoints powered by PrivateLink.",
        "PluginRiskDescription": "PrivateLink provides secure and private connectivity between VPCs and other AWS resources using a dedicated network."
    },
    "Translate Job Output Encrypted": {
        "PluginDomain": "Compute",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that your Amazon Translate jobs have CMK encryption enabled for output data residing on S3.",
        "PluginRecommendation": "[DEFAULT] Create Translate jobs with customer-manager keys (CMKs).",
        "PluginRiskDescription": "Amazon Translate encrypts your output data with AWS-manager keys by default."
    },
    "AWS WAF In Use": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Web Application Firewall (WAF) is in use to achieve availability and security for AWS-powered web applications.",
        "PluginRecommendation": "[DEFAULT] Create one or more WAF ACLs with proper actions and rules",
        "PluginRiskDescription": "Using WAF for your web application running in AWS environment can help against common web-based attacks, SQL injection attacks, DDOS attacks and more."
    },
    "Web ACL Rules Default Action": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that default Web ACL action is set to",
        "PluginRecommendation": "[DEFAULT] Modify Web ACL and set default action to block requests.",
        "PluginRiskDescription": "Web ACL default action determines whether the incoming request is allowed or blocked when none of the rules are matched. As a security best practice, make sure it is set to \u00e2\u20ac\u02dcBlock\u00e2\u20ac\u2122 when you have configured web ACL rules with allow actions. This will limit the number of users accessing your web app and will reduce the scope of malicious attacks."
    },
    "AWS WAFV2 Cloudwatch Metrics Enabled": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS CloudWatch metrics is enabled for WAFV2 Web ACL rules.",
        "PluginRecommendation": "[DEFAULT] Modify WAFv2 and enable cloud watch metrics.",
        "PluginRiskDescription": "As a security best practice, make sure to enable CloudWatch metrics for all the configured Web ACL rules. These metrics are useful in understanding the access patterns for your web application like allowed, blocked or passed requests based on the rules evaluation."
    },
    "AWS WAFV2 In Use": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS Web Application Firewall V2 (WAFV2) is in use to achieve availability and security for AWS-powered web applications.",
        "PluginRecommendation": "[DEFAULT] Create one or more WAF ACLs with proper actions and rules",
        "PluginRiskDescription": "Using WAF for your web application running in AWS environment can help you against common web-based attacks, SQL injection attacks, DDOS attacks and more."
    },
    "Web ACL Logging Enabled": {
        "PluginDomain": "Availability",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS WAFV2 Web Access Control Lists (ACLs) have logging enabled.",
        "PluginRecommendation": "[DEFAULT] Modify WAFV2 Web ACL and enable logging.",
        "PluginRiskDescription": "Enabling logging for Web ACL allows detailed logging of web requests that match defined rules within the WAF Web ACL. This enables comprehensive monitoring, analysis, and troubleshooting of security threats and traffic patterns within your web application."
    },
    "Unused WorkSpaces": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensure that there are no unused AWS WorkSpaces instances available within your AWS account.",
        "PluginRecommendation": "[DEFAULT] Identify and remove unused Workspaces instance",
        "PluginRiskDescription": "An AWS WorkSpaces instance is considered unused if it has 0 known user connections registered within the past 30 days. Remove these instances to avoid unnecessary billing."
    },
    "WorkSpaces Desired Bundle Type": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that AWS WorkSpaces bundles are of desired types.",
        "PluginRecommendation": "[DEFAULT] Ensure that WorkSpaces instances are using desired bundle types",
        "PluginRiskDescription": "A bundle in AWS WorkSpaces defines the hardware and software for AWS WorkSpaces. You can create a WorkSpaces instance using a predefined or custom bundle. Setting a limit to the types that can be used will help you control billing and address internal compliance requirements."
    },
    "WorkSpaces Healthy Instances": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures that the AWS WorkSpace have healthy instances.",
        "PluginRecommendation": "[DEFAULT] Troubleshoot and resolve the unhealthy workspace issues.",
        "PluginRiskDescription": "Amazon WorkSpace should have healthy and running instances to ensure proper connection. The WorkSpace is marked as Unhealthy if response isn\u00e2\u20ac\u2122t received from the WorkSpace in a timely manner. When the WorkSpaces instance\u00e2\u20ac\u2122s status is unhealthy, it fails to respond to the HealthCheck requests."
    },
    "WorkSpaces Instance Count": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensure that the number of Amazon WorkSpaces provisioned in your AWS account has not reached set limit.",
        "PluginRecommendation": "[DEFAULT] Ensure that number of WorkSpaces created within your AWS account is within set limit",
        "PluginRiskDescription": "In order to manage your WorkSpaces compute resources efficiently and prevent unexpected charges on your AWS bill, monitor and configure limits for the maximum number of WorkSpaces instances provisioned within your AWS account."
    },
    "Workspaces IP Access Control": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "Medium",
        "PluginTestDescription": "[DEFAULT] Ensures enforced IP Access Control on Workspaces",
        "PluginRecommendation": "[DEFAULT] Enable proper IP Access Controls for all workspaces",
        "PluginRiskDescription": "Checking the existence of IP Access control on Workspaces and ensuring that no Workspaces are open"
    },
    "WorkSpaces Volume Encryption": {
        "PluginDomain": "Identity and Access Management",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures volume encryption on WorkSpaces for data protection.",
        "PluginRecommendation": "[DEFAULT] Modify WorkSpaces to enable volume encryption",
        "PluginRiskDescription": "AWS WorkSpaces should have volume encryption enabled in order to protect data from unauthorized access."
    },
    "XRay Encryption Enabled": {
        "PluginDomain": "Application Integration",
        "PluginSeverity": "High",
        "PluginTestDescription": "[DEFAULT] Ensures CMK-based encryption is enabled for XRay traces.",
        "PluginRecommendation": "[DEFAULT] Update XRay encryption configuration to use a CMK.",
        "PluginRiskDescription": "AWS XRay supports default encryption based on an AWS-managed KMS key as well as encryption using a customer managed key (CMK). For maximum security, the CMK-based encryption should be used."
    }
}